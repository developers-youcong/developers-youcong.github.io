<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初学者摸索之算法学习</title>
      <link href="/2019/06/01/%E5%88%9D%E5%AD%A6%E8%80%85%E6%91%B8%E7%B4%A2%E4%B9%8B%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/06/01/%E5%88%9D%E5%AD%A6%E8%80%85%E6%91%B8%E7%B4%A2%E4%B9%8B%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>此文转自我个人微信公众号，时间虽然过去已经四个多月了，但是我个人认为还是能够给大家带来启发意义，所以借这个时间分享给大家，微信公众号分享比较有限，而且时效性也比较差，而博客时效性比较好，而且还能集思广益，欢迎朋友在评论区留言，俗话说，众人拾柴火焰高。<br><a id="more"></a><br>原文如下:</p><p>春节的假期在家待了10天。明天就要回北京了。</p><p>微信公众号文章也停更了两周。感谢每天新关注的朋友们，同时也感谢一直关注和支持的朋友们。2019年争取输出更多的技术干货或者其它非技术干货(不过我对于我的微信公众号定义主要还是以技术导向为主，非技术可能会少一些)。</p><p>算法对我来说，用一句诗歌来说，“蜀道难，难于上青天”。</p><p>原本之前想着用一年时间来攻克，现在看来可能性不大。</p><p>身处在一线城市于我而言，不仅仅需要通过闲暇时间学习算法，同时我也还要学习最新的技术，同时也还要时常补补计算机相关的基础(当年不努力，太过对自己放松所造成的后果)。</p><p>春节假期中，不仅仅放松玩了玩，比如跑得快、王者、看电影及其和几个好哥们聚会，同时也刷了下知乎，在知乎中东看看西看看，看了好几篇于我目前而言比较感兴趣的文章，如何学好算法。</p><p>于我目前而言算法并没有给我带来实际的利益，至少没有其它软件工程技术那样给我带来直观的利益(比如使用shiro我可以轻松的完成接口权限控制、使用Nginx做负载均衡、使用Redis缓存数据等这样的例子数不胜数）。</p><p>由此可以推断出算法对我而言实际利益并不大，但我为什么要坚持要学呢？</p><p>以拉勾、boss直聘等招聘网站来说，一些上市大公司和大部分中小公司所要求的主要是丰富的项目经验和对开发常用技术掌握的非常熟练、某些特定领域的经验，比如银行、医疗、办公等，对于算法方面的能力并不十分看重(当然了，如果是在校参加过acm比赛获奖、刷过算法题的或者是github上有过开源项目的也是一项优势)。</p><p>比如下图所示:</p><p>图一:<br><img src="/2019/06/01/初学者摸索之算法学习/01.png" alt=""></p><p>图二:<br><img src="/2019/06/01/初学者摸索之算法学习/02.png" alt=""></p><p>图三:<br><img src="/2019/06/01/初学者摸索之算法学习/03.png" alt=""></p><p>如果要说给出的理由的话，我觉得能够说服我自己的最大的理由是我不想成为一名码农(我对码农的定义的是将脑力劳动变成的体力劳动，经过这一年多的开发，我发现在工作中，有一半是体力，有一半是脑力，其实那一半体力是可以靠脑力解决的)。</p><p>另外研究算法的也是为了更好的读懂Java源代码和Spring源码相关的,作为一名Java后端开发，不深入了解源代码的实现思路是很难混的好的(主要指靠技术吃饭)。我觉得一个算法能力强的人读Java源代码和Spring源码及其其它相关的软件源码要比算法能力弱的人效率高的多。尽管两者之间不一定是正比。</p><p>关于算法学习(我作为初学者就不多说太多了，参考前辈们的经验)</p><p>当然了，虽说不说太多，但是还是要说的。</p><p>我对我目前的要求，只有一条。</p><p>一道算法题目，将思路想清楚想明白了将其攻克，再继续下一道题目和尽可能不借鉴其它已知的解决方案(参考不少知友的回答加上以自己1月份的做题经验来说，没有经过深度思考尝试多次解题直接去参考现成答案，收获太小，效率不高，感觉太浪费时间了)。</p><p>知友们给出的观点(如何学好算法)，如下图所示:</p><p>图一:<br><img src="/2019/06/01/初学者摸索之算法学习/04.png" alt=""></p><p>图二:<br><img src="/2019/06/01/初学者摸索之算法学习/05.png" alt=""></p><p>图三:<br><img src="/2019/06/01/初学者摸索之算法学习/06.png" alt=""><br>看了这篇知友的回答，我点击该链接:</p><p><a href="https://visualgo.net/en" target="_blank" rel="noopener">https://visualgo.net/en</a></p><p>这个链接的效果图，如下所示:<br><img src="/2019/06/01/初学者摸索之算法学习/07.png" alt=""></p><p>点击其中的一个，以排序为例(它会以动画的形式展现，有助于更形象的感受，可以作为算法学习的辅助工具):<br><img src="/2019/06/01/初学者摸索之算法学习/08.png" alt=""></p><p>图四(为什么要学算法)：<br><img src="/2019/06/01/初学者摸索之算法学习/09.png" alt=""></p><p>图五(有没有学不会算法的人):<br><img src="/2019/06/01/初学者摸索之算法学习/10.png" alt=""><br>这让我想起曾经看过的一篇文章，说的是一位十几岁就出来打工，快三十岁或者三十岁以上年龄咬紧牙关学软件开发，最终还是学成对的。由此看，人必须要有决心，想当初新中国建立也才十来年，自力更生造出了原子弹、氢弹等核武器，使我们不再受制于他国的核威胁。</p><p>关于刷算法题网站有很多，比如目前我常用的就是力扣，</p><p>力扣题库(也就是现在比较出名的leetcode，记得前段时间我们经理招人时，特别强调这么几点，有leetcode刷题经验的、有个人github的、有个人博客的优先):</p><p><a href="https://leetcode-cn.com/problemset/all/" target="_blank" rel="noopener">https://leetcode-cn.com/problemset/all/</a></p><p>还有一个国内挺出名的牛客网:</p><p><a href="https://www.nowcoder.com/" target="_blank" rel="noopener">https://www.nowcoder.com/</a></p><p>图六:<br><img src="/2019/06/01/初学者摸索之算法学习/11.png" alt=""></p><p>想到我当初看书，一周一本书，然而并没有什么用处。</p><p>有句话叫做，欲速则不达。</p><p>慢就是快，快就是慢。</p><p>举例说明:</p><p>以我为例，经理要求某个功能时，我在完成该功能之前，事先画个草图，仔细分析，功能拆分(通常要求的功能是一个大的功能，大的功能一般包含好几个小功能)，再度确认(将列举画好的草图跟经理确认一遍，这样的好处是，确定需求无误，减少盲目开干浪费时间)。事实上证明是非常有必要的，前期我没有这样做，盲目埋头干导致的需求没有理解透，做出的功能也不对，以至于重做(重做是一件非常痛苦的事情)，很多程序员都有过这样的经历，新增功能是一件很容易的事情，但是要重构原有的功能代码是一件很不容易的事情(特别是时间过了很长，如果编码规范不是特别好的话，会导致许多问题，比如代码可读性、代码耦合性等，我觉得这两个是维护代码最痛苦的事情)。</p><p>由此推论出如下:</p><p>给定需求-&gt;分析思考需求(确定需求的合理性，功能多少，时间周期，能不能做)-&gt;跟领导确定需求-&gt;需求确定，撸起键盘开敲-&gt;完成后的效果，找产品经理或者领导确认。</p><p>这一个流程下来时间虽然花不少，但是想想如果没有听清需求正确分析需求直接开敲那样的后果，你会发现这样做其实是很节约时间的，所以正好验证，慢就是快。</p><p>今天就说到这吧，回到北京后，一切都将回到正轨。</p><p>继续我的工程师成长之路。</p><p>另祝2019年，大家都能实现自己的目标，也许实现目标的过程中是一件比较痛苦的事情，但是想想度过这段痛苦的过程后，你将会获得无比强大的力量。</p><p>我的微信公众号，如图:<br><img src="/2019/06/01/初学者摸索之算法学习/12.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之快速排序</title>
      <link href="/2019/05/28/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
      <url>/2019/05/28/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2><span id="分而治之又称dampc">分而治之(又称D&amp;C)</span></h2><p>书中举了一个例子，假设你是农场主，有一块土地，如图所示:<br><img src="/2019/05/28/算法图解之快速排序/01.png" alt=""><br>你要将这块地均匀分成方块，且分出的方块要尽可能大。<br><img src="/2019/05/28/算法图解之快速排序/02.png" alt=""></p><p>从图上看，显然是不符合预期结果的。<br><a id="more"></a><br>那么如何将一块地均匀分成方块，并确保分出的方块是最大的呢？使用D&amp;C策略。</p><p>(1)D&amp;C算法是递归的;<br>(2)使用D&amp;C解决问题的过程包括两个步骤:<br>a.找出基线条件，这种条件必须尽可能简单;<br>b.不断将问题分解(或者说缩小规模)，直到符合基线条件;</p><p>就如何保证分出的方块是最大的呢？《算法图解》中的快速排序一章提到了欧几里得算法。</p><p>什么是欧几里得算法?<br>欧几里得算法又称辗转相除法，是指用于计算两个正整数a,b的最大公约数。<br>应用领域有数学和计算机两个方面。</p><p>举个代码例子说一下欧几里得算法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">public class Euclid &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int m = 63;</span><br><span class="line">int n = 18;</span><br><span class="line">int remainer = 0;</span><br><span class="line">while(n!=0) &#123;</span><br><span class="line">remainer = m % n;</span><br><span class="line">m = n;</span><br><span class="line">n = remainer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最终的结果是9，正好63和18的最大公因数也是9.<br>其中也体现着分而治之的思想。记住，分而治之并非可用于解决问题的算法而是一种解决问题的思路。</p><p>再举个例子说明，如图所示:<br><img src="/2019/05/28/算法图解之快速排序/03.png" alt=""><br>需要将这些数字相加，并返回结果，使用循环很容易完成这种任务，以Java为例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">public class Euclid &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int []num = new int[] &#123;2,4,6&#125;;</span><br><span class="line">int total = 0;</span><br><span class="line">for (int i = 0; i &lt; num.length; i++) &#123;</span><br><span class="line">total += num[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(total);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2><span id="快速排序">快速排序</span></h2><p>快速排序是一种常用的排序算法，比选择排序快的多。<br>代码示例如下(快速排序):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">public class QuickSort &#123;</span><br><span class="line"></span><br><span class="line">    //声明静态的 getMiddle() 方法，该方法需要返回一个 int 类型的参数值，在该方法中传入 3 个参数</span><br><span class="line">public static int getMiddle(int[] list,int low,int high) &#123;</span><br><span class="line"></span><br><span class="line">int tmp = list[low];//数组的第一个值作为中轴(分界点或关键数据)</span><br><span class="line"></span><br><span class="line">while(low&lt;high) &#123;</span><br><span class="line"></span><br><span class="line">while(low&lt;high &amp;&amp; list[high]&gt;tmp) &#123;</span><br><span class="line">high--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list[low] = list[high];//比中轴小的记录移到低端</span><br><span class="line"></span><br><span class="line">while(low&lt;high&amp;&amp;list[low]&lt;tmp) &#123;</span><br><span class="line">low++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list[high]=list[low];//比中轴大的记录移到高端</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list[low] = tmp;//中轴记录到尾</span><br><span class="line"></span><br><span class="line">return low;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//创建静态的 unckSort() 方法，在该方法中判断 low 参数是否小于 high 参数，如果是则调用 getMiddle() 方法，将数组一分为二，并且调用自身的方法进行递归排序</span><br><span class="line">public static void unckSort(int[] list,int low,int high) &#123;</span><br><span class="line"></span><br><span class="line">if(low&lt;high) &#123;</span><br><span class="line"></span><br><span class="line">int middle = getMiddle(list,low,high);//将list数组一分为二</span><br><span class="line">unckSort(list,low,middle-1);//对低字表进行递归排序</span><br><span class="line">unckSort(list,middle+1,high);//对高字表进行递归排序</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//声明静态的 quick() 方法，在该方法中判断传入的数组是否为空，如果不为空，则调用 unckSort() 方法进行排序</span><br><span class="line">public static void quick(int[] str) &#123;</span><br><span class="line">if(str.length&gt;0) &#123;</span><br><span class="line">//查看数组是否为空</span><br><span class="line">unckSort(str,0,str.length-1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//测试</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">int[] number = &#123;13,15,24,99,14,11,1,2,3&#125;;</span><br><span class="line">System.out.println(&quot;排序前:&quot;);</span><br><span class="line">for (int i : number) &#123;</span><br><span class="line">System.out.print(i+&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">quick(number);</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;\r排序后:&quot;);</span><br><span class="line">for (int i : number) &#123;</span><br><span class="line">System.out.print(i+&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>此示例来自<a href="http://c.biancheng.net/view/929.html" target="_blank" rel="noopener">Java数组排序：Java快速排序（Quicksort）法</a></p><p>没有什么比代码示例来的直接痛快。</p><h2><span id="再谈大o表示法">再谈大O表示法</span></h2><p>快速排序的独特之处在于，其速度取决于选择的基准值。</p><p>常见的大O运行时间图，如下:<br><img src="/2019/05/28/算法图解之快速排序/04.png" alt=""><br>上述图表中的时间是基于每秒执行10次操作计算得到的。这些数据并不准确，这里提供它们只是想让你对这些运行时间的差别有大致认识。实际上，计算机每秒执行的操作远远不止10次。</p><p>在该节中，作者说合并排序比选择排序要快的多。合并排序，用数学公式表示为O(n log n)，而选择排序为O(n的2次方)。<br>合并代码排序例子如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class MergeSort &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static void mergeSort(int[] original) &#123;</span><br><span class="line">        if (original == null) &#123;</span><br><span class="line">            throw new NullPointerException(&quot;The array can not be null !!!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        int length = original.length;</span><br><span class="line">        if (length &gt; 1) &#123;</span><br><span class="line">            int middle = length / 2;</span><br><span class="line">            int partitionA[] = Arrays.copyOfRange(original, 0, middle);// 拆分问题规模</span><br><span class="line">            int partitionB[] = Arrays.copyOfRange(original, middle, length);</span><br><span class="line">            // 递归调用</span><br><span class="line">            mergeSort(partitionA);</span><br><span class="line">            mergeSort(partitionB);</span><br><span class="line">            sort(partitionA, partitionB, original);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void sort(int[] partitionA, int[] partitionB, int[] original) &#123;</span><br><span class="line">        int i = 0;</span><br><span class="line">        int j = 0;</span><br><span class="line">        int k = 0;</span><br><span class="line">        while (i &lt; partitionA.length &amp;&amp; j &lt; partitionB.length) &#123;</span><br><span class="line">            if (partitionA[i] &lt;= partitionB[j]) &#123;</span><br><span class="line">                original[k] = partitionA[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                original[k] = partitionB[j];</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        if (i == partitionA.length) &#123;</span><br><span class="line">            while (k &lt; original.length) &#123;</span><br><span class="line">                original[k] = partitionB[j];</span><br><span class="line">                k++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else if (j == partitionB.length) &#123;</span><br><span class="line">            while (k &lt; original.length) &#123;</span><br><span class="line">                original[k] = partitionA[i];</span><br><span class="line">                k++;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void print(int[] array) &#123;</span><br><span class="line">        if (array == null) &#123;</span><br><span class="line">            throw new NullPointerException(&quot;The array can not be null !!!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = new StringBuilder(&quot;[&quot;);</span><br><span class="line">        for (int element : array) &#123;</span><br><span class="line">            sb.append(element + &quot;, &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        sb.replace(sb.length() - 2, sb.length(), &quot;]&quot;);</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    long startTime = System.currentTimeMillis();    //获取开始时间</span><br><span class="line"></span><br><span class="line">    int original[] = new int[] &#123; 13,15,24,99,14,11,1,2,3 &#125;;</span><br><span class="line">    for (int i = 0; i &lt; original.length; i++) &#123;</span><br><span class="line">System.out.print(original[i]+&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line">        mergeSort(original);</span><br><span class="line">        print(original);</span><br><span class="line">    long endTime = System.currentTimeMillis();    //获取结束时间</span><br><span class="line"></span><br><span class="line">    System.out.println(&quot;程序运行时间：&quot; + (endTime - startTime) + &quot;ms&quot;);    //输出程序运行时间</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>此示例来自<a href="https://blog.csdn.net/hjxaslzyy/article/details/61463470" target="_blank" rel="noopener"><br>java实现合并排序算法</a></p><h2><span id="比较快速排序与合并排序">比较快速排序与合并排序</span></h2><p>还是以上面的代码例子为例:<br>快速排序代码例子，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">public class QuickSort &#123;</span><br><span class="line"></span><br><span class="line">    //声明静态的 getMiddle() 方法，该方法需要返回一个 int 类型的参数值，在该方法中传入 3 个参数</span><br><span class="line">public static int getMiddle(int[] list,int low,int high) &#123;</span><br><span class="line"></span><br><span class="line">int tmp = list[low];//数组的第一个值作为中轴(分界点或关键数据)</span><br><span class="line"></span><br><span class="line">while(low&lt;high) &#123;</span><br><span class="line"></span><br><span class="line">while(low&lt;high &amp;&amp; list[high]&gt;tmp) &#123;</span><br><span class="line">high--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list[low] = list[high];//比中轴小的记录移到低端</span><br><span class="line"></span><br><span class="line">while(low&lt;high&amp;&amp;list[low]&lt;tmp) &#123;</span><br><span class="line">low++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list[high]=list[low];//比中轴大的记录移到高端</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list[low] = tmp;//中轴记录到尾</span><br><span class="line"></span><br><span class="line">return low;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//创建静态的 unckSort() 方法，在该方法中判断 low 参数是否小于 high 参数，如果是则调用 getMiddle() 方法，将数组一分为二，并且调用自身的方法进行递归排序</span><br><span class="line">public static void unckSort(int[] list,int low,int high) &#123;</span><br><span class="line"></span><br><span class="line">if(low&lt;high) &#123;</span><br><span class="line"></span><br><span class="line">int middle = getMiddle(list,low,high);//将list数组一分为二</span><br><span class="line">unckSort(list,low,middle-1);//对低字表进行递归排序</span><br><span class="line">unckSort(list,middle+1,high);//对高字表进行递归排序</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//声明静态的 quick() 方法，在该方法中判断传入的数组是否为空，如果不为空，则调用 unckSort() 方法进行排序</span><br><span class="line">public static void quick(int[] str) &#123;</span><br><span class="line">if(str.length&gt;0) &#123;</span><br><span class="line">//查看数组是否为空</span><br><span class="line">unckSort(str,0,str.length-1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//测试</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">long startTime = System.currentTimeMillis();    //获取开始时间</span><br><span class="line"></span><br><span class="line">int[] number = &#123; 13,15,24,99,14,11,1,2,3,2,32,4321,432,3,14,153,23,42,12,34,15,312,12,43,3214,43214,43214,43214,12,2432,12,34,24,4532,1234&#125;;</span><br><span class="line"></span><br><span class="line">quick(number);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for (int i : number) &#123;</span><br><span class="line">System.out.print(i+&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line">long endTime = System.currentTimeMillis();    //获取结束时间</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;程序运行时间：&quot; + (endTime - startTime) + &quot;ms&quot;);    //输出程序运行时间</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果，如图:<br><img src="/2019/05/28/算法图解之快速排序/05.png" alt=""></p><p>半天看不到输出结果，而程序仍在运行中。如果将数组中的元素还原为原来那几个，则很快看到结果。</p><p>合并代码例子，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class MergeSort &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static void mergeSort(int[] original) &#123;</span><br><span class="line">        if (original == null) &#123;</span><br><span class="line">            throw new NullPointerException(&quot;The array can not be null !!!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        int length = original.length;</span><br><span class="line">        if (length &gt; 1) &#123;</span><br><span class="line">            int middle = length / 2;</span><br><span class="line">            int partitionA[] = Arrays.copyOfRange(original, 0, middle);// 拆分问题规模</span><br><span class="line">            int partitionB[] = Arrays.copyOfRange(original, middle, length);</span><br><span class="line">            // 递归调用</span><br><span class="line">            mergeSort(partitionA);</span><br><span class="line">            mergeSort(partitionB);</span><br><span class="line">            sort(partitionA, partitionB, original);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void sort(int[] partitionA, int[] partitionB, int[] original) &#123;</span><br><span class="line">        int i = 0;</span><br><span class="line">        int j = 0;</span><br><span class="line">        int k = 0;</span><br><span class="line">        while (i &lt; partitionA.length &amp;&amp; j &lt; partitionB.length) &#123;</span><br><span class="line">            if (partitionA[i] &lt;= partitionB[j]) &#123;</span><br><span class="line">                original[k] = partitionA[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                original[k] = partitionB[j];</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        if (i == partitionA.length) &#123;</span><br><span class="line">            while (k &lt; original.length) &#123;</span><br><span class="line">                original[k] = partitionB[j];</span><br><span class="line">                k++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else if (j == partitionB.length) &#123;</span><br><span class="line">            while (k &lt; original.length) &#123;</span><br><span class="line">                original[k] = partitionA[i];</span><br><span class="line">                k++;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void print(int[] array) &#123;</span><br><span class="line">        if (array == null) &#123;</span><br><span class="line">            throw new NullPointerException(&quot;The array can not be null !!!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = new StringBuilder(&quot;[&quot;);</span><br><span class="line">        for (int element : array) &#123;</span><br><span class="line">            sb.append(element + &quot;, &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        sb.replace(sb.length() - 2, sb.length(), &quot;]&quot;);</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    long startTime = System.currentTimeMillis();    //获取开始时间</span><br><span class="line"></span><br><span class="line">    int original[] = new int[] &#123; 13,15,24,99,14,11,1,2,3,2,32,4321,432,3,14,153,23,42,12,34,15,312,12,43,3214,43214,43214,43214,12,2432,12,34,24,4532,1234&#125;;</span><br><span class="line">    for (int i = 0; i &lt; original.length; i++) &#123;</span><br><span class="line">System.out.print(original[i]+&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line">        mergeSort(original);</span><br><span class="line">        print(original);</span><br><span class="line">    long endTime = System.currentTimeMillis();    //获取结束时间</span><br><span class="line"></span><br><span class="line">    System.out.println(&quot;程序运行时间：&quot; + (endTime - startTime) + &quot;ms&quot;);    //输出程序运行时间</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果，如图:<br><img src="/2019/05/28/算法图解之快速排序/06.png" alt=""></p><p>通过两者对比，我们很容易得出合并排序比快速排序快。</p><p>参考这个<a href="https://www.cnblogs.com/stwzhong/p/3380395.html" target="_blank" rel="noopener">合并排序和快速排序执行时间比较</a></p><p>作者通过实验得出一个结论:<strong>当数据量较小的时候，快速排序比合并排序运行时间要短，运行时间短就表示快，但是当数据量大的时候，合并排序比快速排序运行时间要短</strong>。<br>由此通过我上述的代码实验和该文章作者试验，可证实这个结论。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04Apache负载均衡+集群</title>
      <link href="/2019/05/28/Ubuntu16-04Apache%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1-%E9%9B%86%E7%BE%A4/"/>
      <url>/2019/05/28/Ubuntu16-04Apache%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1-%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>mod_proxy ，主代理模块Apache模块用于重定向连接;它允许Apache充当底层应用程序服务器的网关。<br>mod_proxy_http ，它增加了对代理HTTP连接的支持。<br>mod_proxy_balancer和mod_lbmethod_byrequests ，它为多个后端服务器添加负载平衡功能。</p><p>为了保证配置流程正常，请执行如下命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod proxy</span><br><span class="line">sudo a2enmod proxy_http</span><br><span class="line">sudo a2enmod proxy_balancer</span><br><span class="line">sudo a2enmod lbmethod_byrequests</span><br><span class="line">/etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>编辑该配置文件(vim /etc/apache2/sites-available/000-default.conf)，添加如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line"></span><br><span class="line">    ProxyPass / http://127.0.0.1:8080/</span><br><span class="line">    ProxyPassReverse / http://127.0.0.1:8080/</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p>这样就可以访问了，但是如果是多台服务器的话，添加如下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">&lt;Proxy balancer://mycluster&gt;</span><br><span class="line">    BalancerMember http://127.0.0.1:8080</span><br><span class="line">    BalancerMember http://127.0.0.1:8081</span><br><span class="line">&lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line"></span><br><span class="line">    ProxyPass / balancer://mycluster/</span><br><span class="line">    ProxyPassReverse / balancer://mycluster/</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p>换言之如果是https请求，配置也是一样的，不一样的是文件不同(如果是配置https，需要修改/etc/apache2/sites-available/default-ssl.conf)<br>内容与上面一样，唯一不一样的是端口，SSL默认是443端口。</p><p>如果你不知道apache如何配置https,可以参考我的这篇博客<a href="https://developers-youcong.github.io/2019/05/17/Ubuntu16-04%E4%B9%8BApache2-4%E9%85%8D%E7%BD%AESSL%E8%AF%81%E4%B9%A6/">Ubuntu16.04之Apache2.4配置SSL证书</a></p><p>本文参考链接资料如下:<br><a href="https://www.howtoing.com/how-to-use-apache-as-a-reverse-proxy-with-mod-proxy-on-ubuntu-16-04" target="_blank" rel="noopener">如何在Ubuntu 16.04上使用Apache的mod_proxy作为反向代理</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致所有的开发者们</title>
      <link href="/2019/05/27/%E8%87%B4%E6%89%80%E6%9C%89%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E4%BB%AC/"/>
      <url>/2019/05/27/%E8%87%B4%E6%89%80%E6%9C%89%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E4%BB%AC/</url>
      
        <content type="html"><![CDATA[<p>此文来自我个人微信公众号，总的来说，阅读量和反馈都还挺不错，借此分享给广大的博友们。</p><p>本文主要内容为如下几个方面?</p><p>为什么要有一个自己的博客</p><p>为什么要让自己的GitHub活跃起来</p><p>每天给自己一点学习的时间<br><a id="more"></a></p><h2><span id="一-为什么要有一个自己的博客">一、为什么要有一个自己的博客</span></h2><p>关于为什么要有一个自己的博客这个问题，其实与为什么要写博客基本上是相通的。</p><p>首先说说关于为什么要写博客？</p><p>写博客的目的很简单，就是为了总结和记录，记录工作中遇到的问题，总结项目的得失或者是自己没有深刻理解某个API导致出现了某某问题等。</p><p>如果再往高度说，就是为了分享。分享自己遇到的坑以及是如何填了这个坑及其自己到底是因为什么原因才落入了这个坑。在写的过程中，也是让自己在思考，经过深度的思考和总结，能够避免再度重蹈覆辙。</p><p>写博客给我带来的好处？</p><p>(1)提高效率(比如我需要搭建Ubuntu16.04的项目环境时，我直接就可以参考自己的博客来实现快速搭建);</p><p>(2)深究问题，提高知识深度。有的时候解决一些问题时，我们往往都满足于解决了就行，而非深究这个问题，这时再写博客的时候，我就会问自己，为什么会出现这个问题，有时候弄清楚为什么比怎么解决更重要，因为当你知道了为什么时，就基本上已经有了如何解决这个问题的思路。</p><p>(3)引导新人和帮助同事。特别是团队带新人的时候，有的时候新人遇到一些问题(这些问题基本上都是老鸟们已经遇到过)，这时新人遇到了时，你可以将你的博客分享给他，让他自己看，这时博客就可以起到引领新人的目的(张开涛先生曾经写博客系列文章也是这个目的)，当然了，如果时间比较宽裕的话，可以告诉他问题的原因和解决思路;</p><p>(4)知识系统化。我认为无论学什么编程语言和框架都需要系统化地去学，像比如HelloWorld这样的例子，基本上都能学会，有不少朋友仅仅满足于拿这个技术跑起来一个简单的例子就表示自己已经掌握了这门技术，就不再继续学习下去了，除非公司真正的要用到时才去比较系统的去学一下。</p><p>比如曾经的我就是如此，曾经的我Python和Node.js我都学过，但是现在的话，留下的只有Node.js，Node.js还是因为最近对Settings-Sync插件二次开发的时候才去比较系统地去学习。知识系统化的目的在于让自己所储备的知识树更加扎实稳定。</p><p>(5)让思路更清晰。写作的同时也是理清思路。特别是开发过程中，思路清晰很重要，思路不清晰基本上等于无用功。</p><p>写博客的好处很多，这里就不一一说了。写博客，坚持很重要。宁可不写也不能敷衍了事。</p><p>有朋友说有了家庭有了小孩哪有那么多时间来写这些呢？</p><p>我对此的回答是:定期总结很重要，可以不那么频繁。比如单身的时候每天写一篇两篇或者是两天篇之类的频率，有了女朋友然后到结婚再到有了小孩可以根据自己的时间进行合理安排。不过坚持，本人认为很重要，千万不能三天打鱼两天晒网。记得我刚开始写博客的时候，的确觉得好难写，另外也觉得网上明明就有现成的答案，我何必多次一举呢。关于刚刚开始写觉得很难这个问题，万事开头难，这是肯定的，联想到广大的小伙伴们在校学计算机时，特别是从农村出来的朋友们(这里不是歧视)，哪一个学计算机又是轻松的呢？写博客亦是如此。</p><p>关于有人说，我文采不好我写不好怎么办?</p><p>我对此的回答是我文采也不好啊。写博客的主要目的是让自己总结和记录而非一定要在此中展示文采。其次在写多的前提下，慢慢让文章具有条理性，然后分享给广大的朋友们。至于文采方面，放眼古今中外又有哪一个天生就写的一首好文章的呢？也许有，但我不知道。</p><p>回到一个原有的问题上来，为什么要有一个自己的博客？</p><p>原因有这么几个方面?</p><p>第一、安全感。时代总是在变，谁也不能保证今天的东西，明天不会淘汰(比如曾经的雅虎是多么的风光，而今早已不复当年勇了或者更糟糕地像AT&amp;T烟消云散)。</p><p>第二、利于学习。我想从学习的角度来说，我做过不少项目，发现很多项目与我以前在学校的时候做的博客本质上差别并不大，比如权限管理、内容管理等。权限管理又可以有角色、菜单、组织部门、总公司和分公司等。内容管理又可以包含客户信息、人力资源管理、财务报表、商品管理、医疗管理等。而这些其实都可以在博客系统里面进行复现。写一个博客系统，不仅仅是提高自己的实践能力，同时也是在提高项目认知。</p><p>第三、提高影响力。比如阮一峰先生的博客就是一个很好的证明。当然了，还有很多知名博主。关于这个影响力的好处我就不多说了。</p><p>关于搭建自己的博客，目前有这么几个平台可以轻松搭建？</p><p>(1)GitHub。比如我的GitHub博客平台是使用Hexo，地址为:</p><p><a href="https://developers-youcong.github.io/">https://developers-youcong.github.io/</a></p><p>(2)WordPress。WordPress的名气就不多说了。记得GitHub里面的一个开源项目Jeecg的插件开发我觉得其就是参考WordPress的。</p><p>关于WordPress平台搭建也可以参考我的这篇博客:</p><p>Ubuntu16.04搭建WordPress:</p><p><a href="https://www.cnblogs.com/youcong/p/9309197.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/9309197.html</a></p><p>CentOS7搭建WordPress:</p><p><a href="https://www.cnblogs.com/youcong/p/9240603.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/9240603.html</a></p><p>(3)Jekyllt。关于Jekyllt需要搭建对应的Ruby环境。不过我没有搭建过，更多可以参考其官网。</p><p>(4)自己动手丰衣足食。可以选择自己写，编程语言可以是Java，也可以是Node.js或PHP。最近本人自己就在写，当然了，写也不是完全没有参考的，当初在学校的时候，主要是参考像CSDN、博客园等这样的。现在写的话主要还是站在巨人的肩上，比如我现在主要参考系就是WordPress。之所以写博客也是为了实践自己看的书，比如像分布式存储之类、高并发等。我一直就不喜欢背那些面试题，因为不理解的话根本记不住，只要理解的话，基本很难会忘记。</p><p>关于上述平台除了GitHub之外，其它都需要你自己有一个服务器才行。</p><p>关于服务器大家可以去阿里云或者腾讯云、百度云都行。</p><p>也许有人说，我不会Linux。我对此的回答是不会可以去学。在上学时期的时候一篇文章对我印象深刻，文章这样说，“爱看书的青年,大可以看看本分以外的书,即使和本业毫不相干的,也要泛览。譬如学理科的,偏看看文学书,学文科的,偏看看理科书,看看别个在那里研究的,究竟是怎么一回事。这样子,对于别人,别事,可以有更深的了解。在博的基础上,要渐择而入于己所爱的较专的一门或几门。”</p><p>这句话联系到我这位开发工程师身上，我的感触如下:</p><p>我觉得作为一名软件开发工程师，不仅仅局限于软件这一块，同时也要关注其他行业并结交其他行业的朋友，当然了，在此过程中，还是得读读书。</p><p>再说句行内话，我觉得像做后端开发，比如Java不仅仅要把后端做通，在足以胜任后端工作的前提下(这个胜任不仅仅表示你能够把活干好，同时也表示着你多少知道一些框架方面的底层实现)，也可以去学学像微信小程序、安卓开发之类的。</p><p>而安卓方面则也可以对学学Java相关的，比如安卓就是基于Java语言。再比如像处于中小公司的开发人员一般身兼数职，做后台的往往也兼任前台，前台一般用前端框架(比如vue、angular、react或者是jQuery、BootStrap、AdminLTE、Metronic等)。不过这些框架的基础就是网页三剑客(HTML+CSS+JavaScript)。</p><p>经过这一圈你会发现技术本质上区别并不大。也许我工作年限不长说这句话有点狂妄了点。以我18年学Python、Node.js、Perl、PHP等来说，基本上很多都是相通的。当然了，我也不建议东打一拳西打一拳的学习方式。因为非常浪费时间，效率又低。学习最有效的方式是带有目的性，比如我想用SpringBoot+SpringCloud/Dubbo+PostgreSQL写一个简单的CMS(其实传统Servlet+JSP+JDBC就能做这些，我之所以这样做是因为加深感性认识，这个感性认识，不仅仅包括你知道它是个什么玩意，怎么用它，同时也包含遇到问题如何解决的)。我觉得经过以做一个项目的方式作为学习导向比漫无目的的写HelloWorld或者是看书效率要高很多。</p><h2><span id="二-为什么要让自己的github活跃起来">二、为什么要让自己的GitHub活跃起来</span></h2><p>关于为什么要让自己的GitHub活跃起来，理由如下:</p><p>(1)GitHub不仅仅是一个仓库，也是一个开发者的历程;</p><p>(2)一个良好的GitHub，可以为你的应聘加分或者是会有一些企业主动联系你;</p><p>针对(1)，为什么说GitHub不仅仅是一个仓库，也是一个开发者的历程？</p><p>有句话叫做GitHub写满你的故事，每位开发者都是从0到1，然后从1到无穷大。</p><p>而GitHub就可以充当见识人，每当我翻阅自己以前的GitHub，看到自己的编码风格从杂乱无章到渐渐有序，看到自己的学习能力从依赖性或他人驱动性到独立自主和自我驱动，看到一个一无所知的人慢慢变的知识渊博。</p><p>针对(2)，为什么一个良好的GitHub，可以为你的应聘加分或者是会有一些企业主动联系你？</p><p>我们经理在招聘的时候常常说的一句话之一就是请贴出你的GitHub，之所以这么说，原因与(1)不无关系。</p><p>那么如何让自己的GitHub活跃起来呢？本人有如下几点建议:</p><p>(1)可以在GitHub上利用Hexo搭建一个属于自己的博客，关于搭建Hexo博客可以参考我的这篇博文:</p><p><a href="https://www.cnblogs.com/youcong/p/9965885.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/9965885.html</a></p><p>(2)平时有意识的收集自己常常需要阅读的资料，将其上传到自己的GitHub仓库。我会自己认为比较重要并时常需要阅读的资料上传到我的GitHub仓库，地址为:</p><p><a href="https://github.com/developers-youcong/Personal-Learning-Library" target="_blank" rel="noopener">https://github.com/developers-youcong/Personal-Learning-Library</a></p><p>(3)开发过程中常常用的脚本或者是脚手架也可以放到自己的GitHub上，这样一来省的自己在写，虽然说可以记录成一个文档，但是本人觉得还是放在GitHub上好一些。另外关于脚手架，比如像SSM框架+SpringBoot+SpringCloud这种的，虽然有些IDE可以一下子生成，但是个人觉得一下子生成的并不一定适用于你的，比如像SSSM框架+Shiro+Solr+MySQL+Metronic+常用的数据表，完全就可以作为一个脚手架，因为不少企业都在用它，每次搭建框架环境时，只需git clone下来即可，基本上就可以用了。就像下面我记录的读书笔记那样，要最大程度上复用第一次从0到1的结果，而不是从头再来。说实话这一点我在这家公司做的不是特别好，虽然说开发前端，基本上就是看到一些好的网站就将其扒下来为我所用，但是觉得效率还是不高。</p><p>(4)记录自己的读书笔记，譬如像教材类的书一定要记录详细笔记，比如《Java数据结构与算法》之类的(关于这本书可以去我的GitHub找到)，在GitHub上一般都是使用Markdown来写，我个人初次写的时候很不习惯Markdown，后来写久了发现，觉得爱上Markdown。再譬如像一些非教材类的可以记录一下自己的心得和体会，又或者里面某些观点给你的启发。</p><p>(5)工作一年以上的朋友基本上工作上都能搞定了，在此过程中为了提升自己，比如你想要系统学习SpringCloud，你可以参考官网，并在GitHub上添加对应的仓库，在此基础上系统学习。比如像这位朋友那样，如图所示:<br><img src="/2019/05/27/致所有的开发者们/01.png" alt=""></p><p>该SpringCloud教程地址为:</p><p><a href="https://gitee.com/ylimhhmily/SpringCloudTutorial" target="_blank" rel="noopener">https://gitee.com/ylimhhmily/SpringCloudTutorial</a></p><p>这里我想强调一点的是不一定将人家的copy下来，毕竟SpringCloud版本不断迭代中，你可以选择适合当下的稳定版本进行学习不一定非要标新立异追求最新版本的，然后放到自己的GitHub上，例子跑起来是必要的，同时也要记录一下笔记，比如你一开始你不熟悉它肯定会遇到一些错误，这些错误的原因是什么，你是如何解决它的，这些都可以记录在对应的README.md文件里面。这种学习方式其实就相当于实践+理论。记得一位前辈说过一句话，理论不懂就去实践，实践遇到问题就去看理论。</p><p>(6)自己发起一个开源项目，比如你觉得CSDN或者博客园在某些方面做的不够好，你可以写一个比它们更好的。我就觉得目前博客有一种非常不好的就是不能同步，比如我在CSDN上发布可以直接同步到我的博客园上或是思否、简书上。当然了，他们这么做的原因应该也是处于防止大量重复文章占用搜索资源吧。关于这个我觉得百度应该像Google学习，之所以很多开发人员用Google最大的原因就是因为通常搜索关键字，排名靠前的都是一些优质资源，反观百度，商业化太严重了。另外补充到自己发起一个开源项目，这个开源项目可以是从0到1，也可以不从0到1，比如可以学习Hutool的思想，Hutool这个开源项目实际是一个Java常用工具包集合，开发常用的都能在里面找到。我们可以参考它，自己也可以发起一个类似的项目，因为Hutool虽然广而齐全，但是并不能涵盖方方面面，比如在我现在这家公司比较适应，但是在我一些朋友的公司并不适应。所以在此我想说的是，每待一家公司不仅仅要将对应的业务吃的透一些，同时也要有意识的将一些常用的工具类收集起来。这也是将来跳槽面试的一个亮点之一。这个库一开始你可以私有化，当相对成熟些你可以将其公开分享给广大的开发者们。</p><p>(7)记录自己读源码的过程。我尝试过读Spring源码，按着Ctrl键，鼠标点进去再点进去发现这样读下去没有尽头啊。说带有某个目的去读，效果虽然会好些，但是我觉得有种方式会更好，那就是比如像我们Java开发的，平常写代码的时候也要有意识的翻翻源码，特别是遇到问题的时候并将问题解决的时候，通过查看源码看到里面的实现，这样下来，每天看一点点，积累一年或者半年，再或者三到四个月你会发现不少库的源码你都能看的懂了，很多实现机制你会发现都有很多相通点。关于这一点我并没有实践过三到四个月，目前我仅仅只是开始，但是我的一个导师实践过。</p><h2><span id="三-每天给自己一点学习的时间">三、每天给自己一点学习的时间</span></h2><p>现在很多人都很焦虑，因此知识付费很火。前面我说过知识付费不乏有好的。但是大多并没有那么好，主要抓住的是人焦虑的心理。</p><p>为什么焦虑呢？</p><p>主要是压力大(这个压力主要的来源于生活与工作)。其实说真的，我也很焦虑，一是我给自己定了很多目标我想迫切地让其实现，二是我没有安全感，我总想让自己变的更加强大。</p><p>但是随着而来，焦虑也逐渐加重，渐渐地导致我失眠。后来我找到了一种比较好的方法，那就是每天给自己一点学习的时间。</p><p>这个学习的时间可以是写代码，也可以是看书，也可以是品味一段轻音乐读上一首优美的诗歌感受诗歌的情形。</p><p>每天给自己一点学习的时间，这个学习的时间并不等于就是每次下班回到家中看书或者是写代码之类的，而是每天让自己有一点收获。</p><p>焦虑的根本原因在于自己停滞不前担心后面的人超过自己或者是前面的人本来与自己的距离是望其项背，最后变成了望尘莫及。</p><p>针对此，最好的策略就是每天让自己进步一点点有所收获。比如最近我VsCode插件某段代码不严谨，一位同事指出了我的这个错误，所以我决定下次不再出现这种错误。再比如最早我的代码注释写的很随意，也是我的那个同事指出的，因此到现在为止我不管怎么样，都要让自己代码严谨起来。也许是因为之前养成了一个不好的习惯，有的时候严谨点，有的时候不那么严谨。从换位思考的角度看，严谨的代码，简单扼要的注释，不仅仅对自己有帮助，同时也对同事阅读也是一种赏心悦目。</p><p>另外分享一下最近阅读吴军先生《见识》的阅读笔记。</p><p>1.不做伪工作者</p><p>(1)那些既不能给公司带来较大收益，又不能给用户带来价值改进和“升级”，很多都是伪工作。</p><p>(2)有的人明明能够通过学习一种新技能更有效地工作，却偏偏要守着过去的旧工具工作，甚至手工操作，这种人就是典型的伪工作者。</p><p>(3)在做事情前不认真思考，做事时通过简单的试错方法盲目寻找答案。</p><p>(4)做产品不讲究质量、不认真测试，上线后不停地修补，总是在花费很多时间和精力找漏洞和打补丁。</p><p>(5)不注重用有限的资源解决95%的问题，而是把大部分时间和精力用于纠结不重要的5%问题。</p><p>(6)每次开会找来大量不必要的人员旁听，或者总去参加那些不必要的会议。</p><p>2.努力一万小时真能帮你成功吗?</p><p>存在如下误区:</p><p>(1)简单重复。</p><p>(2)习惯性失败(迷信失败是成功之母，简单地重复失败是永远走不出失败的怪圈)。</p><p>(3)林黛玉式困境（活在自己的世界里，排斥外界）。</p><p>(4)狗熊扳棒子(10000小时的努力需要一个积累的效应，第二次的努力要最大限度地复用第一次努力的结果，而不是每次都从头开始)。</p><p>3.三板斧破四困境</p><p>(1)第一板斧:确立“愿景-目标-道路”。</p><p>(2)第二板斧:即使听到不中听的话，也要试着找出其中的合理之处。</p><p>(3)第三板斧:凡是做记录，这样可以避免狗熊扳棒子(从中正好体现写博客的好处之一)。</p><p>4.做好最后的1%</p><p>这里主要启发的就是做事不能做一半。比如开发者们不要偷懒，该写单测还是要写的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公司内部技术分享之Vue.js和前端工程化</title>
      <link href="/2019/05/26/%E5%85%AC%E5%8F%B8%E5%86%85%E9%83%A8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E4%B9%8Bvue-js%E5%92%8C%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
      <url>/2019/05/26/%E5%85%AC%E5%8F%B8%E5%86%85%E9%83%A8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E4%B9%8Bvue-js%E5%92%8C%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>今天主要的核心话题是Vue.js和前端工程化。我将结合我这两年多的工作学习经历来谈谈这个，主要侧重点是前端工程化，Vue.js侧重点相对前端工程化，比重不是特别大。<br><a id="more"></a></p><h2><span id="vuejs">Vue.js</span></h2><p>Vue.js和React.js、Angular.js并驾齐驱号称前端三大框架(前端最常用的这三大框架，大中小公司均采用)。<br>Vue.js是一个叫尤雨溪及其他的团队开发的，不过早年是他自己独立做出来的。这一点我觉得他很牛逼。<br>我觉得每个做开发的朋友们，都要有一个自己的开源项目，自己的开源项目可以是自己工作三到四年发现有很多地方是重复的，可以写一个框架减少不必要的重复工作量，现在已经有很多人正在做，比如renren-security、jeesite等开源项目，通过它们很容易就可以写出一个功能齐全的后台管理系统。也可以是自己开发中常用的某些组件，那些组件每次开发都要用，可以将其收集起来，针对其中某个api进行改造，比如Hutools这个开源项目在这个方面就做的挺不错。又或者是在校的学生们，自己可以不断实践，写写图书管理系统或者是根据学校某些需求定制一个系统出来，然后将其开源，我觉得这样一来，对于以后毕业出来找工作也是很有帮助的。总而言之，开源项目可以是很多，它可以是一个电商系统、CMS、CRM或ERP之类的，也可以是读书笔记、书籍收集、文章收集等。</p><p>关于Vue.js这部分，主要参考<a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue.js</a>的官方网站和一些开源项目</p><p>下面正式开讲</p><h3><span id="工具">工具</span></h3><h4><span id="devtools">Devtools</span></h4><p>Devtools其目的主要是用于浏览器调试Vue相关的项目(因为Vue.js中的标签并不仅仅是html相关的，还有如el这类的标签及其相关的dom关系等，这些都是常规的浏览器调试所不能做到的)</p><p><a href="http://chromecj.com/utilities/2018-12/1653.html" target="_blank" rel="noopener">vue-devtools开源项目地址</a><br><a href="http://chromecj.com/utilities/2018-12/1653.html" target="_blank" rel="noopener">图文详解vue.js devtools使用方法</a><br>使用Devtools调试对应的Vue.js应用程序，效果如图:<br><img src="/2019/05/26/公司内部技术分享之vue-js和前端工程化/01.png" alt=""></p><h4><span id="vue-cli">Vue CLI</span></h4><p>1.Vue CLI具有如下优点<br>(1)功能丰富<br>对 Babel、TypeScript、ESLint、PostCSS、PWA、单元测试和 End-to-end 测试提供开箱即用的支持。</p><p>(2)易于扩展<br>它的插件系统可以让社区根据常见需求构建和共享可复用的解决方案。</p><p>(3)无需 Eject<br>Vue CLI 完全是可配置的，无需 eject。这样你的项目就可以长期保持更新了。</p><p>(4)CLI 之上的图形化界面<br>通过配套的图形化界面创建、开发和管理你的项目。</p><p>(5)即刻创建原型<br>用单个 Vue 文件即刻实践新的灵感。</p><p>(6)面向未来<br>为现代浏览器轻松产出原生的 ES2015 代码，或将你的 Vue 组件构建为原生的 Web Components 组件。</p><p>2.Vue CLI的三种构建方式<br>第一种方式(常规)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line">vue create hello-world</span><br><span class="line">npm run server</span><br></pre></td></tr></table></figure></p><p>第二种方式(旧版本2.x)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli-init</span><br><span class="line">vue init webpack my-project</span><br></pre></td></tr></table></figure></p><p>第三种方式(GUI)<br>在git bash中输入如下命令，即可创建vue脚手架项目:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></table></figure></p><p>效果图如下:<br><img src="/2019/05/26/公司内部技术分享之vue-js和前端工程化/02.png" alt=""></p><h4><span id="vue-loader">Vue Loader</span></h4><p>Vue Loader的作用是解析和转换 .vue 文件，提取出其中的逻辑代码 script、样式代码 style、以及 HTML 模版 template，再分别把它们交给对应的 Loader 去处理。</p><p><a href="https://vue-loader.vuejs.org/zh/guide/" target="_blank" rel="noopener">Vue Loader官方指南</a><br>Vue Loader的例子很多，如图所示:<br><img src="/2019/05/26/公司内部技术分享之vue-js和前端工程化/03.png" alt=""><br>从图中我们就可以看出它们的职责和作用，正好验证前面说的script（逻辑代码)、style(样式代码)、template(html模板)。<br>换句话说，Vue Loader你可以理解为一个tomcat服务器，它不仅仅能解析jsp和servlet，还能处理css、html、js等前端三剑客。</p><h3><span id="核心插件">核心插件</span></h3><h4><span id="vue-router">Vue Router</span></h4><p><a href="https://router.vuejs.org/zh/" target="_blank" rel="noopener">Vue Router文档</a><br>Vue Router 是 Vue.js 官方的路由管理器。它和 Vue.js 的核心深度集成，让构建单页面应用变得易如反掌。<br>包含的功能如下:<br>(1)嵌套的路由/视图表<br>(2)模块化的、基于组件的路由配置<br>(3)路由参数、查询、通配符<br>(4)基于 Vue.js 过渡系统的视图过渡效果<br>(5)细粒度的导航控制<br>(6)带有自动激活的 CSS class 的链接<br>(7)HTML5 历史模式或 hash 模式，在 IE9 中自动降级<br>(8)自定义的滚动条行为</p><h4><span id="vuex">Vuex</span></h4><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。</p><p><a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noopener">Vuex官方文档</a></p><h4><span id="vue服务端渲染">Vue服务端渲染</span></h4><p>Vue.js 是构建客户端应用程序的框架。默认情况下，可以在浏览器中输出 Vue 组件，进行生成 DOM 和操作 DOM。然而，也可以将同一个组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将这些静态标记”激活”为客户端上完全可交互的应用程序。服务器渲染的 Vue.js 应用程序也可以被认为是”同构”或”通用”，因为应用程序的大部分代码都可以在服务器和客户端上运行。</p><p><a href="https://ssr.vuejs.org/zh/#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93-ssr-%EF%BC%9F" target="_blank" rel="noopener">Vue.js服务端渲染指南</a></p><p>这个服务端渲染通常可以用node.js中的express框架，当然了，也可以用koa或者egg.js等。</p><h3><span id="资源列表">资源列表</span></h3><p><a href="https://github.com/vuejs" target="_blank" rel="noopener">Vue.js官方仓库</a><br><a href="https://curated.vuejs.org/" target="_blank" rel="noopener">Vue.js优选</a><br><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">Vue.js资源</a></p><p>关于Vue.js学习方式，个人建议对HTML+CSS+JavaScript要掌握的比较好才行，不仅仅对前端而言，后端也亦如此。<br>为什么这么说呢？<br>通常来说做Java后台开发的，基本上前端也会。<br>另外从一位前端工程师的角度来看，前端的技术与后端相比，更新迭代更快，但是不变的还是前端三剑客那点东西。把握了这些基本上学任何前端框架都是一件很容易的事情。<br>正如Vue.js起步中所说的那样:<br><strong>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。</strong><br>另外我一直认为，公司研发岗位，如开发人员、测试人员、运维人员、运营人员、产品人员等，至少要知道彼此在做什么以及彼此工作之间联系，我觉得这样会比较好，不然很容易会陷入一个死循环，你可以理解为”闭关锁国”。</p><p>本次的Vue.js内部分享不算太多，只不过是全局概况一下，更多的内容，可以去官方网站上学习。</p><p>我觉得作为一名研发人员，一定要养成通过官网学习的习惯，像博客之类的可以作为一个辅助或者深入的学习方式。通过官方网站学习，我觉得总体可以让你形成一个全局的认识，这种认识，可以让你触类旁通或举一反三。</p><p>举个例子说一下，最近因为某个电商项目二次开发，而该二次开发用的是ThinkPHP框架，虽然我没有接触过PHP方面的，但是我通过官网相关知识，一下就了解了它的大致，ThinkPHP是基于MVC的，而正好可以联系到Java中的SSM,其也是基于MVC。</p><h2><span id="前端工程化">前端工程化</span></h2><p>这一部分内容我将结合我的开发经历和《前端工程化体系设计与实践》这本书。</p><h4><span id="前后端分离">前后端分离</span></h4><h5><span id="原始的前后端分离方式">原始的前后端分离方式</span></h5><p>前端把页面模板写好，后台将页面模板改为jsp或者freemaker、volocity等动态模板语言。</p><p>曾经做的一个智能酒店项目就是使用这种方式。这样做最不好的地方是，如果公司是前后端职责分明的话，前端每改动某个页面时，都需要将修改的后发给后台人员，后台人员将其改为jsp。这样一来效率及其低下，当然了，小公司是不会这么做的，小公司都是后台兼任前端的，自然就可以省去这些不必要的时间成本。</p><p>原始的前后端分离方式优缺点(以模板语言采用jsp为例):</p><p>优点:<br>(1)严格按照MVC模式，职责分明，效率还是挺高的，举个例子说明，视图(jsp)只负责展示数据而不做过多的逻辑判断处理，过多的逻辑判断应该交给控制器内部的业务逻辑方法进行处理。<br>(2)由于通常采用的是模板语言(jsp、freemaker、volocity等)，视图里可以做一定的逻辑判断和处理，因此不必嵌入大量的js，大量的js如果某一个有问题，将会导致整个有问题，比如写一个ajax方法，但是参数没有传进去，这时页面上将不会显示数据，只会空白，只能用浏览器调试才能发现是哪里有问题，如果是jsp的话，直接就会报500错误(或者内部做一些处理，让其跳转到错误指定界面);<br>(3)减少HTTP请求(只需请求一次即可,如果页面是html的话，需要大量的js函数请求后端路由，在一定程度上会增大服务器的压力，导致页面延迟);<br>(4)不用考虑浏览器兼容性(有些js的方式由于浏览器的兼容性而不能正常调用或者需要进行改动);</p><p>缺点:<br>(1)复用性较差(由于返回的不是json数据而是视图，导致复用性不是特别好);<br>(2)过于依赖Java运行环境(需要servlet容器);<br>(3)前后端未分离，耦合性高，可读性差(jsp中嵌入java代码及其大量的jstl标签，导致可读性不好，耦合性也高，当然了，如果做一个良好的设计并遵循的话，耦合性是可以降低的，可读性也是可以提高的);</p><p>总的来说，用jsp作为视图展示，可复用性不是特别好，于是曾经的第二个项目LMS(智能门锁系统)，视图就变成了HTML，由Ajax作为前后端交互的支点。</p><p>用Ajax的优缺点如下:</p><p>优点:<br>(1)开发过程前后端脱离，通过接口进行JSON数据传输(职责分明更加明确);<br>(2)跨平台能力更强，依托于浏览器的支持(基本上人们常用的浏览器(谷歌、火狐、IE、360等)都支持)<br>(3)可复用性更好;</p><p>缺点:<br>(1)开发难度大，考虑浏览器兼容性;<br>(2)页面请求过多(参考网站十大优化原则，其中一点优化原则是减少HTTP请求，过多的HTTP请求对于性能是十分消耗的);<br>(3)接口代码需要新增很多(这一点我相信许多开发人员都有这样的感触);<br>(4)大量的逻辑判断都需要使用js(前面我说过,js是不允许一丁点错误的，一旦错误，体验很不好，至少jsp报错500，可以让其跳转到一个友好的提示，而html就不行了，直接就没有数据或者是如果牵扯到布局，直接会影响到用户体验);</p><p>总的来说，开发中一般两者兼用。</p><p>不过后来，Vue.js、Angular.js、React.js火起来了，前后端分离实践更佳的方式到来。</p><p>因为即便完全采用jsp作为视图展示/采用HTML作为视图展示或者两者兼用，还是存在不少的问题的。这一点后面会讲到的。</p><h4><span id="前端工程化">前端工程化</span></h4><p>前端工程化的目的在于<strong>提高生产效率</strong></p><h5><span id="前端工程化的衡量准则">前端工程化的衡量准则</span></h5><p>三大衡量准则:</p><p>(1)从开发的角度衡量工程化，主要体现为”快”;<br>天下武功，唯“快”不破。做项目也是如此，特别是做产品原型，一定要快，快速做出来，然后使用mock套一些假数据，等待产品经理确认是其想要的，然后就可以开发的。从中也体现着“敏捷”。</p><p>(2)从测试的角度衡量工程化，主要体现为”快”和”准”;</p><p>“快”的主要体现在前端工程师和后端工程师并行完成之后的集成测试阶段。<br>“准”的主要体现在集成测试阶段对问题的准确定位。</p><p><strong>什么是集成测试?</strong><br>集成测试，也叫组装测试或联合测试。在单元测试的基础上，将所有模块按照设计要求（如根据结构图）组装成为子系统或系统，进行集成测试。</p><p>你可以将其理解为一辆车，车在没有组装成是一堆大大小小的零件，这些零件经过生产工人生产，组装工人组装，质量工人测试。零零散散的零件单个测试也许是没有问题的，但是组装成一辆车的时候，这个时候就可能会出现问题。</p><p>(3)从部署角度衡量工程化，主要体现为”稳”;<br>通常会使用持续集成工具(如Jenkins、 Travis CI等)，通常会将每一次开发人员的代码提交进行编译、测试、发布，如果编译或测试有问题，直接就会将本次构建取消，回滚到稳定版本。这样一来，可以确保”稳”。</p><h5><span id="前端工程化的进化历程">前端工程化的进化历程</span></h5><h5><span id="前端工程化的3个阶段">前端工程化的3个阶段</span></h5><p>(1)本地工具链-工程化不等同于工具化;<br>工程化的核心并非工具。前端工程化是以规范工作流程为手段，以工具为实现媒介，其最终目的是为了提高研发效率以及保证Web产品的线上质量。<br>如果要给前端工程化一个明确定义的话，比较恰当的定义如下:</p><p>前端工程化是一系列工具和规范的组合，规范为蓝本，工具为实现。其中规范如下:<br>a.项目文件的组织结构，比如使用目录名称区分源文件和目标文件;<br>b.源代码的开发范式，比如使用既定的模块化方案;<br>c.工具的使用规范，比如工程化自身的配置规范;<br>d.各阶段环境的依赖，比如部署功能的实现需要目标服务器提供SSH全新;</p><p>另外工具链的统一，另一个好处是巩固了流程的规范性，开发者使用统一的工具链、遵循统一的规范进行业务代码的编写，利于多人协作和程序维护。</p><p>试想一下:<br>假设你身处一个团队，团队中没有任何的开发规范，遇到一些需求，往往这些需求是可以通过引入某一个框架来实现的，但由于没有任何的限制，本来一个框架可以实现多个需求，但像前面提到的没有任何规范限制，就变成了多个框架实现多个需求。这样一来项目将会越来越乱，不利于团队协作。我曾经就做过这样的项目，深有感触。</p><p>(2)管理平台-进一步淡化差异、加深规范;</p><p>管理平台形态的工程化需达到如下几点:<br>a.淡化环境差异性，保证构建产出一致性;<br>b.权限集中管理，提高安全性;<br>c.项目版本集中管理，便于危机处理，比如版本回滚等;</p><p>管理平台形态将各个功能模块的执行环境集中化，从各模块实现角度来讲与本地工具链基本一致。</p><p>(3)持续集成-前端工程化的目标是融入整体<br>即使进化达到管理平台形态，前端工程化方案所能解决问题的本质仍然只是将前端工程师与后端工程师的工作解耦。虽然提高了两端的工作效率，但是各自的工作流却是孤立的。前端有了构建和部署，后端也有了相应的阶段，两方的工作流是分离的，最终的融合工作仍然难以避免繁琐的人工操作。</p><p>举个例子，比如后端修改了某个接口，前端某个dom与这个接口关系紧密，接口变化了，dom渲染也要随之变化，但是由于工作流是分开的，前端工程师并不知道这一点。我们经常强调一点，要加强沟通，但是当项目紧急期到来时，每个人手里任务一大堆，这时沟通就可能会少了很多，这时像上面说的，接口发生变化时，前端工程师并不知情，直到因为某些操作发生问题时，才知道原来是接口变了。另外从某个角度来看，接口的设计原则应该是与前端相隔离的，但是实际中并非如此。</p><h2><span id="总结">总结</span></h2><p>今天主要分享的两个知识点，一个是vue.js，另一个是关于前端工程化。<br>vue.js相关的demo，我已经放到我的GitHub上，感兴趣的朋友可以将其git clone下来，<br>地址为:<a href="https://github.com/developers-youcong/blog-manage-system" target="_blank" rel="noopener">https://github.com/developers-youcong/blog-manage-system</a></p><p>前端工程化，用一句话来概括就是让工具更好的服务于流程。从研发的角度看，使用技术实现业务(让技术更好的服务于业务)。今天说的这个工程化核心就是工具与流程相结合起来，让整个工作流紧密结合且效率提高。鉴于本次内部分享说的挺多的，目前这只是一部分。欢迎大家评论留言，最好还是提问题，问题让思考更深刻。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内部技术分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CRMEB中因为重写规则导致的服务器异常和404之解决办法</title>
      <link href="/2019/05/21/CRMEB%E4%B8%AD%E5%9B%A0%E4%B8%BA%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99%E5%AF%BC%E8%87%B4%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%82%E5%B8%B8%E5%92%8C404%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2019/05/21/CRMEB%E4%B8%AD%E5%9B%A0%E4%B8%BA%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99%E5%AF%BC%E8%87%B4%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%82%E5%B8%B8%E5%92%8C404%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>问题描述:<br>安装CRMEB后，只能通过https://域名//index.php/admin访问到后台，而不能直接通过https://域名/admin访问到后台，以至于导致进入系统后台出现有的功能界面可用，有的功能界面则出现404或者服务器异常之类的，从浏览器上看就是路径方面的原因导致的，实际原因则是apache没有开启重写模块导致的。<br><a id="more"></a><br>问题解决方案:<br>第一、.htaccess(根目录有一个.htaccess，这个要与如下保持一致)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">Options +FollowSymlinks -Multiviews</span><br><span class="line">RewriteEngine on</span><br><span class="line"></span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteRule ^(.*)$ index.php?/$1 [QSA,PT,L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></p><p>第二、开启rewrite重写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod rewrite</span><br><span class="line">/etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure></p><p>参考问题解决方案:<br><a href="https://www.cnblogs.com/li-mei/p/5959217.html" target="_blank" rel="noopener">apache开启rewrite重写</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之递归</title>
      <link href="/2019/05/20/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E9%80%92%E5%BD%92/"/>
      <url>/2019/05/20/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E9%80%92%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h2><span id="递归">递归</span></h2><p><img src="/2019/05/20/算法图解之递归/01.png" alt="图一"></p><p><img src="/2019/05/20/算法图解之递归/02.png" alt="图二"></p><p>图一和图二对比，它们的作用都是相同的。从流程上分析，图一流程相对比较复杂，而图二则简单明了，<br><a id="more"></a><br>这是某位同行在stackoverflow上面说过的话:如果使用循环，程序的性能可能更高;如果使用递归，程序可能更容易死理解。如何选择要看什么对你来说跟重要。</p><p>那么递归和循环之间的区别是什么呢？<br>不同点:<br>递归是函数体中调用自己，如果不加以控制，将无休止的调用自己，直到堆栈溢出。<br>循环是反复执行某一段区域内的代码，如果不加以控制，就会形成死循环。</p><p>相同点:<br>不管是递归还是循环，都要设定一定的条件，以结束递归或循环。</p><h2><span id="基线条件和递归条件">基线条件和递归条件</span></h2><p>编写递归函数时，必须告诉它何时停止递归。正因为如此，每个递归函数都有其两部分:基线部分和递归条件。<br>递归条件指的是函数调用自己，而基线条件则指的的函数不再调用自己，从而避免形成无线循环。</p><p>代码示例如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">package cn.recursive.example;</span><br><span class="line"></span><br><span class="line">public class RecursiveExample &#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">      /**</span><br><span class="line">       * 一个递归方法</span><br><span class="line">       * @param x</span><br><span class="line">       * @return</span><br><span class="line">       */</span><br><span class="line">       public static int f(int x) &#123;</span><br><span class="line">           </span><br><span class="line">           if (x == 0) &#123;</span><br><span class="line">               </span><br><span class="line">               return 0;</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">           return 2 * f(x - 1) + x * x;</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">       public static void main(String[] args) &#123;</span><br><span class="line">           </span><br><span class="line">    </span><br><span class="line">         //调用该方法，当x=2时，输出为6</span><br><span class="line">        System.out.println(RecursiveExample.f(2));</span><br><span class="line">          </span><br><span class="line">    </span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码中的return 0相当于基线条件，而return 2 <em> f(x-1)+x </em> x相当于递归条件。</p><h2><span id="栈">栈</span></h2><p>栈是一种数据结构，我们时常用它，而我们自己却不知道。<br><img src="/2019/05/20/算法图解之递归/03.png" alt="图三"></p><p>使用栈虽然很方便，但是也是要付出代价:<br>存储详尽的信息可能占用大量的内存。每个函数调用都要占用一定的内存，如果栈很高，就意味着计算机存储了大量函数调用的信息。在这种情况，通常有如下两种选择:<br>(1)重新编写代码，转而使用循环;<br>(2)使用尾递归。这是一个高级递归主题。另外并非所有的语言都支持尾递归;</p><p>我的感触:<br>其实算法图解之递归这一章对我的最大感触就是使用大量的伪代码和生动的图像，使我觉得代码的确是一个生动有活力的家伙。另外我觉得伪代码对于理清代码思路有很大帮助，特别是要写某个功能的时候，这时可以写写伪代码梳理一下逻辑，然后开始动手验证伪代码的逻辑是否正确。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows安装composer</title>
      <link href="/2019/05/18/windows%E5%AE%89%E8%A3%85composer/"/>
      <url>/2019/05/18/windows%E5%AE%89%E8%A3%85composer/</url>
      
        <content type="html"><![CDATA[<h2><span id="下载composer-setupexe">下载Composer-Setup.exe</span></h2><p>请点击该链接即可<a href="https://getcomposer.org/Composer-Setup.exe" target="_blank" rel="noopener">下载Composer</a></p><p>通常下载完后是一个exe文件，双击安装即可。</p><p>注意:默认会搜索你的php安装路径，建议最好把php安装好。</p><p>关于php安装，可以去php官网上下载zip包解压某个配置配置环境变量即可。<br><a id="more"></a></p><h2><span id="走完安装流程后在控制台输入composer-version出现对应的版本号表示ok">走完安装流程后，在控制台输入composer –version，出现对应的版本号表示OK</span></h2><p><img src="/2019/05/18/windows安装composer/composer.png" alt=""></p><h2><span id="更换镜像">更换镜像</span></h2><p>执行如下命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><p>之所以更换镜像，主要是加快相关库的下载速度。</p><p>以我搭建ThinkPHP5.0开发环境为例，第一步执行<code>composer create-project topthink/think tp</code>就卡了半天不动，当我执行更换镜像后，一下就好了。</p><p>参考资料如下:<br><a href="https://blog.csdn.net/sanbingyutuoniao123/article/details/70314651" target="_blank" rel="noopener">Windows环境下Composer的安装教程</a></p><p>说明:我并没有完全按照上述参考资料上一步一步的来，不过有几点很关键，那就是必须要下载composer并按照相关步骤操作和本地有php环境。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04之Apache2.4配置SSL证书</title>
      <link href="/2019/05/17/Ubuntu16-04%E4%B9%8BApache2-4%E9%85%8D%E7%BD%AESSL%E8%AF%81%E4%B9%A6/"/>
      <url>/2019/05/17/Ubuntu16-04%E4%B9%8BApache2-4%E9%85%8D%E7%BD%AESSL%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>具体步骤不是特别复杂，有些细枝末节我可能忽略了，不过参考我的这个教程，应该可以配置好的，如果朋友们有问题，可以留言给我。<br>参考资料如下:<br><a href="https://blog.csdn.net/m_zhurunfeng/article/details/79980320" target="_blank" rel="noopener">Linux + Apache2 环境下配置 https (腾讯云免费证书)</a></p><p><a href="https://help.aliyun.com/document_detail/102450.html" target="_blank" rel="noopener">Ubuntu系统Apache 2部署SSL证书</a></p><p>虽然说很多不记得了，但是有这么几点必须要提。</p><p>第一、去阿里云下载证书，通过winscp或者xftp上传文件到服务器上<br>第二、解压证书zip包，并将其放入某个文件夹下<br>第三、安装apache，并按照如下步骤:<br><a id="more"></a><br>安装Apache、启动SSL模块、重写模块等:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2</span><br><span class="line"></span><br><span class="line">a2enmod ssl</span><br><span class="line"></span><br><span class="line">a2enmod rewrite</span><br></pre></td></tr></table></figure></p><p>编辑default-ssl.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apache2/sites-available/default-ssl.conf</span><br></pre></td></tr></table></figure></p><p>修改如下(记住该文件默认就有，将对应的crt、key等修改为阿里云证书或者腾讯云证书对应的,下面是我阿里云对应的):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SSLCertificateFile /home/yc/apache_https/1854029_www.yc.com_public.crt</span><br><span class="line">SSLCertificateKeyFile /home/yc/apache_https/1854029_www.yc.com.key</span><br><span class="line">SSLCertificateChainFile /home/yc/apache_https/1854029_www.yc.com_chain.crt</span><br></pre></td></tr></table></figure></p><p>建立软链接:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-enabled/001-ssl.conf</span><br></pre></td></tr></table></figure></p><p>重启Apache:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure></p><p>最后你发现访问你的域名<a href="https://yourdomain.com" target="_blank" rel="noopener">https://yourdomain.com</a> 出现apache的欢迎页就表示OK了</p><p>另外如果你发现访问不了的话，记得在default-ssl.conf配置文件添加如下，然后重启一下Apache即可:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">  Options FollowSymLinks ExecCGI</span><br><span class="line"> AllowOverride All</span><br><span class="line"> Order allow,deny</span><br><span class="line"> Allow from all</span><br><span class="line"> Require all granted</span><br><span class="line">  &lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04启动tomcat缓慢问题之解决方案</title>
      <link href="/2019/05/16/Ubuntu16-04%E5%90%AF%E5%8A%A8tomcat%E7%BC%93%E6%85%A2%E9%97%AE%E9%A2%98%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2019/05/16/Ubuntu16-04%E5%90%AF%E5%8A%A8tomcat%E7%BC%93%E6%85%A2%E9%97%AE%E9%A2%98%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>问题信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16-May-2019 10:41:10.630 WARNING [localhost-startStop-1] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [117,835] milliseconds.</span><br></pre></td></tr></table></figure></p><p>问题描述:<br>去官网下载tomcat后，解压本地并启动，发现启动极其缓慢，启动一个tomcat居然要十几分钟或者是始终启动不起来。<br><a id="more"></a></p><p>问题原因:<br>是因为Tomcat8熵池阻塞变慢</p><p>解决方案:</p><p>(1)找到java.security文件(请执行该命令:cd /usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/security)</p><p>(2)编辑该文件(vim java.security)</p><p>将文件中的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">securerandom.source=file:/dev/random</span><br></pre></td></tr></table></figure></p><p>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">securerandom.source=file:/dev/.urandom</span><br></pre></td></tr></table></figure></p><p>参考问题解决链接:<br><a href="http://www.cnblogs.com/thinkingandworkinghard/p/6729705.html" target="_blank" rel="noopener">tomcat启动很慢 停留在 At least one JAR was scanned for TLDs yet contained no TLDs.</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL5.7授权用户远程访问</title>
      <link href="/2019/05/15/MySQL5-7%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
      <url>/2019/05/15/MySQL5-7%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<p>做个记录，每次弄环境的时候，特别是弄mysql环境，时不时都要用到下面的命令</p><p>命令如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;oa123456&apos; with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p><strong>注意:</strong><br>上面的命令原型如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &apos;username&apos;@&apos;%&apos; identified by &apos;password&apos; with grant option;</span><br></pre></td></tr></table></figure></p><p>命令中的“%”相当于授权任意主机。</p><p>另外还有就是通常授权用户远程连接，还需要修改配置文件，以Ubuntu16.04为例，需要修改mysqld.cnf配置文件，将里面的bind=127.0.0.1注释掉即可<br>然后重启一下mysql服务，这时你就可以通过sqlyong或navicat连接mysql服务。</p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Git中如何撤销上一次的commit</title>
      <link href="/2019/05/15/%E5%9C%A8Git%E4%B8%AD%E5%A6%82%E4%BD%95%E6%92%A4%E9%94%80%E4%B8%8A%E4%B8%80%E6%AC%A1%E7%9A%84commit/"/>
      <url>/2019/05/15/%E5%9C%A8Git%E4%B8%AD%E5%A6%82%E4%BD%95%E6%92%A4%E9%94%80%E4%B8%8A%E4%B8%80%E6%AC%A1%E7%9A%84commit/</url>
      
        <content type="html"><![CDATA[<p>有的时候我们一不小心就git commit -m ‘commit message info’<br>解决办法，很简单，只需执行<code>git reset HEAD~</code>这条命令即可，即能保证你原本的修改还在，也能撤销本次提交失误。</p><p>这种撤销上一次提交是比较好的，如果是版本回退的话也能解决这个问题，但是版本回退只适合于你本次提交并没有改动什么或者改动不大的情况。如果你改动太多，版本回退意味着着你需要重新复制一遍，当然了，解决这种问题的办法有很多，分支开发的方式也能解决这种问题。<br><a id="more"></a><br>顺便补充到，如果git add 失误呢？如何解决呢？<br>执行如下命令即可:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm -r dir_name --cached</span><br></pre></td></tr></table></figure></p><p>dir_nameo可以是.也可以是你git add 某个目录，如git add src/<br>你只需git rm -r src/ –cached 便可删除git add src/ 添加到的暂存区，从而达到撤销git add 的失误操作</p><p><a href="https://blog.csdn.net/svap1/article/details/80537198" target="_blank" rel="noopener">git撤销add操作</a><br><a href="https://www.jianshu.com/p/9f11d398111f" target="_blank" rel="noopener">[译] 在Git中如何撤销上一次的commit(s)？</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Ajax异步上传文件</title>
      <link href="/2019/05/14/%E4%BD%BF%E7%94%A8Ajax%E5%BC%82%E6%AD%A5%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
      <url>/2019/05/14/%E4%BD%BF%E7%94%A8Ajax%E5%BC%82%E6%AD%A5%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>使用Ajax上传文件的应用场景颇多，比如上传用户头像、博客文章中插入图片、对认证用户相关身份进行校验等等很多很多。<br><a id="more"></a><br>下面贴相关代码示例:<br>html代码片段:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">                   &lt;form class=&quot;layui-form&quot; action=&quot;#&quot; id=&quot;uploadForm&quot;&gt;</span><br><span class="line">&lt;div class=&quot;layui-form-item&quot;&gt;</span><br><span class="line">&lt;label class=&quot;layui-form-label&quot;&gt;名称&lt;/label&gt;</span><br><span class="line">&lt;div class=&quot;layui-input-block&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;config_name&quot; placeholder=&quot;请输入配置名称&quot; autocomplete=&quot;off&quot;</span><br><span class="line">class=&quot;layui-input&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;layui-form-item layui-form-text&quot;&gt;</span><br><span class="line">&lt;label class=&quot;layui-form-label&quot;&gt;描述&lt;/label&gt;</span><br><span class="line">&lt;div class=&quot;layui-input-block&quot;&gt;</span><br><span class="line">&lt;textarea id=&quot;config_desc&quot; placeholder=&quot;请输入配置描述&quot; class=&quot;layui-textarea&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;layui-form-item&quot;&gt;</span><br><span class="line">&lt;label class=&quot;layui-form-label&quot;&gt;文件&lt;/label&gt;</span><br><span class="line">&lt;div class=&quot;layui-input-block&quot;&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span><br><span class="line">&lt;p class=&quot;help-block&quot;&gt;请选择配置文件&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;layui-form-item&quot;&gt;</span><br><span class="line">&lt;div class=&quot;layui-input-block&quot;&gt;</span><br><span class="line">&lt;button class=&quot;layui-btn&quot; id=&quot;save_config_file&quot;&gt;立即提交&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;reset&quot; class=&quot;layui-btn layui-btn-primary&quot;&gt;重置&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>js代码片段:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">//上传配置文件</span><br><span class="line">$(&quot;#save_config_file&quot;).click(function () &#123;</span><br><span class="line"></span><br><span class="line">var name = $(&quot;#config_name&quot;).val();</span><br><span class="line">var desc = $(&quot;#config_desc&quot;).val();</span><br><span class="line">var userId = $(&quot;#userId&quot;).val();</span><br><span class="line"></span><br><span class="line">var formData = new FormData($(&quot;#uploadForm&quot;)[0]);</span><br><span class="line"></span><br><span class="line">formData.append(&quot;name&quot;,name);</span><br><span class="line">formData.append(&quot;desc&quot;,desc);</span><br><span class="line">formData.append(&quot;userId&quot;,userId);</span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url: &apos;http://localhost:8090/bfi-web/api/ide/settings/uploadFiles&apos;,</span><br><span class="line">type: &apos;POST&apos;,</span><br><span class="line">data: formData,</span><br><span class="line">async: false,</span><br><span class="line">cache: false,</span><br><span class="line">contentType: false,</span><br><span class="line">processData: false,</span><br><span class="line">success: function (returndata) &#123;</span><br><span class="line"></span><br><span class="line">layui.use(&apos;layer&apos;, function () &#123;</span><br><span class="line">var layer = layui.layer;</span><br><span class="line"></span><br><span class="line">layer.msg(returndata.returnMsg, &#123;</span><br><span class="line">icon: 1</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">setTimeout(() =&gt; &#123;</span><br><span class="line"></span><br><span class="line">closeLayui();</span><br><span class="line"></span><br><span class="line">&#125;, 300);</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">error: function (returndata) &#123;</span><br><span class="line">console.log(&quot;====================Error==========================&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Java代码片段(这里是SpringMVC+腾讯云对象存储,可将其更换为其它对象存储，如七牛云、ftp或者是其它对象存储):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">   /**</span><br><span class="line">    * 上传文件</span><br><span class="line">    * @param request</span><br><span class="line">    * @param file</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">@PostMapping(value=&quot;/uploadFiles&quot;,produces=&quot;application/json;charset=utf-8&quot;)</span><br><span class="line">public JSONObject upModify(HttpServletRequest request, MultipartFile file) &#123;</span><br><span class="line"></span><br><span class="line">JSONObject json = new JSONObject();</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line"></span><br><span class="line">COSClientUtil cosClientUtil = new COSClientUtil(); </span><br><span class="line"></span><br><span class="line">if(!file.isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">String name = cosClientUtil.uploadFile2Cos(file); </span><br><span class="line">               String desc = request.getParameter(&quot;desc&quot;);</span><br><span class="line">               String names = request.getParameter(&quot;name&quot;);</span><br><span class="line">               String userId = request.getParameter(&quot;userId&quot;);</span><br><span class="line">               </span><br><span class="line">               logger.info(&quot;desc:&quot;+desc);</span><br><span class="line">               logger.info(&quot;names:&quot;+names);</span><br><span class="line">               logger.info(&quot;userId:&quot;+userId);</span><br><span class="line">               </span><br><span class="line">//图片名称</span><br><span class="line">logger.info(&quot;name = &quot; + name);</span><br><span class="line"></span><br><span class="line">//上传到腾讯云</span><br><span class="line">String imgUrl = cosClientUtil.getImgUrl(name); </span><br><span class="line"></span><br><span class="line">logger.info(&quot;imgUrl = &quot; + imgUrl);</span><br><span class="line"></span><br><span class="line">//数据库保存图片地址</span><br><span class="line">String dbImgUrl = imgUrl.substring(0,imgUrl.indexOf(&quot;?&quot;));</span><br><span class="line">logger.info(&quot;dbImgUrl = &quot; + dbImgUrl);</span><br><span class="line"></span><br><span class="line">IdeSettings ide = new IdeSettings();</span><br><span class="line">ide.setName(names);</span><br><span class="line">ide.setContent(dbImgUrl);</span><br><span class="line">ide.setUserId(userId);</span><br><span class="line">ide.setUpdateTime(DateUtil.date().toString());</span><br><span class="line">ide.setUploadTime(DateUtil.date().toString());</span><br><span class="line">ide.setDescription(desc);</span><br><span class="line"></span><br><span class="line">boolean isAddConfig = ideSettingsService.insert(ide);</span><br><span class="line"></span><br><span class="line">logger.info(isAddConfig);</span><br><span class="line"></span><br><span class="line">if(isAddConfig) &#123;</span><br><span class="line">json.put(CommonEnum.RETURN_CODE, &quot;000000&quot;);</span><br><span class="line">json.put(CommonEnum.RETURN_MSG, &quot;上传成功&quot;);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">json.put(CommonEnum.RETURN_CODE, &quot;222222&quot;);</span><br><span class="line">json.put(CommonEnum.RETURN_MSG, &quot;上传失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;else &#123;</span><br><span class="line">json.put(CommonEnum.RETURN_CODE, &quot;111111&quot;);</span><br><span class="line">json.put(CommonEnum.RETURN_MSG, &quot;参数异常&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"></span><br><span class="line">json.put(CommonEnum.RETURN_CODE, &quot;333333&quot;);</span><br><span class="line">json.put(CommonEnum.RETURN_MSG, &quot;特殊异常&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line">       return json;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之选择排序</title>
      <link href="/2019/05/13/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/>
      <url>/2019/05/13/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>假设你的计算机存储了很多乐趣。对于每个乐队，你都记录了其作品被播放的次数。<br><img src="/2019/05/13/算法图解之选择排序/01.png" alt=""><br><a id="more"></a><br>如果你要将这个列表按播放次数从多到少的顺序排列，从而将你喜欢的乐队排序。该如何做呢?</p><p>我第一眼看到这个问题时，想到的是通过sql解决这个问题<br>假设如果这是一个数据表的话，我很容易就可以通过order by 字段名 desc进行降序排序(也就是从大到小)</p><p>不过我觉得sql反而麻烦，于是转用冒泡排序。代码示例如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">public class BubbleSort &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">int [] arr = &#123;156,141,35,94,88,61,111&#125;;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;排序前数组为:&quot;);</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(&quot;arr:&quot;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; arr.length-1; i++) &#123; //外层循环控制排序趟数</span><br><span class="line">for (int j = 0; j &lt; arr.length-1-i; j++) &#123;//内层循环控制每一趟排序多少次</span><br><span class="line">if(arr[j]&gt;arr[j+1]) &#123;</span><br><span class="line">int temp = arr[j];</span><br><span class="line">arr[j] = arr[j+1];</span><br><span class="line">arr[j+1]=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;排序后的数组为:&quot;);</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(&quot;arr:&quot;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这段代码的输出结果是:<br><img src="/2019/05/13/算法图解之选择排序/02.png" alt=""><br>但是该结果输出的是从小到大，显然不符合我的期望。<br>顺便提一下冒泡排序的原理:<strong>比较两个相邻的元素，将值大的元素交换至右端</strong></p><p>不过以Java开发为例，一般情况我们拿轮子里面的东西即可实现，如下面代码所示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class BubbleSort &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">int [] arr = &#123;156,141,35,94,88,61,111&#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(&quot;arr:&quot;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">Arrays.sort(arr);</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(&quot;arr:&quot;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>回到正题，那么我们如何将其变为降序?实现代码如下(还是复用现有的轮子)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line">import java.util.Comparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class BubbleSort &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">Integer[] array = new Integer[] &#123; 156, 141, 35, 94, 88, 61, 111 &#125;;</span><br><span class="line">java.util.Arrays.sort(array, new Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">public int compare(Integer o1, Integer o2) &#123;</span><br><span class="line">return o2 - o1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class="line">Integer integer = array[i];</span><br><span class="line">System.out.println(&quot;integer:&quot; + integer);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们再来看看选择排序的例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package cn.pratice.simple;</span><br><span class="line">import java.util.Comparator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class BubbleSort &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">long startTime = System.currentTimeMillis();    //获取开始时间</span><br><span class="line"></span><br><span class="line">int[] arr = new int[] &#123; 156, 141, 35, 94, 88, 61, 111&#125;;</span><br><span class="line">System.out.println(&quot;交换前&quot;);</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(&quot;arr:&quot;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; arr.length - 1; i++) &#123;</span><br><span class="line">int k = i;</span><br><span class="line">for (int j = k + 1; j &lt; arr.length; j++) &#123;</span><br><span class="line">if(arr[j] &lt; arr[k]) &#123;</span><br><span class="line">k = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(i!=k) &#123;</span><br><span class="line">int temp = arr[i];</span><br><span class="line">arr[i] = arr[k];</span><br><span class="line">arr[k] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;交换后:&quot;);</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(&quot;arr:&quot;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">long endTime = System.currentTimeMillis();    //获取结束时间</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;程序运行时间：&quot; + (endTime - startTime) + &quot;ms&quot;);    //输出程序运行时间</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>那么选择排序的原理又是什么呢?<br>每一趟从待排序的记录中选出最小的元素，顺序放在已排好序的序列最后，直到全部记录排序完毕。也就是:每一趟在n-i+1(i=1,2…n-1)个记录中选取关键字最小的记录作为有序序列中第i个记录。基于此思想的有简单选择排序、树形选择排序和堆排序。我们现在所说的就是简单排序。</p><p>最后比较一下冒泡排序和简单排序的区别(从概念上分析):<br><strong>冒泡排序:</strong><br>依次比较相邻的两个数，将小数放在前面，大数放在后面。即第一趟比较第一个和第二个数，将小数放前，大数放后。然后比较第二个数和第三个数，嫁给你小数放前，大数放后，如此继续，直至比较最后两个数，嫁给你小数放前，大数放后。至此第一趟结束，将最大的数放在最后。如此下去，重复以上过程，直至最终完成。</p><p><strong>选择排序</strong><br>第一次从下标为0的开始，下标为0的这个数与后面的n-1个进行比较，找出最小或者最大的放在下标为0的这个位置，第二次从下标为1的开始比较，查询剩下的最大或者最小值，放在下标为1的位置，以此类推，直至排序完成。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之数组和链表</title>
      <link href="/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8/"/>
      <url>/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2><span id="数组和链表">数组和链表</span></h2><h3><span id="1数组">1.数组</span></h3><p>以添加第四个待办事项为例，但后面的那个抽屉已经放了别人的东西<br><img src="/2019/05/12/算法图解之数组和链表/array01.png" alt=""><br>这就像你与朋友去看电影，找到地方就坐后又来了一位朋友，但原来坐的地方没有空位置，只得再找一个方可坐下所有人的地方。在这种情况下，你需要请求计算机重新分配一块可容纳4个待办事项的内存，再将所有待办事项移到那里。<br><a id="more"></a><br>如果又来了一位朋友，而当前坐的地方也没有空位，你们就得再次转移，这是一件非常麻烦的事情。同样，在数组中添加新的元素也可能很麻烦。如果没有了空间，就得移到内存的其他地方，因此添加新的元素的速度会很慢一种解决之道是“预留座位”：即便当前只有3个待办事项，也请求计算机提供10个位置，以防需要添加待办事项。这样只要待办事项不超过10个，就无需转移。这是一个不错的权变措施，但是它也有如下两个缺点:<br>(1)浪费内存。比如本来四个就可以存储，你却申请了10个。<br>(2)如果超过了10个以上，还得转移。</p><h3><span id="2链表">2.链表</span></h3><p>链表中的元素可存储在内存的任何地方，如下图所示:<br><img src="/2019/05/12/算法图解之数组和链表/linkedlist.png" alt=""></p><p>链表的每个元素都存储了下一个元素的地址，从而使一系列随机的内存地址串在一起。</p><p>使用链表时，根本就不需要移动元素。这还可避免另外一个问题。假设你与五位朋友去看一部很火的电影。你们六个人想坐在一起，但看电影的人较多，没有六个在一起的座位。使用数组时有时就会遇到这样的情况。假设你要为数组分配10000个位置，内存中有10000个位置，但不都靠在一起。在这种情况下，你将无法为该数组分配内存。链表在此相当于说:”我们分开来说”，因此，只要有足够的内存空间，就能为链表分配内存。</p><h3><span id="3常见数组和链表操作的运行时间">3.常见数组和链表操作的运行时间</span></h3><p><img src="/2019/05/12/算法图解之数组和链表/array_linkedlist.png" alt=""></p><p>练习1:<br>假设你要编写一个记账的应用程序，每天将所有的支出记录下来，并在月底统计支出算算当月花了多少钱。因此，你执行的插入操作很多，但读取操作很少。该使用数组还是链表?</p><p>我的回答是:<br>使用链表。因为链表的插入和删除数据是非常快的，如果仅仅只是读取可以采用数组。</p><p>练习2:<br>假设你要为饭店创建一个接受顾客点菜单的应用程序。这个应用程序存储一系列点菜单。服务员添加点菜单，二厨师去除点菜单并制作菜肴。这是一个点菜单队列:服务员在队尾添加点菜单，厨师取出队列开头的点菜单并制定佳肴。<br><img src="/2019/05/12/算法图解之数组和链表/diancaiduilie.png" alt=""><br>你是使用数组还是链表来实现这个队列?</p><p>我的回答是:<br>从这幅图中可以看出这是一个先进先出队列。先进先出一般使用链表。<br>而且根据题中信息，插入删除功能较多，插入是服务员添加点菜单，厨师取出点菜单意味着完成炒菜(相当于删除点菜单)。所以我觉得应该使用链表来实现这个队列。</p><p>练习题3:<br>我们来做一个思考实验。假设Facebook记录一系列用户名，每当有用户视图登录Facebook时，都查找其用户名，如果找到就允许用户登录。由于经常有用户登录Facebook，因此需要执行大量的用户名查找操作。假设Facebook实验二分查找算法，而这种算法要求能够随机访问-立即获取中间的用户名。考虑到这一点，应使用数组还是链表来存储用户名呢?</p><p>我的回答是:<br>首先可以从题中获取的关键消息是需要执行大量的用户名查询操作，这就意味着查询会非常多。链表在插入和删除方面效率非常高，但是查询却不是很高。数组则与其相反。在此我认为应用使用数组。理由是因为根据题目要求中说算法要求随机访问。</p><p>练习题4:<br>经常有用户在Facebook注册。假设你已决定使用数组来存储用户名，在插入方面数组有何缺点呢?具体地说，在数组中添加新用户将会出现什么情况?<br>我的回答是:<br>针对这两种情况，有必要复习一下数组，分析数组的优缺点:</p><p>数组的优点如下:<br>(1)按照索引查询元素速度快;<br>(2)能存储大量数据;<br>(3)索引遍历数组方便;</p><p>数组的缺点:<br>(1)根据内容查找速度慢;<br>(2)数组的大小一经确定不能改变;<br>(3)数组只能存储一种类型的数组;<br>(4)增加、删除元素效率慢;<br>(5)未封装任何方法，所有操作都需要用户自己定义;</p><p>分析完后，再回到问题上，答案就已经出来的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之大O表示法</title>
      <link href="/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E5%A4%A7O%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
      <url>/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E5%A4%A7O%E8%A1%A8%E7%A4%BA%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2><span id="大o表示法">大O表示法</span></h2><p>大O表示法是一种特殊的表示法，指出了算法的速度有多快。</p><h2><span id="1算法的运行时间以不同的速度增加">1.算法的运行时间以不同的速度增加</span></h2><p>关于算法的运行时间以不同的速度增加，我联系到平时写代码，严谨的代码(易读，可扩展，精悍，经过多方测试等)，通常运行速度与那些不严谨的代码(完全相反)的代码进行对比，你会发现前者的运行速度是大于后者，这个虽然不能说绝对，大多情况都是这样的。<br>以我之前VsCode插件开发的一个反面例子为例:<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">const fs = require(&apos;fs&apos;);</span><br><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const vscode = require(&apos;vscode&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//存储token</span><br><span class="line">function storeToken(token) &#123;</span><br><span class="line"></span><br><span class="line">console.log(&quot;----------------access deep token-----------:&quot;+token);</span><br><span class="line"></span><br><span class="line">const pathMain = &apos;d:\\Workspace&apos;; //项目存放路径</span><br><span class="line"></span><br><span class="line">var pathToken = pathMain + &apos;\\&apos; + &quot;token&quot;; //创建toekn目录</span><br><span class="line"></span><br><span class="line">//判断项目存放目录是否存在</span><br><span class="line">if (fs.existsSync(pathMain)) &#123;</span><br><span class="line"></span><br><span class="line">//判断token目录是否存在</span><br><span class="line">if (!fs.existsSync(pathToken)) &#123;</span><br><span class="line"></span><br><span class="line">fs.mkdir(pathToken, function (err) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">return console.error(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//写入文件</span><br><span class="line">fs.writeFile(&quot;D://Workspace//token//token.txt&quot;, token, &apos;utf8&apos;, function (error) &#123;</span><br><span class="line"></span><br><span class="line">if (error) &#123;</span><br><span class="line">console.log(error);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">console.log(&apos;write success&apos;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">fs.mkdir(pathMain, function (err) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">return console.error(err);</span><br><span class="line">&#125;</span><br><span class="line">fs.mkdir(pathToken, function (err) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">return console.error(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//写入文件</span><br><span class="line">fs.writeFile(&quot;D://Workspace//token//token.txt&quot;, token, &apos;utf8&apos;, function (error) &#123;</span><br><span class="line"></span><br><span class="line">if (error) &#123;</span><br><span class="line">console.log(error);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">console.log(&apos;write success&apos;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = storeToken;</span><br></pre></td></tr></table></figure></p><p>这段代码的意思实际上就是判断某个文件夹是否存在，如果存在则进行下一步，也就是写入对应的文件，否则创建对应的文件并写入对应的文件。<br>这段代码完全可以简化很多，爱好程序的朋友基本上都知道，程序都是自上往下执行的，代码越短，执行速度也就是会越快，像上面这样的函数，其实可以简化很多，也就代表着执行速度也会很快(也体现着运行时间减少)。</p><p>大O表示法指的并非以秒为单位的速度。</p><p>大O表示法让你能够比较操作数，它指出算法运行时间的增速。</p><h2><span id="2理解不同的大o运行时间">2.理解不同的大O运行时间</span></h2><p><img src="/2019/05/12/算法图解之大O表示法/gezi.png" alt=""></p><p>假定是一个html,我要将body内容弄成这样有这么几种方式?<br>(1)添加<tr><td>等这样的很多个(手工劳动);<br>(2)使用for循环进行遍历(这个算法就是简单算法的一个实现);</td></tr></p><p>翻看了后面的答案，发现其实跟我上面说的内容本质上没有差别。</p><h2><span id="3大o表示法指出了最糟情况下的运行时间">3.大O表示法指出了最糟情况下的运行时间</span></h2><p>假设你使用简单查找在电话簿中找人。你知道，简单查找的运行时间为O(n)，这意味着在最糟情况下，必须查看电话簿中的每个条目。如果要查找的是Adit-电话簿中的第一个人，一次就能找到，无需查看多个条目。考虑到一次就找到Adit，请问这种算法的运行时间是O(n)还是O(1)呢？<br>我觉得是O(n)，理由是接下来万一是Bob或是Y先生呢。</p><h2><span id="4一些常见的大o运行运行时间">4.一些常见的大O运行运行时间</span></h2><p><img src="/2019/05/12/算法图解之大O表示法/gezi.png" alt=""></p><ul><li>算法的速度指的并非时间，而是操作数的增速。</li></ul><ul><li>谈论算法的速度时，我们说的是随着输入的增加，其运行时间将以什么样的速度增加。</li></ul><ul><li>算法的运行时间用大O表示法表示</li></ul><ul><li>O(log n)比O(n)快，当需要搜索的元素越多时，前者比后者快的越多。</li></ul><p>练习题:<br>(1)在电话簿中根据名字查找电话号码;<br>(2)在电话簿中根据电话号码找人(提示:你必须查找整个电话簿);<br>(3)阅读电话簿中每个人的电话号码;<br>(4)阅读电话簿中姓名以A打头的人的电话号码。这个问题比较棘手，它涉及第四章的概念，答案可能让你感到惊讶。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之内存的工作原理</title>
      <link href="/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E5%86%85%E5%AD%98%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E5%86%85%E5%AD%98%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><img src="/2019/05/12/算法图解之内存的工作原理/memory_work.png" alt=""><br>其中fe0ffeeb是一个内存单元的地址，需要将数据存储到内存时，你请求计算机提供存储空间，计算机给你一个存储地址。需要存储多项数据时，有两种基本方式，一种是数组，另外一种是链表。但它们并非都适用于所有情形，因此知道它们的差别非常重要。<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法图解之二分查找</title>
      <link href="/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
      <url>/2019/05/12/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E4%B9%8B%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<p>简单查找，如下图:</p><p><img src="/2019/05/12/算法图解之二分查找/simple_select.png" alt=""></p><p>从图可知那个眼镜男从1开始猜，猜到100，大家都知道这种猜法最终都会得到答案，就是时间问题而已。100毕竟是这个列表的最大长度。但是换言之，如果是一万、百万、上千亿呢？那么这种猜法虽然能够得到答案，但是时间方面的成本将会非常大。于是二分法应需而生。<br><a id="more"></a><br>二分法，如下图:<br><img src="/2019/05/12/算法图解之二分查找/dichotomy.png" alt=""></p><p>从图可知这次眼镜男学聪明了，从中间入手一分为二。以100为例猜大小，假定要猜的数字为65，这时眼镜男说50，于是小姐姐说小了，眼镜男再猜70，小姐姐说大了，这时眼镜男可以肯定的范围应该在51~69这个范围内，相比简单查找，这种方式效率要高的多。最终眼镜男肯定会猜到正确的数字，花费的时间与简单查找相比，花费时间肯定是很少的。</p><p>二分法也有其局限性，局限性就是必须要确保列表是有序的才行。</p><p>以代码来讲解:<br>简单查找，以数组为例，索引从0开始<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testSelect() throws Exception &#123;</span><br><span class="line"></span><br><span class="line">int [] num = new int[] &#123;1,2,3,4,5,6&#125;;</span><br><span class="line">for (int i = 0; i &lt; num.length; i++) &#123;</span><br><span class="line">System.out.println(num[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>二分法，例子如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testSelect() throws Exception &#123;</span><br><span class="line"></span><br><span class="line">int[] num = new int[] &#123;1,3,5,7,9,11&#125;;</span><br><span class="line"></span><br><span class="line">int start = 0;</span><br><span class="line"></span><br><span class="line">int end = num.length - 1;</span><br><span class="line">int i = 14;</span><br><span class="line"></span><br><span class="line">while(true) &#123;</span><br><span class="line">int mid = (start+end) / 2;</span><br><span class="line"></span><br><span class="line">if(i == num[mid]) &#123;</span><br><span class="line">System.out.println(&quot;index:&quot;+mid);</span><br><span class="line">break;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">if(i &lt; num[mid]) &#123;</span><br><span class="line">end = mid - 1;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">start = mid + 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(start &gt; end) &#123;</span><br><span class="line">System.out.println(&quot;no find,will insert in:&quot;+start);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于命和运</title>
      <link href="/2019/05/12/%E5%85%B3%E4%BA%8E%E5%91%BD%E5%92%8C%E8%BF%90/"/>
      <url>/2019/05/12/%E5%85%B3%E4%BA%8E%E5%91%BD%E5%92%8C%E8%BF%90/</url>
      
        <content type="html"><![CDATA[<p>在《见识》这本书中开篇的序言就是”命和运决定人的一生”。</p><p>一个人想得到命运之神的呵护并不容易。要想命好，首先认识命的重要性，即信命和认命。 信命是知道自己有所不能(清楚认识自己),认命则是不超越命运给自己的画的线，对于得不到的坦然接受。<br><a id="more"></a><br>影响命的因素:环境因素+我们自己对未来走向划定的方向。</p><p>正如雷军曾经说的，在风口上，猪也能飞起来。记得曾经诺基亚在手机市场上无疑是一个大巨头，但是这个大巨人随着智能手机时代的到来，没有把握好机会，从而不复当年了。</p><p>所谓命就是一个人看待问题和做事情的方法，如此而已，但它们决定了人的一生。</p><p>以下撒切尔夫人说的这样一句话，挺有启示意义的:<br><strong>注意你的想法，因为它能决定你的言辞和行动。<br>注意你的言辞和行动，因为它能主导你的行为。<br>注意你的行为，因为它能变成你的习惯。<br>注意你的习惯，因为它能塑造你的性格。<br>注意你的性格，因为它能决定你的命运。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老黄牛读后感</title>
      <link href="/2019/05/12/%E8%80%81%E9%BB%84%E7%89%9B%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
      <url>/2019/05/12/%E8%80%81%E9%BB%84%E7%89%9B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>感悟: 有句话叫做，一千个人里面就有一千个哈姆莱特，通常表示着不同的人对某个事物看法不同。 今天再读这篇文章时，联想到2018年的程序员跳楼事件。至于为什么跳楼，真相究竟是什么，这里不作探究。这里想说的是，放眼整个世界，每天都有像老黄牛这样的例子。<br><a id="more"></a><br>老黄牛的例子让我战战兢兢如履薄冰，丝毫不敢松懈自己。因为我不想自己的未来像老黄牛这样。</p><p>记得曾经参加过一个读书会活动，与一个前辈交谈，那个前辈跟我说了他闺蜜的事情，说他闺蜜老公快35了，在华为公司做纯技术性方面的，他闺蜜为此忧心忡忡，因此而加班加点的学习，防止以后万一有什么情况，好歹有个应对办法。对于传统社会而言，男人就是顶梁柱。一旦这个顶梁柱倒了，随之而来对于这个家族，将会是非常大的打击。</p><p>联想到如今，初中级开发工程师层出不穷，软件开发的市场逐渐饱满，我不禁问自己未来的核心竞争力在哪？也许目前我已经具备了全栈开发的技术储备，但是我并没有全栈的眼界。什么是眼界？眼界就好比一个人的见识，正如吴军写的一本书《见识》中说的那样，你能走多远，取决于他的见识。</p><p>记得我哥哥当初对我说过一句话，未来的人才将是T字型的，要想不断前行，唯一不断提高自己的核心竞争力(这个核心竞争力不单单是吃饭的家伙，还有很多，比如人际交往能力、判断力、思考力等)。</p><p>绝大多数的人常常满足于已知的，缺乏探索的勇气(换言之缺乏接收新生事物的勇气，比如我就是如此)，每年我想除了给自己定flag并实现它，同时也应该提高自己在其它方面的能力，比如做软件开发的同时，我是不是也应该了解了解产品、运营等他们的工作。或者是做IT的，也应该接触接触一些非IT的人士。再换言之就个人而言，我是不是应该也可以去接触一下我摄影方面的等或者是给自己一个假期来一个说走就走的旅行。</p><p>正文如下(大家可以好好思考读一读):<br>还没有像往年一样为主人犁完五亩地，老黄牛的一条腿断了。<br><strong>    折腿的事就发生在昨天。<br>    昨天的天气很好，风和日丽。这是个今年开春以来少有的好日子，农夫们不用互相招呼就纷纷踏上仍有些峭寒的田垄，一年的农事在鞭子的抽打声和吆喝声中开始了。老黄牛是一头经验丰富的耕牛，忠心耿耿，勤奋劳作。他像往年一样卖力耕田，但他在时光的打磨中已经很衰老了，拉着一驾犁好像拉着一座大山在走，异常沉重。主人斥责他，他羞愧难当，叹了一口气，一咬牙一使劲，他听到了发自身体内部的一声响，一条腿断了，他知道这意味着什么，这是生命戛然而止的声音。<br>    暮霭落尽，黑夜升满。老黄牛独自蜷伏在牛栏里，想着自己的心事。他抬起疲惫的头颅，凝视着星空下那片肥沃的黑土，心中充满眷念和回忆。他把自己的爱与恨、乐与苦、血与汗以及生命中的一切都交给了这片土地。日月作证，鲜嫩的青草作证，金黄的果实作证，还有孩子作证。<br>    那是主人家的孩子，胖嘟嘟红扑扑的样子，一个很阳光的男孩。那天中午，小男孩跑到牛栏前，向老黄牛宣读了他的一篇获奖作文：“……我家的这头老黄牛，又高又大，浑身的皮毛是灰褐色的。嘴巴像个簸箕口，眼睛圆鼓鼓的很有神，一对牛角像拉满的弓箭，威武有力。它干起活儿来劲头大，也舍得卖力气。有一天中午，天气热极了，太阳像个火球似的挂在头顶，简直让人喘不过气来，我以为老黄牛一定不干活儿了，就跑到田间去看，它仍然还在拉犁耕田。它身上粘着一块块干泥巴，喘着粗气，双腿踏进没膝深的烂泥中，一步一步拉着犁，没有一点要停下来的样子。”老黄牛记得，那天小男孩给了它一把嫩青草和一个敬礼。<br>昨天下午，村里的兽医被请来。兽医一边查伤情一边摇头，只是对伤口作了简单的象征性包扎。兽医当着老黄牛的面对主人说：“一头废牛，这种牛还能拉犁，真是怪事。主人呐，现在你只有一件事要做，宰掉它，然后卖钱。”主人望着老黄牛，目光变得闪烁不定，但老黄牛知道，那里面暗藏着可怕的杀戮凶光。<br>     夜已三更，天空的星星被风吹得了无踪影，整个村子沉浸在死一般的寂静和黑暗中。倏然间，主人家正屋的灯亮了，磨刀的声音和屠夫特有的浑浊笑声敲碎了夜的寂寥。老黄牛知道大限将至。闭了眼任所有的泪水流尽。老黄牛最后大吼一声，用自己的方式结果了自己。<br>听到一声闷响，主人急忙领着提了刀的屠夫赶到牛栏。他们看到的只是扭断了脖子扑倒在地的老黄牛和一面粘满了老黄牛鲜血的土墙。<br>    屠夫气愤地骂道，畜生，我这把刀白磨了。<br>    主人却笑了，这畜生倒是挺体贴我呢，要我少花钱。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背影读后感</title>
      <link href="/2019/05/12/%E8%83%8C%E5%BD%B1%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
      <url>/2019/05/12/%E8%83%8C%E5%BD%B1%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>这篇文章不记得是学生时期那个时期学的，只单单记得初读时还没有深刻的体会。而如今读起来，不禁让人眼睛闪烁着泪光，有种想哭的感觉。 正如一句诗歌所说的那样，“初闻不知曲中意，再听已是曲中人”。<br><a id="more"></a><br>原文如下(大家可以细细品味，每天工作再怎么繁忙，还是得留点时间读读书，让自己的心沉静下来):<br><strong>我与父亲不相见已二年余了，我最不能忘记的是他的背影 。<br>　　那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子。我从北京到徐州打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说：“事已如此，不必难过，好在天无绝人之路！”<br>　　回家变卖典质，父亲还了亏空；又借钱办了丧事。这些日子，家中光景很是惨淡，一半因为丧事，一半因为父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。<br>　　到南京时，有朋友约去游逛，勾留了一日；第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖；颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有什么要紧的了。他踌躇了一会，终于决定还是自己送我去。我再三劝他不必去；他只说：“不要紧，他们去不好！”<br>　　我们过了江，进了车站。我买票，他忙着照看行李。行李太多了，得向脚夫行些小费才可过去。他便又忙着和他们讲价钱。我那时真是聪明过分，总觉他说话不大漂亮，非自己插嘴不可，但他终于讲定了价钱；就送我上车。他给我拣定了靠车门的一张椅子；我将他给我做的紫毛大衣铺好座位。他嘱我路上小心，夜里要警醒些，不要受凉。又嘱托茶房好好照应我。我心里暗笑他的迂；他们只认得钱，托他们只是白托！而且我这样大年纪的人，难道还不能料理自己么？唉，我现在想想，那时真是太聪明了！<br>　　我说道：“爸爸，你走吧。”他往车外看了看说：“我买几个橘子去。你就在此地，不要走动。”我看那边月台的栅栏外有几个卖东西的等着顾客。走到那边月台，须穿过铁道，须跳下去又爬上去。父亲是一个胖子，走过去自然要费事些。我本来要去的，他不肯，只好让他去。我看见他戴着黑布小帽，穿着黑布大马褂，深青布棉袍，蹒跚地走到铁道边，慢慢探身下去，尚不大难。可是他穿过铁道，要爬上那边月台，就不容易了。他用两手攀着上面，两脚再向上缩；他肥胖的身子向左微倾，显出努力的样子，这时我看见他的背影，我的泪很快地流下来了。我赶紧拭干了泪。怕他看见，也怕别人看见。我再向外看时，他已抱了朱红的桔子往回走了。过铁道时，他先将桔子散放在地上，自己慢慢爬下，再抱起桔子走。到这边时，我赶紧去搀他。他和我走到车上，将桔子一股脑儿放在我的皮大衣上。于是扑扑衣上的泥土，心里很轻松似的。过一会儿说：“我走了，到那边来信！”我望着他走出去。他走了几步，回过头看见我，说：“进去吧，里边没人。”等他的背影混入来来往往的人里，再找不着了，我便进来坐下，我的眼泪又来了。<br>　　近几年来，父亲和我都是东奔西走，家中光景是一日不如一日。他少年出外谋生，独立支持，做了许多大事。哪知老境却如此颓唐！他触目伤怀，自然情不能自已。情郁于中，自然要发之于外；家庭琐屑便往往触他之怒。他待我渐渐不同往日。但最近两年不见，他终于忘却我的不好，只是惦记着我，惦记着我的儿子。我北来后，他写了一信给我，信中说道：“我身体平安，惟膀子疼痛厉害，举箸提笔，诸多不便，大约大去之期不远矣。”我读到此处，在晶莹的泪光中，又看见那肥胖的、青布棉袍黑布马褂的背影。唉！我不知何时再能与他相见！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>富爸爸财务自由之路</title>
      <link href="/2019/05/12/%E5%AF%8C%E7%88%B8%E7%88%B8%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
      <url>/2019/05/12/%E5%AF%8C%E7%88%B8%E7%88%B8%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>最近阅读一本书《富爸爸财务自由之路》，看序言和其中一部分内容比较有感触</p><p>一、你在哪个象限？这个象限适合你吗?<br>在书中开篇贴了一张图，如下所示:<br><img src="/2019/05/12/富爸爸财务自由之路/ebsi.jpg" alt=""><br><a id="more"></a><br>这四个英文字母分别代表的意思是 E，对应的单词是Employee，即雇员; B,对应的单词是Business owner,即企业所有者(老板); S,对应的单词Self-employed，即自由职业者; I,对应的单词Investor,即投资人;</p><p>我现在所处的象限和大多数人那样，均为E。</p><p>要说这个象限是否适合我，就目前而言还是比较适合我的。</p><p>不过人还是要心存理想，我还是希望日后我能成为一名Business owner或者投资人。</p><p>二、长大后想做什么?<br>长大后想做什么？ 相信90后的朋友们，每个人从小都会有这样一个梦想，想成为一名科学家或者是老师、大老板、救世的大英雄。 这些梦想的来源为身边的人(包括父母、朋友、亲戚、同学、阅读的书籍等等)。 从中可以看出耳濡目染的影响。 所处的环境决定你会成为什么样的人，这就好比为什么很多家长为什么想让自己的孩子进入重点中学，并不仅仅是重点中学师资资源多么好(当然了，这个也很重要)，还有一个重要因素就是环境，有句话叫做，近朱者赤近墨者黑。</p><p>三、水的故事，两个人竞争<br>水的故事，个人感触极深，以软件开发为例，我在想为什么程序员被称作码农，是因为我们一直在做重复劳动，将脑力劳动硬是变成了体力。 比如一段代码出现五到六次以上，为什么就不能将其抽象成一个函数调用？再比如明知动手直接开干会出问题，为什么就不能事先好好思考，用笔画一个流程图梳理一下(尽管可能有点丑，但这并不是最重要的，最重要的是把业务逻辑想清楚)。 书中水的故事，两个人竞争，一个人累死累活起早贪黑去很远的地方用桶装水，另一个则在这段时间写了一个商业规划书，拉了几笔投资，用作通水的不锈钢管道。 最后的结果是，起早贪黑的人面临失业，而另外一个人，无时无刻不再赚钱，而且非常轻松。 这让我想到一个词，“规矩”，在软件开发中也有规矩，比如代码规范(每个人编码的方式存在差异，但是如果将其统一化，团队主义多一点，个人英雄主义少一点，那么我想加班的频率也就不那么多了)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04忘记MySQL5.7的root用户密码之解决方案</title>
      <link href="/2019/05/07/Ubuntu16-04%E5%BF%98%E8%AE%B0MySQL5-7%E7%9A%84root%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2019/05/07/Ubuntu16-04%E5%BF%98%E8%AE%B0MySQL5-7%E7%9A%84root%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>其实也就四步，如下:<br><a id="more"></a></p><h2><span id="修改配置文件">修改配置文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vimi /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><p>并在 在[mysqld]下方的skip-external-locking下面添加一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>然后再重启MySQL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></p><h2><span id="进入mysql修改密码">进入MySQL修改密码</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>一路回车，免密登录</p><p>设置密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE mysql.user SET authentication_string=password(&apos;kdfaslf&apos;) WHERE User=&apos;root&apos; AND Host =&apos;localhost&apos;;</span><br></pre></td></tr></table></figure></p><p>刷新权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p><p>退出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure></p><h2><span id="修改配置文件sudo-vimi-etcmysqlmysqlconfdmysqldcnf">修改配置文件(sudo vimi /etc/mysql/mysql.conf.d/mysqld.cnf)</span></h2><p>并将在[mysqld]下方的skip-external-locking下面添加一行的skip-grant-tables去除</p><h2><span id="重启mysql让配置生效回归正常">重启MySQL让配置生效，回归正常</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure><p>参考资料如下:<br><a href="https://blog.csdn.net/mr_hui_/article/details/83011202" target="_blank" rel="noopener">Ubuntu 16.04下忘记MySQL密码解决方法</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windowns下code: command not found</title>
      <link href="/2019/05/07/Windowns%E4%B8%8Bcode-command-not-found/"/>
      <url>/2019/05/07/Windowns%E4%B8%8Bcode-command-not-found/</url>
      
        <content type="html"><![CDATA[<p>错误信息:code: command not found’</p><p>解决办法:<br>配置VsCode环境变量<br><a id="more"></a><br>首先找到VsCode点击其属性，查看路径<br><img src="/2019/05/07/Windowns下code-command-not-found/01.png" alt=""></p><p>进入这个路径后<br><img src="/2019/05/07/Windowns下code-command-not-found/02.png" alt=""></p><p>将D:\Program Files\Microsoft VS Code\bin添加到环境变量即可</p><p>code这个命令很重要，比如最近我做的一个叫作根据vscode插件名称去对应的插件市场下载插件就需要用到code命令。</p>]]></content>
      
      
      
        <tags>
            
            <tag> VsCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下CRMEB环境搭建</title>
      <link href="/2019/05/06/Linux%E4%B8%8BCRMEB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/05/06/Linux%E4%B8%8BCRMEB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>环境准备:<br>PHP7.0.33<br>MySQL5.7<br>Apache2.4</p><p>PHP环境安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php-pear php7.0-cli php7.0-common php7.0-curl \</span><br><span class="line">    php7.0-dev php7.0-fpm php7.0-json php7.0-mbstring php7.0-mcrypt \</span><br><span class="line">    php7.0-mysql php7.0-opcache php7.0-zip php7.0-intl php7.0-gd php7.0-xml</span><br></pre></td></tr></table></figure><p>MySQL环境安装:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-client mysql-server</span><br></pre></td></tr></table></figure></p><p>Apache2.4环境安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2><span id="克隆gitee项目">克隆Gitee项目</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html</span><br><span class="line"></span><br><span class="line">git clone https://gitee.com/ZhongBangKeJi/CRMEB</span><br></pre></td></tr></table></figure><h2><span id="修改apache的配置vim-etcapache2apache2conf">修改apache的配置(vim /etc/apache2/apache2.conf)</span></h2><p>可以通过<code>/Option</code>快速定位查找<br>配置文件如下:<br><img src="/2019/05/06/Linux下CRMEB环境搭建/01.png" alt=""></p><p>将其改为如下:<br><img src="/2019/05/06/Linux下CRMEB环境搭建/02.png" alt=""></p><p>修改完apache配置文件后，记得重启一下apache(重启可以让配置文件生效)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure></p><h2><span id="访问httpipcrmeb出现如图">访问</span></h2><p><img src="/2019/05/06/Linux下CRMEB环境搭建/03.png" alt=""></p><p>解决办法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install libapache2-mod-php</span><br></pre></td></tr></table></figure></p><p>这个问题的原因是因为apache没有对php的解析模块导致的，安装一下就好了。<br>安装后记得重启一下apache2</p><p>这时在访问时，出现如图:<br><img src="/2019/05/06/Linux下CRMEB环境搭建/04.png" alt=""></p><p>这样就表示没有问题了，这时你只需输入<a href="http://IP/CRMEB/public/install进入安装即可" target="_blank" rel="noopener">http://IP/CRMEB/public/install进入安装即可</a><br>再进入安装前，先给目录授权一下，不然监测环境会出现目录、文件权限监测不通过问题</p><h2><span id="授权">授权</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html/CRMEB</span><br><span class="line"></span><br><span class="line">chmod -R 777 public</span><br><span class="line">chmod -R 777 runtime</span><br><span class="line">chmod -R 777 application</span><br></pre></td></tr></table></figure><h2><span id="安装流程">安装流程</span></h2><p>(1)安装向导<br><img src="/2019/05/06/Linux下CRMEB环境搭建/05.png" alt=""></p><p>(2)检测环境<br><img src="/2019/05/06/Linux下CRMEB环境搭建/06.png" alt=""><br>红色标记处是常见错误，可参考后面的问题解决链接。</p><p>(3)创建数据库<br><img src="/2019/05/06/Linux下CRMEB环境搭建/07.png" alt=""><br>红色标记处是常见错误，可参考后面的问题解决链接。</p><p>(4)安装成功<br><img src="/2019/05/06/Linux下CRMEB环境搭建/08.png" alt=""></p><p>点击进入后台,如图:</p><p><img src="/2019/05/06/Linux下CRMEB环境搭建/09.png" alt=""></p><p>后台管理界面如图:<br><img src="/2019/05/06/Linux下CRMEB环境搭建/10.png" alt=""><br>本地虚拟机访问地址:<a href="http://IP/CRMEB/admin/login/index.html" target="_blank" rel="noopener">http://IP/CRMEB/admin/login/index.html</a><br>如果是远程服务器，访问地址就变更为:<a href="http://IP/index.php/admin/login/index.html" target="_blank" rel="noopener">http://IP/index.php/admin/login/index.html</a></p><p>注意如果你访问后台管理界面并不像上面那样，而是出现没有样式的登录界面，请在/var/www/html/CRMEB目录下执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r ./* ../</span><br></pre></td></tr></table></figure></p><p>最后再重启一下apache服务器发现就正常可以看到登录界面了。</p><p>问题解决链接:<br><a href="https://developers-youcong.github.io/2019/05/06/PHP%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8curl-init-%E5%87%BD%E6%95%B0/">PHP无法使用curl_init()函数</a><br><a href="https://developers-youcong.github.io/2019/05/06/%E8%AF%B7%E5%9C%A8mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AEsql-mode%E6%88%96sql-mode%E4%B8%BANO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION/">请在mysql配置文件修sql-mode或sql_mode为NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</a></p><p>参考资料如下:<br><a href="https://www.kancloud.cn/crmeb/crmeb/895383" target="_blank" rel="noopener">CRMEB官方安装文档</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP无法使用curl_init()函数</title>
      <link href="/2019/05/06/PHP%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8curl-init-%E5%87%BD%E6%95%B0/"/>
      <url>/2019/05/06/PHP%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8curl-init-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>主要针对在Ubuntu16.04搭建CRMEB环境时，监测环境会出现一个curl_init问题，这时只需执行如下命令即可解决:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php-curl</span><br></pre></td></tr></table></figure></p><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>请在mysql配置文件修sql-mode或sql_mode为NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</title>
      <link href="/2019/05/06/%E8%AF%B7%E5%9C%A8mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AEsql-mode%E6%88%96sql-mode%E4%B8%BANO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION/"/>
      <url>/2019/05/06/%E8%AF%B7%E5%9C%A8mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AEsql-mode%E6%88%96sql-mode%E4%B8%BANO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION/</url>
      
        <content type="html"><![CDATA[<p>错误信息:请在mysql配置文件修sql-mode或sql_mode为NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</p><p>解决办法(最有效，以MySQL5.7为例):<br>修改配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure></p><p>并在该配置文件添加如下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql-mode = NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure></p><p>最后，重启一下MySQL服务器即可解决该问题<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apache不能解析php之解决办法</title>
      <link href="/2019/05/06/apache%E4%B8%8D%E8%83%BD%E8%A7%A3%E6%9E%90php%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2019/05/06/apache%E4%B8%8D%E8%83%BD%E8%A7%A3%E6%9E%90php%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>记录一下Ubuntu16.04下的apache服务器不能解析php的问题，如图所示:</p><p><img src="/2019/05/06/apache不能解析php之解决办法/01.png" alt=""></p><a id="more"></a><p>对于这个Ubuntu16.04最直接最快速的解决办法就是执行如下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get install libapache2-mod-php</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows上hexo: command not found</title>
      <link href="/2019/05/05/windows%E4%B8%8Ahexo-command-not-found/"/>
      <url>/2019/05/05/windows%E4%B8%8Ahexo-command-not-found/</url>
      
        <content type="html"><![CDATA[<p>使用hexo写博客已经有好几个月了，今天突然出现hexo: command not found，应该与我白天的时候调一下环境变量等有关。<br>在对应的path添加环境变量，即可解决该问题。我的环境变量路径为:E:\Hexo\node_modules\hexo\bin<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SyntaxError: Non-ASCII character &#39;æ&#39; in file csdn.py on line 7, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details</title>
      <link href="/2019/05/03/SyntaxError-Non-ASCII-character-xe6-in-file-csdn-py-on-line-7-but-no-encoding-declared-see-http-python-org-dev-peps-pep-0263-for-details/"/>
      <url>/2019/05/03/SyntaxError-Non-ASCII-character-xe6-in-file-csdn-py-on-line-7-but-no-encoding-declared-see-http-python-org-dev-peps-pep-0263-for-details/</url>
      
        <content type="html"><![CDATA[<p>错误信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SyntaxError: Non-ASCII character &apos;æ&apos; in file csdn.py on line 7, but no</span><br><span class="line">encoding declared; see http://python.org/dev/peps/pep-0263/ for details</span><br></pre></td></tr></table></figure></p><p>错误原因:<br>原因是因为Python在默认状态下不支持源代码中的编码所致。<br><a id="more"></a><br>解决方案:<br>在Python文件开头加上<code># -*- coding: utf-8 -*</code>即可解决该问题</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入分析JavaWeb之JSP</title>
      <link href="/2019/05/02/%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90JavaWeb%E4%B9%8BJSP/"/>
      <url>/2019/05/02/%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90JavaWeb%E4%B9%8BJSP/</url>
      
        <content type="html"><![CDATA[<p>本文主要围绕如下几个方面?</p><ol><li>什么是JSP，它可以做什么及其它的生命周期是什么</li><li>JSP的九大内置对象</li><li>JSP的四大作用域<a id="more"></a></li></ol><h2><span id="什么是jsp它可以做什么">什么是JSP，它可以做什么</span></h2><p>JSP是Java Server Page的缩写，翻译过来的意思是Java服务器页面。</p><p><strong>它可以做什么呢?</strong><br>(1)处理表单提交;<br>(2)数据渲染;<br>(3)页面逻辑处理;</p><p>一句话，只有想不到没有做不到。</p><p>比如html+js+JavaWeb结合一起开发，这样开发的好处在于可以前后端分离，不必担心像jsp那样，页面上全部都是&lt;%%&gt;之类的标签，年头久了，会增加维护的困难。当然了，之所以维护困难，也是因为开发者没有约定好一些规范。使用html+js+JavaWeb一套，比较麻烦的就是需要写较多的js，js是一个让人又爱又恨的家伙。让人爱，是因为它很强大可以做很多事情，让人恨是因为，一旦开发者粗心一点，就会报错，一旦报错就得浏览器调试，有的时候还得考虑浏览器缓存问题，比如明明已经改了但是还是报错，这时清理一下浏览器缓存就好。</p><p><strong>JSP的生命周期</strong><br>(1)servlet容器编译Servlet源文件，生成Servlet类(<strong>编译阶段</strong>);<br>(2)加载与JSP对应的Servlet类，创建其实例，并调用它的初始化方法(<strong>初始化阶段</strong>);<br>(3)调用与JSP对应的Servlet实例的服务方法(<strong>执行阶段</strong>);<br>(4)调用与JSP对应的Servlet实例的销毁方法，然后销毁Servlet实例(<strong>销毁阶段</strong>);</p><p>如图所示(图更能生动的表现):<br><img src="/2019/05/02/深入分析JavaWeb之JSP/01.png" alt=""></p><h2><span id="jsp的九大内置对象">JSP的九大内置对象</span></h2><h3><span id="request对象">request对象</span></h3><p>request 对象是 javax.servlet.httpServletRequest类型的对象。 该对象代表了客户端的请求信息，主要用于接受通过HTTP协议传送到服务器的数据。（包括头信息、系统信息、请求方式以及请求参数等）。request对象的作用域为一次请求。</p><p><em>request的应用场景有哪些?</em><br>(1)接收参数<br>(2)设置编码(比如jsp中post请求乱码)<br>(3)页面转发</p><p>简单举个例子:<br>login.jsp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;login_handle.jsp&quot; method=&quot;post&quot;&gt;</span><br><span class="line">用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">密码:&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;</span><br><span class="line">    &lt;br/&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>login_hanglde.jsp:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">request.setCharacterEncoding(&quot;UTF8&quot;);</span><br><span class="line">String username = request.getParameter(&quot;username&quot;);</span><br><span class="line">String password = request.getParameter(&quot;password&quot;);</span><br><span class="line"></span><br><span class="line">out.println(&quot;username:&quot;+username);</span><br><span class="line">out.println(&quot;password:&quot;+password);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>从上面例子可以看到request.getParameter主要用于接收数据，而其中的request.setCharacterEncoding(“UTF8”)用来修正字符编码。</p><p>关于request，我认为有必要看看看它的源码实现，首先基于request对象属于HttpServletRequest类型的对象，所以我们要看源码的话就先去看HttpServletRequest的源码。在这里我就不列出源码了，大家可以自己去看，特别是使用maven来构建项目的，阅读源码更加方便。</p><h3><span id="response对象">response对象</span></h3><p>response 代表的是对客户端的响应，主要是将JSP容器处理过的对象传回到客户端。response对象也具有作用域，它只在JSP页面内有效。</p><p><em>response对象的应用场景有哪些?</em><br>(1)重定向<br>(2)刷新页面</p><p>在这里我要说下面试常考题之一:</p><p>重定向：<br>　　(1)发送了一次新的请求，之前的数据是不存在的，发生在客户端<br>　　(2)浏览器的地址是重定向的页面的地址</p><p>转发：<br>　　(1)没有开启新的请求，原来请求的数据一并传递过来，发生在服务器端。<br>　　(2)浏览器的地址栏不会发生改变</p><p>建议还不明白的可以自己可以写一个简单的例子，其实以我上面的例子就可以比较出去，只需在login_handle.jsp中的&lt;%%&gt;里面添加如下代码即可比较出来:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(&quot;index.jsp&quot;);</span><br><span class="line">request.getRequestDispatcher(&quot;index.jsp&quot;).forward(request, response);</span><br></pre></td></tr></table></figure></p><p>注意:如果要以转发做实验，请注释掉重定向，如果以重定向做实验请注释掉转发。</p><h3><span id="session对象">session对象</span></h3><p>session 对象是由服务器自动创建的与用户请求相关的对象。服务器为每个用户都生成一个session对象，用于保存该用户的信息，跟踪用户的操作状态。session对象内部使用Map类来保存数据，因此保存数据的格式为 “Key/value”。 session对象的value可以使复杂的对象类型，而不仅仅局限于字符串类型。</p><p>session与cookie是web开发常用的，通常像cookie的话，以电商项目为例，用作购物车比较多，但是像保存用户关键信息的话还是用session比较靠谱。</p><p>关于session会话，个人建议最好自己模拟一个登陆，然后用户在里面实现好几个页面跳转等之类的，这样能够更好的理解这个会话。</p><h3><span id="application对象">application对象</span></h3><p>application 对象可将信息保存在服务器中，直到服务器关闭，否则application对象中保存的信息会在整个应用中都有效。与session对象相比，application对象生命周期更长，类似于系统的“全局变量”。</p><p><em>应用场景如下:</em><br>(1)统计网站访问量;<br>(2)解决硬编码问题;</p><p>举个例子说明一下:<br>common.jsp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@page import=&quot;cn.jdbc.simple.UserServiceImpl&quot;%&gt;</span><br><span class="line">&lt;%@page import=&quot;cn.jdbc.simple.UserService&quot;%&gt;</span><br><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%! int i;  </span><br><span class="line">    %&gt;  </span><br><span class="line">    &lt;!-- 将i值自加后放入application的变量内 --&gt;  </span><br><span class="line">    &lt;%application.setAttribute(&quot;counter&quot;,String.valueOf(++i));%&gt;  </span><br><span class="line">    &lt;!-- 直接输出application变量值 --&gt;  </span><br><span class="line">    &lt;%=application.getAttribute(&quot;counter&quot;) %&gt;</span><br></pre></td></tr></table></figure></p><p>将common.jsp引进任意一个jsp，最好是首页index.jsp。</p><p>只需将如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=application.getAttribute(&quot;counter&quot;) %&gt;</span><br></pre></td></tr></table></figure></p><p>引入其它页面即可实现实时统计</p><h3><span id="out对象">out对象</span></h3><p>out 对象用于在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。在使用 out 对象输出数据时，可以对数据缓冲区进行操作，及时清除缓冲区中的残余数据，为其他的输出让出缓冲空间。待数据输出完毕后，要及时关闭输出流。</p><h3><span id="pagecontext对象">pageContext对象</span></h3><p>pageContext 对象的作用是取得任何范围的参数，通过它可以获取 JSP页面的out、request、reponse、session、application 等对象。pageContext对象的创建和初始化都是由容器来完成的，在JSP页面中可以直接使用 pageContext对象。<br>例如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    String path = request.getContextPath();</span><br><span class="line">    String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></p><p><em>应用场景</em><br>获取项目路径，主要用于解决路径问题</p><h3><span id="config对象">config对象</span></h3><p>config 对象的主要作用是取得服务器的配置信息。通过 pageConext对象的 getServletConfig() 方法可以获取一个config对象。当一个Servlet 初始化时，容器把某些信息通过config对象传递给这个 Servlet。 开发者可以在web.xml 文件中为应用程序环境中的Servlet程序和JSP页面提供初始化参数。<br><em>应用场景</em><br>获取配置信息</p><h3><span id="page对象">page对象</span></h3><p>page 对象代表JSP本身，只有在JSP页面内才是合法的。 page隐含对象本质上包含当前 Servlet接口引用的变量，类似于Java编程中的 this 指针。</p><h3><span id="exception对象">exception对象</span></h3><p>exception 对象的作用是显示异常信息，只有在包含 isErrorPage=”true” 的页面中才可以被使用，在一般的JSP页面中使用该对象将无法编译JSP文件。excepation对象和Java的所有对象一样，都具有系统提供的继承结构。exception 对象几乎定义了所有异常情况。在Java程序中，可以使用try/catch关键字来处理异常情况； 如果在JSP页面中出现没有捕获到的异常，就会生成 exception 对象，并把 exception 对象传送到在page指令中设定的错误页面中，然后在错误页面中处理相应的 exception 对象。</p><p>举例说明:<br>test.jsp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@page import=&quot;cn.jdbc.simple.User&quot;%&gt;</span><br><span class="line">&lt;%@page import=&quot;java.util.List&quot;%&gt;</span><br><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot; errorPage=&quot;error.jsp&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">     System.out.println(100/0);</span><br><span class="line">      %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>error.jsp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot; isErrorPage=&quot;true&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">异常信息：&lt;%=exception.getMessage() %&gt;&lt;br&gt;</span><br><span class="line">  异常信息String描述：&lt;%=exception.toString() %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><h2><span id="jsp的四大作用域">JSP的四大作用域</span></h2><h3><span id="page作用域">page作用域</span></h3><p>代表变量只能在当前页面上剩下些</p><h3><span id="request作用域">request作用域</span></h3><p>代表变量能在一次请求中生效，一次请求可能包含一个页面，也可能包含多个页面，比如页面A请求转发页面B</p><h3><span id="session作用域">session作用域</span></h3><p>代表变量能在一次会话中生效，基本上就是能在web下项目下都有效，session的使用与cookie也有很大关系，一般来说，只要浏览器不关闭，cookie就会一直生效，cookie生效，session的使用就不会受到影响</p><h3><span id="application作用域">application作用域</span></h3><p>代表变量能在一个应用下(多个会话)，在服务器下的多个项目之间都能够使用。</p><p>参考资料如下:<br><a href="https://www.cnblogs.com/leirenyuan/p/6016063.html" target="_blank" rel="noopener">jsp 九大内置对象和其作用详解</a><br><a href="https://www.runoob.com/jsp/jsp-tutorial.html" target="_blank" rel="noopener">jsp菜鸟教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用sqlyog连接 Mysql 出现1251错误</title>
      <link href="/2019/05/02/%E4%BD%BF%E7%94%A8sqlyog%E8%BF%9E%E6%8E%A5-Mysql-%E5%87%BA%E7%8E%B01251%E9%94%99%E8%AF%AF/"/>
      <url>/2019/05/02/%E4%BD%BF%E7%94%A8sqlyog%E8%BF%9E%E6%8E%A5-Mysql-%E5%87%BA%E7%8E%B01251%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>错误如图所示:<br><img src="/2019/05/02/使用sqlyog连接-Mysql-出现1251错误/01.png" alt=""></p><p>错误详情信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1251 client does not support authentication protocol requested by server;consider upgrading Mysql client</span><br><span class="line"></span><br><span class="line">ERROR 1396 (HY000): Operation ALTER USER failed for &apos;root&apos;@&apos;localhost&apos;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>问题原因:<br>主要是由于mysql8以前的加密规则与mysql8以后的存在差异。</p><p>解决办法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos; PASSWORD EXPIRE NEVER;  ##修改加密规则</span><br><span class="line"></span><br><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;password&apos;; ##更新一下用户的密码 password 为自己想要重新设置的密码</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES; ##刷新权限</span><br></pre></td></tr></table></figure></p><p>本文参考资料如下:<br><a href="https://blog.csdn.net/SUNbrightness/article/details/80600953" target="_blank" rel="noopener">Navicat 连接 Mysql 出现1251错误</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The server time zone value &#39;ÖÐ¹ú±ê×¼Ê±¼ä&#39; is unrecognized or represents more than one time zone.</title>
      <link href="/2019/05/01/The-server-time-zone-value-O%C3%90%C2%B9u%C2%B1e%C3%97%C2%BCE%C2%B1%C2%BCa-is-unrecognized-or-represents-more-than-one-time-zone/"/>
      <url>/2019/05/01/The-server-time-zone-value-O%C3%90%C2%B9u%C2%B1e%C3%97%C2%BCE%C2%B1%C2%BCa-is-unrecognized-or-represents-more-than-one-time-zone/</url>
      
        <content type="html"><![CDATA[<p>问题背景:<br>在Java中使用JDBC操作数据库，该数据库版本为8.0.15属于高版本(如果是低版本的话，通常是不会出现这些问题的)</p><p>详细错误信息如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.sql.SQLException: The server time zone value &apos;ÖÐ¹ú±ê×¼Ê±¼ä&apos; is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>这个问题的原因是市区问题。</p><p>解决办法:<br>在jdbc对应的url加上serverTimezone=UTC即可解决，例如jdbc:mysql://localhost:3308/mysql?serverTimezone=UTC</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何快速关联/修改Git远程仓库地址</title>
      <link href="/2019/04/30/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%85%B3%E8%81%94-%E4%BF%AE%E6%94%B9Git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/"/>
      <url>/2019/04/30/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%85%B3%E8%81%94-%E4%BF%AE%E6%94%B9Git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h2><span id="如何快速关联修改git远程仓库地址按照如下步骤即可快速实现关联修改git远程仓库地址">如何快速关联/修改Git远程仓库地址?按照如下步骤即可快速实现关联/修改Git远程仓库地址:</span></h2><h4><span id="删除本地仓库当前关联的无效远程地址再为本地仓库添加新的远程仓库地址">删除本地仓库当前关联的无效远程地址，再为本地仓库添加新的远程仓库地址</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote -v //查看git对应的远程仓库地址</span><br><span class="line">git remote rm origin //删除关联对应的远程仓库地址</span><br><span class="line">git remote -v //查看是否删除成功，如果没有任何返回结果，表示OK</span><br><span class="line">git remote add origin https://github.com/developers-youcong/Metronic_Template.git //重新关联git远程仓库地址</span><br></pre></td></tr></table></figure><p>其实不仅仅上述这一种方式，还有如下几种方式:<br><a id="more"></a></p><h4><span id="直接修改本地仓库所关联的远程仓库的地址">直接修改本地仓库所关联的远程仓库的地址</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote  //查看远程仓库名称：origin </span><br><span class="line">git remote get-url origin //查看远程仓库地址</span><br><span class="line">git remote set-url origin https://github.com/developers-youcong/Metronic_Template.git  ( 如果未设置ssh-key，此处仓库地址为 http://... 开头)</span><br></pre></td></tr></table></figure><h4><span id="修改-git-配置文件">修改 .git 配置文件</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd .git  //进入.git目录</span><br><span class="line">vim config  //修改config配置文件，快速找到remote &quot;origin&quot;下面的url并替换即可实现快速关联和修改</span><br></pre></td></tr></table></figure><h4><span id="如何快速关联修改git远程仓库地址的应用场景有哪些">如何快速关联/修改Git远程仓库地址的应用场景有哪些?</span></h4><p>(1)同步开源项目(以VsCode为例，我针对其进行二次开发，但是其版本总是在更新为了保持与其一致，我就得用到修改git远程仓库同步其最新代码);<br>(2)快速实现项目迁移(比如我不想用阿里云的git，我就将其迁移到github上面);</p><p>本文参考资料如下:<br><a href="https://blog.csdn.net/mlq8087/article/details/81360025" target="_blank" rel="noopener">如何快速关联/ 修改 Git 远程仓库地址</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hutool工具类之HttpUtil使用Https</title>
      <link href="/2019/04/30/Hutool%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%B9%8BHttpUtil%E4%BD%BF%E7%94%A8Https/"/>
      <url>/2019/04/30/Hutool%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%B9%8BHttpUtil%E4%BD%BF%E7%94%A8Https/</url>
      
        <content type="html"><![CDATA[<p>关于Hutool工具类之HttpUtil如何使用可以参考官方文档<a href="https://www.hutool.cn/docs/#/http/Http%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B7%A5%E5%85%B7%E7%B1%BB-HttpUtil" target="_blank" rel="noopener">Hutool之HttpUtil</a></p><p>其实使用Http和Https使用的方式是一样的。</p><p>建议大家可以看看HttpUtil的源码，感觉设计的挺不错的。<br><a id="more"></a></p><h2><span id="导入maven依赖">导入Maven依赖</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;</span><br><span class="line">   &lt;version&gt;4.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2><span id="编写测试类使用junit单元测试">编写测试类(使用Junit单元测试)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   @Test</span><br><span class="line">public void testHttps() throws Exception &#123;</span><br><span class="line"></span><br><span class="line">JSONObject json = new JSONObject();</span><br><span class="line">json.put(&quot;username&quot;, &quot;1332788xxxxxx&quot;);</span><br><span class="line">json.put(&quot;password&quot;, &quot;123456.&quot;);</span><br><span class="line"></span><br><span class="line">String result = HttpRequest.post(&quot;https://api2.bmob.cn/1/users&quot;)</span><br><span class="line">.header(&quot;Content-Type&quot;, &quot;application/json&quot;)</span><br><span class="line">.header(&quot;X-Bmob-Application-Id&quot;,&quot;2f0419a31f9casdfdsf431f6cd297fdd3e28fds4af&quot;)</span><br><span class="line">.header(&quot;X-Bmob-REST-API-Key&quot;,&quot;1e03efdas82178723afdsafsda4be0f305def6708cc6&quot;)</span><br><span class="line">    .body(json)</span><br><span class="line">    .execute().body();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       System.out.println(result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法解释(上面采用的是一种叫链式编程的方式):<br>header对应的是请求头。<br>body对应的是请求体(包含参数和参数值)。<br>HttpRequest里面包含Post、GET、Delete、Put等常用的RestFul方式。</p><p>打印如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;createdAt&quot;:&quot;2019-04-30 10:42:07&quot;,&quot;objectId&quot;:&quot;6cfdb77081&quot;,&quot;sessionToken&quot;:&quot;269e433440c9e65b8058d016df703ccb&quot;&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bmob-Rest-API之使用</title>
      <link href="/2019/04/29/Bmob-Rest-API%E4%B9%8B%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/04/29/Bmob-Rest-API%E4%B9%8B%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>针对最近这样的需求，某个功能插入数据成功并实时同步到Bmob云上的数据库。</p><p>本来想在Bmob上找一个用Java写的，找了一圈发现没有，于是便采用Bmob的Rest-API方式进行数据插入。</p><p>另外补充一个小知识，Bmob的架构是一个叫Serverless的，关于这个Serverless，简单的说就是用服务代替服务器，不再想以往那样对服务器大量维护，特别是运维人员，每当上线时，心里难免会有点担惊受怕。</p><p>参考文档为<a href="http://doc.bmob.cn/data/restful/index.html" target="_blank" rel="noopener">Bmob-Rest-Api之简单操作</a></p><p>此文假定你已经在Bmob云上建好相关的数据库(如果没有建好或者不知道如何建，请参考上述文档)<br><a id="more"></a></p><h2><span id="利用bmob-rest-api进行数据插入">利用Bmob-Rest-API进行数据插入</span></h2><h4><span id="我的bmob数据库">我的Bmob数据库</span></h4><p><img src="/2019/04/29/Bmob-Rest-API之使用/01.png" alt=""></p><h4><span id="使用postman做接口测试这个实验一定要做这里跑通了基本上可以排除很多问题">使用PostMan做接口测试(这个实验一定要做，这里跑通了，基本上可以排除很多问题)</span></h4><p><img src="/2019/04/29/Bmob-Rest-API之使用/02.png" alt=""></p><p>注意必须要包含请求头如下参数,如下图所示(请求头中参数对应的值，如果不知道，请参考官方文档):<br><img src="/2019/04/29/Bmob-Rest-API之使用/04.png" alt=""></p><p>只要返回如下信息，就表示数据插入成功:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;createdAt&quot;:&quot;2019-04-29 16:49:39&quot;,&quot;objectId&quot;:&quot;11b732523d&quot;,&quot;sessionToken&quot;:&quot;0a5c7099409b095080e159c17738f4cd&quot;&#125;</span><br></pre></td></tr></table></figure></p><p>这里请大家注意，并不是所有的表都是这样请求的，比如如果是setting表的话，请求方式变成的如下:<br><img src="/2019/04/29/Bmob-Rest-API之使用/03.png" alt=""></p><p>具体可以参考官方文档<a href="http://doc.bmob.cn/data/restful/develop_doc/#_12" target="_blank" rel="noopener">Rest API详细文档</a></p><p>我觉得Bmob的这种RestFul设计还挺不错的，可以借鉴，另外关于RestFul相关的资料可以参考如下:<br><a href="https://geemus.gitbooks.io/http-api-design/content/en/" target="_blank" rel="noopener">HTTP API Design Guide</a><br><a href="https://codeplanet.io/principles-good-restful-api-design/" target="_blank" rel="noopener">Principles of good RESTful API Design</a><br><a href="http://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="noopener">阮一峰理解RestFul架构</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Serverless </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux远程传输文件免密码</title>
      <link href="/2019/04/29/Linux%E8%BF%9C%E7%A8%8B%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%E5%85%8D%E5%AF%86%E7%A0%81/"/>
      <url>/2019/04/29/Linux%E8%BF%9C%E7%A8%8B%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%E5%85%8D%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>首先为什么Linux远程传输要免密码?<br>手动使用scp命令传输每次都要输密码太过麻烦了。</p><p>开发中有一句话，能复制粘贴尽量不要手打。</p><p>运维中有一句话，能脚本化实现尽量不要手动执行。</p><p><strong>远程传输文件免密码的目的:</strong><br>在于为了保证公司数据安全，将相关的备份文件传输到一个或多个备份服务器上防止服务器上面的数据因运维人员失误或者相关运营商失误而导致的严重后果。</p><p>A服务器地址：192.168.1.126，下面简称A<br>B服务器地址：192.168.1.128，下面简称B</p><p>步骤如下:<br><a id="more"></a></p><h2><span id="在a中生成密钥对">在A中生成密钥对</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -P &quot;&quot;</span><br></pre></td></tr></table></figure><p>执行上述命令，一路回车，会在当前登录用户的home目录下的.ssh目录下生成id_rsa和id_rsa.pub两个文件，分别代表密钥对的私钥和公钥。</p><h2><span id="拷贝a的公钥id_rsapub">拷贝A的公钥(id_rsa.pub)</span></h2><p>将其拷贝到B的root用户home目录为例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /root/.ssh/id_rsa.pub root@192.168.1.128:/root</span><br></pre></td></tr></table></figure></p><h2><span id="登录b">登录B</span></h2><p>拷贝A的id_rsa_pub内容到.ssh目录下的authorized_keys文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">cat id_rsa.pub &gt;&gt; .ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><h2><span id="此时在a中用ssh登录b或想b传输文件将不需要密码">此时在A中用ssh登录B或想B传输文件将不需要密码</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.1.128或</span><br><span class="line">scp test.txt root@192.168.1.128：/home/test/</span><br></pre></td></tr></table></figure><p>参考资料如下:<br><a href="https://blog.csdn.net/zhan570556752/article/details/80547063" target="_blank" rel="noopener">Linux远程传输文件免密码验证登陆和拷贝文件</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sudo: no tty present and no askpass program specified</title>
      <link href="/2019/04/27/sudo-no-tty-present-and-no-askpass-program-specified/"/>
      <url>/2019/04/27/sudo-no-tty-present-and-no-askpass-program-specified/</url>
      
        <content type="html"><![CDATA[<p>错误信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: no tty present and no askpass program specified</span><br></pre></td></tr></table></figure></p><p>错误原因:<br>是由于帐号并没有开启免密码导致的 </p><p>解决办法:</p><p>编辑sudoers文件</p><p>vim /etc/sudoers</p><p>添加免密码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名 ALL = NOPASSWD: ALL</span><br></pre></td></tr></table></figure></p><p>如:jenkins ALL = NOPASSWD: ALL</p><p>参考链接:<br><a href="https://blog.csdn.net/a_little_a_day/article/details/78282983" target="_blank" rel="noopener">sudo: no tty present and no askpass program specified 解决方法</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js如何执行cmd</title>
      <link href="/2019/04/26/Node-js%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8Ccmd/"/>
      <url>/2019/04/26/Node-js%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8Ccmd/</url>
      
        <content type="html"><![CDATA[<p>最近正好因业务的一个需求需要研究如何根据vscode的插件名来下载对应的插件以解决之前将插件打包上传到服务器上面导致的延迟问题(插件体积小还好说，如果体积过大，即便是压缩打成zip包，如果同一时刻很多人上传或下载，系统延迟将会非常严重)。<br>之前一直想不明白，找半天找不到要给URL可以下载，最后不经意间有了灵感转变一下思路搞定了。灵感是一个好东西。<br>本文主要讲Node.js如何执行cmd,应用场景除了我开头说的，其实还有很多，只有想不到，没有做不到。正如我们经理说的，现在基本上20%的技术可以解决80%的业务问题，这个时代，技术有点泛滥，换言之，技术产能过剩。<br><a id="more"></a></p><h2><span id="一-下载node-cmd">一、下载node-cmd</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g node-cmd</span><br></pre></td></tr></table></figure><h2><span id="二-编写测试函数indexjs">二、编写测试函数(index.js)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var nodeCmd = require(&apos;node-cmd&apos;);</span><br><span class="line"> </span><br><span class="line">function runCmdTest() &#123;</span><br><span class="line"></span><br><span class="line">   var fileName = &quot;ms-ceintl.vscode-language-pack-zh-hans&quot;;</span><br><span class="line"></span><br><span class="line">   console.log(&quot;fileNames:&quot;+fileName);</span><br><span class="line">   </span><br><span class="line">   nodeCmd.get(</span><br><span class="line"> </span><br><span class="line">&apos;code --install-extension &apos;+fileName+&apos; --extensions-dir=&quot;D:\1024Workspace\extension&quot;&apos;,</span><br><span class="line"> </span><br><span class="line">function(err, data, stderr)&#123;</span><br><span class="line"> </span><br><span class="line">console.log(data);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">nodeCmd.run(&apos;code --install-extension &apos;+fileName+&apos; --extensions-dir=&quot;D:\1024Workspace\extension&quot;&apos;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(runCmdTest());</span><br></pre></td></tr></table></figure><p>参考资料如下:<br><a href="https://blog.csdn.net/llzkkk12/article/details/78171750" target="_blank" rel="noopener">nodejs 运行CMD命令</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springfox-swagger之swagger-bootstrap-ui</title>
      <link href="/2019/04/24/springfox-swagger%E4%B9%8Bswagger-bootstrap-ui/"/>
      <url>/2019/04/24/springfox-swagger%E4%B9%8Bswagger-bootstrap-ui/</url>
      
        <content type="html"><![CDATA[<p>swagger-bootstrap-ui是国内的一个swagger开源项目，从发起到现在已经有三年了。<br>初次体验了一下，觉得还是挺不错的，就如当初使用mybatis-plus那样，因为有了mybatis的基础，所以过渡到mybatis-plus很没有压力。<br>现在由swagger2到swagger-bootstrap-ui也是没有压力的，基本上参考官方文档就能弄好了。<br><a id="more"></a><br>目前我应用在我个人的博客项目上，效果如图:<br><img src="/2019/04/24/springfox-swagger之swagger-bootstrap-ui/swagger-bootstrap-ui.png" alt=""></p><p>关于如何搭建步骤，我主要是参考官方文档，我本次写的就作为官方文档的一点补充:</p><h2><span id="一-添加maven依赖">一、添加Maven依赖</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;swagger-bootstrap-ui&lt;/artifactId&gt;</span><br><span class="line">   &lt;version&gt;1.9.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.9.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2><span id="二-编写配置类">二、编写配置类</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import com.github.xiaoymin.swaggerbootstrapui.annotations.EnableSwaggerBootstrapUI;</span><br><span class="line">import springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line">import springfox.documentation.builders.PathSelectors;</span><br><span class="line">import springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line">import springfox.documentation.service.ApiInfo;</span><br><span class="line">import springfox.documentation.spi.DocumentationType;</span><br><span class="line">import springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line">import springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">@EnableSwaggerBootstrapUI</span><br><span class="line">public class SwaggerConfiguration &#123;</span><br><span class="line"></span><br><span class="line"> @Bean</span><br><span class="line"> public Docket createRestApi() &#123;</span><br><span class="line">     return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">     .apiInfo(apiInfo())</span><br><span class="line">     .select()</span><br><span class="line">     .apis(RequestHandlerSelectors.basePackage(&quot;com.blog.springboot&quot;))</span><br><span class="line">     .paths(PathSelectors.any())</span><br><span class="line">     .build();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> private ApiInfo apiInfo() &#123;</span><br><span class="line">     return new ApiInfoBuilder()</span><br><span class="line">     .title(&quot;swagger-bootstrap-ui RESTful APIs&quot;)</span><br><span class="line">     .description(&quot;swagger-bootstrap-ui&quot;)</span><br><span class="line">     .termsOfServiceUrl(&quot;http://www.youcongtech.com&quot;)</span><br><span class="line">     .contact(&quot;developer@mail.com&quot;)</span><br><span class="line">     .version(&quot;1.1&quot;)</span><br><span class="line">     .build();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="三-去下载对应的前端资源">三、去下载对应的前端资源</span></h2><p>下载地址为:<a href="https://github.com/xiaoymin/Swagger-Bootstrap-UI/tags" target="_blank" rel="noopener">https://github.com/xiaoymin/Swagger-Bootstrap-UI/tags</a> ,如下图所示:<br><img src="/2019/04/24/springfox-swagger之swagger-bootstrap-ui/tag.png" alt=""></p><h2><span id="四-下载完毕后解压并将swagger-bootstrap-ui放到springboot项目职工的srcmainresources目录下">四、下载完毕后解压并将swagger-bootstrap-ui放到springboot项目职工的src/main/resources目录下</span></h2><p>步骤如图:<br>找到这个文件夹<br><img src="/2019/04/24/springfox-swagger之swagger-bootstrap-ui/01.png" alt=""><br>并将其迁移到springboot对应的目录<br><img src="/2019/04/24/springfox-swagger之swagger-bootstrap-ui/02.png" alt=""></p><h2><span id="五-整个流程完成后启动应用访问地址为httpip地址端口号项目名dochtml即可访问如httplocalhost2019blog-webdochtml">五、整个流程完成后，启动应用，访问地址为:</span></h2><p>参考资料如下:<br>swagger-bootstrap-ui文档：<a href="http://doc.xiaominfo.com" target="_blank" rel="noopener">http://doc.xiaominfo.com</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</title>
      <link href="/2019/04/23/ERROR-1820-HY000-You-must-reset-your-password-using-ALTER-USER-statement-before-executing-this-statement/"/>
      <url>/2019/04/23/ERROR-1820-HY000-You-must-reset-your-password-using-ALTER-USER-statement-before-executing-this-statement/</url>
      
        <content type="html"><![CDATA[<p>错误信息如下:<br>ERROR 1820 (HY000): You must reset your password using ALTER USER statement<br>before executing this statement.</p><p>翻译过来的意思是:<br>错误1820 (HY000):您必须使用ALTER USER语句重置密码<br>在执行此语句之前。<br><a id="more"></a><br>所以解决办法就是使用重置密码命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;youpassword&apos;;</span><br></pre></td></tr></table></figure></p><p>参考资料如下:<br><a href="https://www.cnblogs.com/lmx123/p/9321792.html" target="_blank" rel="noopener">mysql 报错ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executin</a><br><a href="https://blog.csdn.net/qq_37350706/article/details/81707862" target="_blank" rel="noopener">MySQL 8.0.15安装教程(windows 64位)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>An internal error occurred during: Initializing Java Tooling.</title>
      <link href="/2019/04/22/An-internal-error-occurred-during-Initializing-Java-Tooling/"/>
      <url>/2019/04/22/An-internal-error-occurred-during-Initializing-Java-Tooling/</url>
      
        <content type="html"><![CDATA[<p>详细错误信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">An internal error occurred during: &quot;Initializing Java Tooling&quot;.</span><br><span class="line">java.lang.NullPointerException</span><br></pre></td></tr></table></figure></p><p>问题原因:不合理关闭Eclipse导致的<br><a id="more"></a><br>问题的影响:<br>比如你要启动Eclipse某个JavaEE应用时你会发现报错，总是显示某某类找不到，针对某某类找不到，要么就是那个类路径有问题，要么就是项目没有更新完全需要update project。通常update project就好。不过现在无论你update project多少次都没有用，因为不是这个原因。原因就是上述的错误信息。</p><p>解决办法:<br>两种解决办法，如下所示:<br>(1)重启Eclipse;<br>(2)删除 当前工作目录文件夹下的 /.metadata/.plugins/org.eclipse.core.resources/.project。就是把初始化的项目删除，然后打开eclipse以后可以重新初始化;</p><p>参考链接如下:<br><a href="https://blog.csdn.net/u013100581/article/details/52942641" target="_blank" rel="noopener">An internal error occurred during: “Initializing Java Tooling”. Eclipse启动发生的错误</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 报错 Cannot read property &#39;replace&#39; of null</title>
      <link href="/2019/04/22/hexo-%E6%8A%A5%E9%94%99-Cannot-read-property-replace-of-null/"/>
      <url>/2019/04/22/hexo-%E6%8A%A5%E9%94%99-Cannot-read-property-replace-of-null/</url>
      
        <content type="html"><![CDATA[<p>详细错误信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">FATAL Cannot read property &apos;replace&apos; of null</span><br><span class="line">TypeError: Cannot read property &apos;replace&apos; of null</span><br><span class="line">    at fs.exists.then.then.then.config (E:\Hexo\node_modules\hexo\lib\hexo\load_config.js:34:31)</span><br><span class="line">    at tryCatcher (E:\Hexo\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\Hexo\node_modules\bluebird\js\release\promise.js:512:31)</span><br><span class="line">    at Promise._settlePromise (E:\Hexo\node_modules\bluebird\js\release\promise.js:569:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\Hexo\node_modules\bluebird\js\release\promise.js:614:10)</span><br><span class="line">    at Promise._settlePromises (E:\Hexo\node_modules\bluebird\js\release\promise.js:694:18)</span><br><span class="line">    at _drainQueueStep (E:\Hexo\node_modules\bluebird\js\release\async.js:138:12)</span><br><span class="line">    at _drainQueue (E:\Hexo\node_modules\bluebird\js\release\async.js:131:9)</span><br><span class="line">    at Async._drainQueues (E:\Hexo\node_modules\bluebird\js\release\async.js:147:5)</span><br><span class="line">    at Immediate.Async.drainQueues (E:\Hexo\node_modules\bluebird\js\release\async.js:17:14)</span><br><span class="line">    at runCallback (timers.js:810:20)</span><br><span class="line">    at tryOnImmediate (timers.js:768:5)</span><br><span class="line">    at processImmediate [as _immediateCallback] (timers.js:745:5)</span><br></pre></td></tr></table></figure></p><p>关键信息: Cannot read property ‘replace’ of null</p><p>问题原因:<br>我为了将我的wiki链接到hexo修改了root路径，如下图所示:<br><img src="/2019/04/22/hexo-报错-Cannot-read-property-replace-of-null/01.png" alt=""></p><p>解决办法(将root改为原来的/即可解决这个问题):<br><img src="/2019/04/22/hexo-报错-Cannot-read-property-replace-of-null/02.png" alt=""></p><p>这个/相当于默认指向developers-youcong.github.io</p><p>参考解决办法:<br><a href="https://www.jianshu.com/p/449accb044b4" target="_blank" rel="noopener">hexo 报错 Cannot read property ‘replace’ of null</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftp配置详解</title>
      <link href="/2019/04/20/ftp%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>/2019/04/20/ftp%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2><span id="ftp配置详解">FTP配置详解</span></h2><p>FTP配置文件位置/etc/vsftpd.conf<br>listen=NO<br>设置为YES时vsftpd以独立运行方式启动，设置为NO时以xinetd方式启动（xinetd是管理守护进程的，将服务集中管理，可以减少大量服务的资源消耗）<br>listen_ipv6=YES<br>以上两个只能一个YES一个NO否则会出错<br>listen_port=port<br>设置控制连接的监听端口号，默认为21<br>listen_address=ip_address<br>将在绑定到指定IP地址运行，适合多网卡<br>connect_from_port_20=YES/NO<br>若为YES，则强迫FTP－DATA的数据传送使用port 20，默认YES<br>anonymous_enable=YES<br><a id="more"></a><br>允许匿名登陆<br>anon_root=/home/ftp<br>匿名登陆进去后的默认目录，这个自己设置<br>no_anon_password=YES<br>匿名登陆不需要密码<br>anon_upload_enable=YES<br>匿名用户是否能够上传文件，这个YES表示允许，并且它的父目录要有可写权限<br>anon_mkdir_write_enable=YES<br>允许匿名用户创建目录<br>anon_other_write_enable=NO<br>不允许匿名用户具有建立目录，上传之外的权限<br>anon_max_rate=n<br>设置匿名用户的最大传输速率，单位为B/s，值为0表示不限制<br>write_enable=YES<br>登陆用户是否有写权限，全局设置<br>local_enable=YES<br>是否允许本地用户登陆<br>local_root=/../..<br>本地登陆后的默认目录<br>控制用户访问文件vsftpd.user_list(文件中一行一个用户名)<br>在/etc/下面，没有就自己新建一个<br>userlist_file=/../..<br>上面那个文件的路径<br>userlist_enable=YES<br>是否启动vsftpd.user_list这个文件<br>userlist_deny=YES/NO<br>当为YES的时候，在vsftpd.user_list中的用户名不能登陆FTP<br>当为NO的时候，只有vsftpd.user_list中的用户名能登陆FTP<br>idle_session_timeout=300<br>设置多长时间不对FTP服务器进行任何操作，则断开该FTP连接，单位为秒<br>accept_timeout=60<br>建立FTP连接超时时间，单位秒<br>connection_timeout=60<br>PORT方式下建立FTP数据连接超时时间，单位秒<br>data_connection_timeout=60<br>设置空闲的用户会话在N秒后中断，单位秒<br>xferlog_enable=YES<br>开启日志记录<br>xferlog_file=/var/log/vsftpd.log<br>设置日志文件路径<br>pasv_enable=YES/NO<br>是否开启被动模式进行数据传输，有的客户机在防火墙后面，所以建议开启<br>pasv_min_port=n<br>pasv_max_port=m<br>设置被动模式后的数据连接端口范围在n和m之间<br>max_clients=n<br>在独立启动时限制服务器的连接数，0表示无限制<br>FTP添加用户<br>useradd函数，用于添加ftp用户<br>参数：<br>-d 指定用户根目录<br>-s 指定shell脚本为/bin/bash<br>-g 创建分组ftp分组<br>-G 指定root分组<br>例如:<br>useradd -d /home/linux/myftp -s /bin/bash ftpuser<br>详细信息输入useradd -h查看<br>删除ftp用户和主目录 userdel -r youruser<br>详细信息输入userdel -h查看<br>设置ftp用户密码<br>passwd ftpuser<br>输入命令后会让你输密码的<br>如果ftpuser是已存在的用户，则为修改旧密码<br>修改完配置文件后一定要重启服务<br>sudo /etc/init.d/vsftpd restart</p><p>参考链接：<a href="https://www.jianshu.com/p/a299650780e0" target="_blank" rel="noopener">https://www.jianshu.com/p/a299650780e0</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点击此电脑，查看属性获取计算机的基本信息，可以获取那些计算机基础知识信息呢</title>
      <link href="/2019/04/18/%E7%82%B9%E5%87%BB%E6%AD%A4%E7%94%B5%E8%84%91%EF%BC%8C%E6%9F%A5%E7%9C%8B%E5%B1%9E%E6%80%A7%E8%8E%B7%E5%8F%96%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%8F%96%E9%82%A3%E4%BA%9B%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BF%A1%E6%81%AF%E5%91%A2/"/>
      <url>/2019/04/18/%E7%82%B9%E5%87%BB%E6%AD%A4%E7%94%B5%E8%84%91%EF%BC%8C%E6%9F%A5%E7%9C%8B%E5%B1%9E%E6%80%A7%E8%8E%B7%E5%8F%96%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%8F%96%E9%82%A3%E4%BA%9B%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BF%A1%E6%81%AF%E5%91%A2/</url>
      
        <content type="html"><![CDATA[<p>效果图如下:<br><img src="/2019/04/18/点击此电脑，查看属性获取计算机的基本信息，可以获取那些计算机基础知识信息呢/computer.png" alt=""></p><p>从中我们可以get到处理器、内存、系统类型、系统版本等信息。</p><p>联系到实际这些信息有什么用呢？<br><a id="more"></a></p><h2><span id="1处理器">1.处理器</span></h2><p>从上图中我们看到其处理器是英特尔公司的，英特尔公司是美国一家主要以研制CPU处理器的公司，是全球最大的个人计算机零件和CPU制造商，它成立于1968年，具有50年产品创新和市场领导的历史。</p><p><strong>2.80GHZ表示的又是什么意思呢而且还有两个</strong>？<br>首先说明是双核的，一核的主频为2.80GHZ，另外一核主频为2.81GHZ。</p><p>通常来说，主频越高，处理能力越强。从理论上看是这样，实际上并不如此。<br>主频越高，功耗和发热量也会有所增加，电脑也就会过热。<strong>过热对电脑有如下影响</strong>:<br>(1)运行速度慢，打开程序反应迟钝;<br>(2)经常出去蓝屏死机现象;<br>(3)电脑整机和零件寿命变短;<br>(4)出现突然关机无法启动;<br>(5)出现烧毁主板或者CPU现象；</p><p><strong>那么导致电脑过热的原因有哪些?</strong><br>(1)灰尘过多(灰尘过多会堵塞电脑的散热孔，从而导致电脑内部空气流通不畅，无法将电脑内部的热量散出来，同时灰尘也会粘连在电脑的散热风扇上，从而导致电脑风扇的散热效率降低，影响电脑的正常散热);<br>(2)运行程序过多(当电脑的运行程序过多，电脑的CPU、内存、显卡、硬盘、主板以及电源的使用率会非常高，而当这些部件使用率高的时候会散出大量的热，从而使得电脑的整体会出现过热);<br>(3)使用环境(电脑使用环境温度过高，电脑的发热量会增加，同时散热效率相对会降低，电脑的摆放位置也会影响电脑的散热，从而导致电脑的温度过热)</p><p><strong>联系实际</strong><br>电脑过热，会影响软件开发的效率，比如我的笔记本电脑过热的原因，通常是因为运行程序过多，过多导致部件使用率高，然后电脑就会发出声音，通常这种声音持续一段时间，有的时候直接就会导致我的电脑出现卡死情况(突然一下黑屏了，或者是卡顿)。出现这种情况后，直接就会影响到我开发的效率，一般会持续5到6分钟，甚至更长。所以理解处理器、主频对于程序开发也是很有帮助的。再比如如果你要自己买个主机弄成服务器，如果你不理解上述的知识话，很难搞的好，记得在上家公司的时候，公司的机房通常是在比较阴暗的地方(不表示潮湿，潮湿也会影响电脑)，因为服务器温度过高会导致我在前面说的过热对电脑的影响，其中一条会烧毁主板或CPU，烧毁主板和CPU，意味着这台电脑彻底挂了，一旦挂了肯定会影响软件对外的服务(这也是一些稍有规模的公司，通常有自己独立的机房，机房里一般都有空调，空调的目的就是为了防止温度过高烧毁服务器影响服务)。</p><h2><span id="2内存">2.内存</span></h2><p>内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。计算机中所有程序的运行都是在内存中进行的，因此内存的性能对计算机的影响非常大。内存也被称作为内存储器和主存储器，其作用是暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来，内存的运行也决定计算机的稳定运行。</p><p><strong>内存不足会对电脑造成哪些影响?</strong><br>最直观的表现就是你的电脑会非常卡,无法运行比较大的软件。</p><p>如果是在服务器上，你将会发现你发送的请求迟迟无法得到服务器的响应。</p><p><strong>是什么原因造成电脑的内存不足呢？</strong><br>(1)运行程序过多(前面说过，计算机中所有的程序运行都是在内存中进行的);<br>(2)电脑中毒(受到黑客恶意攻击);<br>(3)内存太小了(特别是站长同志们，比如在自己的服务器上运营好几个网站，特别是其中一个博客网站每天访问量非常高，访问量高，代表与后台数据交互的频率越高，后台数据库也是需要占用内存的,如果内存不足直接就会影响到用户的正常访问，造成的影响就是用户体验不佳，用户体验不佳的影响就不多说了)</p><p><strong>联系实际</strong><br>为什么说数据结构和算法很重要呢？<br>良好的数据结构和算法，使得程序的运行效率大大提升，大大提升意味着减少可用内存容量，把富余的内存以备不时之需，比如应对高并发。<br>一个程序员具有数据结构和算法功底扎实写出的代码质量将会非常高，同时也在一定程度上替公司降低成本。<br>看过一篇文章，该文章作者这样说:<strong><em>现在的软件工程充斥着大量的过度设计、资源浪费，实际上已经到了硬件承受不了的地步了。学好数据结构和算法，能够从根本上去避免这些问题</em></strong><br>这篇文章的标题叫做<a href="https://blog.csdn.net/bingguang1993/article/details/81048022" target="_blank" rel="noopener">算法与数据结构对程序员的重要性</a>，开发者们都可以去看看这篇文章，很有启发意义。<br>最后补充一点，良好的数据结构和算法会提高内存利用率，让你写出来的软件更加优美。<br>最近我在思考，我最近写的一个博客项目出现了一种情况，那就是有的时候访问，数据会显示不全，布局也会有问题，然后刷新一下就好了，我在想是不是我的js写的有问题，我打算参考《高性能网站建设》这本书先做一部分优化，不过在优化前，我还是得做做压测看看现在的数据是怎样的，有数据就方便到时优化前后的对比。</p><h2><span id="3系统类型">3.系统类型</span></h2><p>从图上可以获取我电脑上的系统类型为64位操作系统，基于x64的处理器。</p><p>在此提出一个常见问题，64位系统和32位有什么区别?<br>(1)设计初衷不同。64位操作系统的设计初衷是:满足机械设计和分析、三维动画、视频编辑和创作，以及科学计算和高性能计算应用等领域中需要大量内存和浮点性能的客户需求。而32位操作系统是为普通用户设计的。<br>(2)要求配置不同。64位操作系统只能安装64位电脑上(CPU必须是64位的)。同时需要安装64位常用软件以发挥64位(x64)的最佳性能。32位操作系统则可以安装在32位(32位CPU)或64位(64位CPU)电脑上。当然，32位操作系统安装在64位电脑上，其硬件恰似“大牛拉小车”:64位效能会大打折扣。<br>(3)运算速度不同。64位CPU的GPRS的数据宽度为64位，64位指令集可以运行64位数据指令，也就是说处理器一次可提取64位数据(只要两个指令，一次提取8个字节的数据)比32位(需要四个指令，一次提取4个字节的数据)提高一倍，理论上性能会相应提升1倍。<br>(4)寻址能力不同。64位处理器的优势还体现在系统对内存的控制上。由于地址使用的是特殊的整数，因此一个ALU(算术逻辑运算器)和寄存器可以处理更大的整数，也就是更大的地址。<br>(5)软件普及不同。64位常用软件比32位常用软件，要少得很多。道理很简单:使用64位操作系统的用户相对较少。因此软件开发商必须考虑“投入产出比”<br>,将有限资金投入到更多使用群体的软件之中。这也是为什么64位软件价格相对昂贵的重要原因(将成本摊入较少的发售中)。</p><p>64位操作系统可以安装32位软件，那是设计上的”向下兼容”。</p><p><strong>联系实际</strong><br>这让我不仅联想到vscode打包，打包后的也是32位而非64位，我想这也是32位比较普及的原因之一。<br>另外再联想到Linux上，比如CentOS和Ubuntu16.04，它们的区别就可大(关于它们的区别我在此就不说了，感兴趣的朋友自己实践就知道了)。</p><h2><span id="4系统版本">4.系统版本</span></h2><p>根据不同的系统版本安装不同软件，比如有的软件适用于Win7并不适合Win8。这就需要平时的计算机爱好者或者经常使用计算机软件完成工作的朋友要了解。<br>作为程序员一定是要知道的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>this web application instance has been stopped already</title>
      <link href="/2019/04/17/this-web-application-instance-has-been-stopped-already/"/>
      <url>/2019/04/17/this-web-application-instance-has-been-stopped-already/</url>
      
        <content type="html"><![CDATA[<p>详细错误信息如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mybatis-plus MapperRefresh] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [META-INF/services/javax.xml.xpath.XPathFactory]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.</span><br><span class="line"> java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [META-INF/services/javax.xml.xpath.XPathFactory]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.</span><br></pre></td></tr></table></figure></p><p>关键信息如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this web application instance has been stopped already</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>初次看到这个问题，我也是一头雾水，因为没有影响正常的项目对外服务，但是严重影响线上对接客户端时日志的阅读。</p><p>后来通过搜索知道了原因，原来是因为服务器上其中两个tomcat下的webapps项目相同导致的，而且这两个tomcat又是运行的，所以才导致这样的错误，于是我将另外的测试tomcat去除掉，问题就迎刃而解。</p><p>问题解决参考链接:<br><a href="https://www.cnblogs.com/xxyBlogs/p/5536731.html" target="_blank" rel="noopener">关于tomcat启动报“this web application instance has been stopped already”的处理</a></p><p><a href="https://blog.csdn.net/zl544434558/article/details/49095591" target="_blank" rel="noopener">org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KindEditor富文本编辑器使用</title>
      <link href="/2019/04/16/KindEditor%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/04/16/KindEditor%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>我的博客本来打算使用layui的富文本编辑器，但是出了一个问题，无法获取编辑器内容，我参考官方文档，获取内容也就那几个方法而已，但是引入进去后始终获取的值为空，百度和bing都试过了，但是始终还是获取不到值。<br><a id="more"></a><br>layui富文本编辑器文档如下图所示:<br><img src="/2019/04/16/KindEditor富文本编辑器使用/01.png" alt=""></p><p>能尝试的方法都试过了，最后实在没有办法，只好引入新的富文本编辑解决这个问题。</p><p>现在回到这个话题上，如何使用KindEditor富文本编辑器?</p><h2><span id="1去官网下载对应的js库">1.去官网下载对应的js库</span></h2><p>官网地址为:<a href="http://kindeditor.net/down.php" target="_blank" rel="noopener">http://kindeditor.net/down.php</a></p><h2><span id="2对应的效果可以看官网demo">2.对应的效果可以看官网demo</span></h2><p>进入官网，点击演示，出现如图所示:<br><img src="/2019/04/16/KindEditor富文本编辑器使用/02.png" alt=""><br>下面的编辑器例子，你可以根据自己的需求而定，我选择默认的。</p><h2><span id="3具体使用可以看官方文档">3.具体使用可以看官方文档</span></h2><p>官方文档地址为:<a href="http://kindeditor.net/doc.php" target="_blank" rel="noopener">http://kindeditor.net/doc.php</a><br>如果说你想直接越过官方文档直接引入到自己的系统里面，其实很简单，请点击进入对应的演示界面，使用Google浏览器，右击查看源代码即可，源代码里面就包含n它所引用的库和相关的js。</p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins持续集成实践之java项目自动化部署</title>
      <link href="/2019/04/16/Jenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%AE%9E%E8%B7%B5%E4%B9%8Bjava%E9%A1%B9%E7%9B%AE%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/04/16/Jenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%AE%9E%E8%B7%B5%E4%B9%8Bjava%E9%A1%B9%E7%9B%AE%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>关于Linux安装Jenkins可以参考我的这篇博文<a href="https://www.cnblogs.com/youcong/p/8710025.html" target="_blank" rel="noopener">Ubuntu16.04环境安装jenkins</a><br><a id="more"></a></p><h2><span id="1安装部署插件">1.安装部署插件</span></h2><p>进入插件管理，并搜索该插件Deploy to container Plugin进行安装 ，下载地址为：<a href="https://wiki.jenkins-ci.org/display/JENKINS/Deploy+Plugin" target="_blank" rel="noopener">https://wiki.jenkins-ci.org/display/JENKINS/Deploy+Plugin</a> </p><h2><span id="2安装完后将会在项目配置中见到一下选项">2.安装完后，将会在项目配置中见到一下选项</span></h2><p><img src="/2019/04/16/Jenkins持续集成实践之java项目自动化部署/01.png" alt=""></p><h2><span id="3修改tomcat-usersxml">3.修改tomcat-users.xml</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;admin-script&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;123456&quot; roles=&quot;manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script&quot;/&gt;</span><br></pre></td></tr></table></figure><h2><span id="4host-manager和manager项目下的meta-inf下有个contextxml将其修改为如下">4.host-manager和manager项目下的/META-INF/下有个context.xml，将其修改为如下</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context antiResourceLocking=&quot;false&quot; privileged=&quot;true&quot; &gt;</span><br><span class="line">  &lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span><br><span class="line">         allow=&quot;\d+\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&gt;</span><br><span class="line">  &lt;Manager sessionAttributeValueClassNameFilter=&quot;java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap&quot;/&gt;</span><br><span class="line">&lt;/Context&gt;</span><br></pre></td></tr></table></figure><h2><span id="5配置jenkins">5.配置jenkins</span></h2><p><img src="/2019/04/16/Jenkins持续集成实践之java项目自动化部署/02.png" alt=""><br>当然要想部署多个tomcat 还以点击 Add Container 添加容器</p><p>主要参考如下资料:<br><a href="http://www.cnblogs.com/llining/p/4943291.html" target="_blank" rel="noopener">使用jenkins 插件自动部署项目至tomcat</a><br><a href="https://xhnszdm.iteye.com/blog/2309327" target="_blank" rel="noopener">tomcat8设置用户名和密码</a><br><a href="https://blog.csdn.net/fly_leopard/article/details/79654254" target="_blank" rel="noopener">tomcat8 tomcat-users相关配置</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04安装和配置RabbitMQ</title>
      <link href="/2019/04/16/Ubuntu16-04%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AERabbitMQ/"/>
      <url>/2019/04/16/Ubuntu16-04%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AERabbitMQ/</url>
      
        <content type="html"><![CDATA[<h3><span id="1rabbitmq安装前需要erlang环境">1.RabbitMQ安装前需要erlang环境</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install erlang-nox     # 安装erlang</span><br><span class="line">erl    # 查看relang语言版本，成功执行则说明relang安装成功</span><br></pre></td></tr></table></figure><a id="more"></a><h3><span id="2添加公钥">2.添加公钥</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -</span><br></pre></td></tr></table></figure><h3><span id="3更新软件包">3.更新软件包</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><h3><span id="4安装-rabbitmq">4.安装 RabbitMQ</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install rabbitmq-server  #安装成功自动启动</span><br></pre></td></tr></table></figure><h3><span id="5查看rabbitmq状态">5.查看RabbitMQ状态</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status rabbitmq-server   #Active: active (running) 说明处于运行状态</span><br><span class="line"></span><br><span class="line"># service rabbitmq-server status 用service指令也可以查看，同systemctl指令</span><br></pre></td></tr></table></figure><h3><span id="6启动-停止-重启命令">6.启动、停止、重启命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service rabbitmq-server start    # 启动</span><br><span class="line">service rabbitmq-server stop     # 停止</span><br><span class="line">service rabbitmq-server restart  # 重启</span><br></pre></td></tr></table></figure><h3><span id="7启用-web端可视化操作界面我们还需要配置management-plugin插件">7.启用 web端可视化操作界面，我们还需要配置Management Plugin插件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management   # 启用插件</span><br><span class="line">service rabbitmq-server restart    # 重启</span><br></pre></td></tr></table></figure><p>效果图如下:<br><img src="/2019/04/16/Ubuntu16-04安装和配置RabbitMQ/mq.png" alt=""></p><h3><span id="8查看用户">8.查看用户</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl list_users</span><br></pre></td></tr></table></figure><h3><span id="9添加管理用户">9.添加管理用户</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user admin yourpassword   # 增加普通用户</span><br><span class="line">rabbitmqctl set_user_tags admin administrator    # 给普通用户分配管理员角色</span><br></pre></td></tr></table></figure><h3><span id="10设置mq用户的权限指定允许访问的vhost以及writeread">10.设置mq用户的权限，指定允许访问的vhost以及write/read</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br></pre></td></tr></table></figure><h3><span id="11查看vhost允许哪些用户访问">11.查看vhost（/）允许哪些用户访问</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl list_permissions -p /</span><br></pre></td></tr></table></figure><p>最后关于如何和SpringBoot整合，可以参考我的博客:<a href="https://www.cnblogs.com/youcong/p/9387611.html" target="_blank" rel="noopener">SpringBoot实战(八)之RabbitMQ</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven打包如何跳过测试</title>
      <link href="/2019/04/16/maven%E6%89%93%E5%8C%85%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/04/16/maven%E6%89%93%E5%8C%85%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>Maven打包如何跳过测试?<br>正常来说，不应该这样做，因为测试可以避免很多麻烦排除一些不必要的错误，前提是测试足够规范，这里主要指junit测试，如果junit测试有问题的话，将会直接影响到mvn install打包。<br><a id="more"></a></p><p><strong>如何跳过测试，有两种办法</strong>:</p><p>(1)使用maven命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn test -Dmaven.test.failure.ignore=true  </span><br><span class="line">mvn install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure></p><p>(2)在pom文件中添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;skip&gt;true&lt;/skip&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信、qq可以上网，但是浏览器却不能上网怎么办</title>
      <link href="/2019/04/15/%E5%BE%AE%E4%BF%A1%E3%80%81qq%E5%8F%AF%E4%BB%A5%E4%B8%8A%E7%BD%91%EF%BC%8C%E4%BD%86%E6%98%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8D%B4%E4%B8%8D%E8%83%BD%E4%B8%8A%E7%BD%91%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
      <url>/2019/04/15/%E5%BE%AE%E4%BF%A1%E3%80%81qq%E5%8F%AF%E4%BB%A5%E4%B8%8A%E7%BD%91%EF%BC%8C%E4%BD%86%E6%98%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8D%B4%E4%B8%8D%E8%83%BD%E4%B8%8A%E7%BD%91%E6%80%8E%E4%B9%88%E5%8A%9E/</url>
      
        <content type="html"><![CDATA[<h3><span id="问题描述微信-qq可以上网但是浏览器却不能上网怎么办">问题描述:微信、qq可以上网，但是浏览器却不能上网怎么办?</span></h3><a id="more"></a><p><strong>解决办法</strong>(步骤如下):<br>(1)打开360安全卫士,点击更多<br><img src="/2019/04/15/微信、qq可以上网，但是浏览器却不能上网怎么办/01.png" alt=""></p><p>(2)进入到更多中，点击断网急救箱<br><img src="/2019/04/15/微信、qq可以上网，但是浏览器却不能上网怎么办/02.png" alt=""></p><p>(3)进入到断网急救箱，点击全面诊断<br><img src="/2019/04/15/微信、qq可以上网，但是浏览器却不能上网怎么办/03.png" alt=""><br>(4)一般都是如图红色标记处，最后点击修复即可<br><img src="/2019/04/15/微信、qq可以上网，但是浏览器却不能上网怎么办/04.png" alt=""></p><p>问题的原因是什么呢?<br>通常是DNS解析问题，如果要说为什么浏览器不能上网，qq和微信可以，是因为它们的DNS解析不同。</p><p>在没有用360这个办法时，我尝试过使用命令行解决，如下:<br>输入命令： netsh winsock reset catalog ——&gt;重启电脑<br>但是没有效果。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell杀死指定端口的进程</title>
      <link href="/2019/04/13/shell%E6%9D%80%E6%AD%BB%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%E7%9A%84%E8%BF%9B%E7%A8%8B/"/>
      <url>/2019/04/13/shell%E6%9D%80%E6%AD%BB%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%E7%9A%84%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>杀死端口代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:2019</span><br><span class="line"></span><br><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>上面的与下面的代码作用相同。</p><p>命令如下所示(这种方式更自动化):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 $(netstat -nlp | grep :2019 | awk &apos;&#123;print $7&#125;&apos; | awk -F&quot;/&quot; &apos;&#123; print $1 &#125;&apos;)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型网站核心架构因素</title>
      <link href="/2019/04/12/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%A0%B8%E5%BF%83%E6%9E%B6%E6%9E%84%E5%9B%A0%E7%B4%A0/"/>
      <url>/2019/04/12/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%A0%B8%E5%BF%83%E6%9E%B6%E6%9E%84%E5%9B%A0%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<p>关于什么是架构，一种比较通俗的说法是 “最高层次的规划，难以改变的决定”，这些规划和决定奠定了事物未来发展的方向和最终蓝图。</p><p>从这个意义上说，人生规划也是一种架构。选什么学校、学什么专业、进什么公司、找什么对象、过什么样的生活，都是自己人生的架构。</p><p><strong>联系到软件开发:</strong><br>实际上业务类型+技术选型往往也决定整个项目的架构是怎么样的。</p><p>具体到软件架构，维基百科是这样定义的:”有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计”。</p><p>系统的各个重要组成部分及其关系构成了系统的架构，这些组成部分可以是具体的功能模块，也可以是非功能的设计与决策，他们相互关系组成一个整体，共同构成了软件系统的架构。</p><p>大型网站核心架构的五个因素:</p><ul><li>性能</li><li>可用性</li><li>伸缩性</li><li>扩展性</li><li>安全性</li></ul><a id="more"></a><h2><span id="一-性能">一、性能</span></h2><p>性能是网站的一个重要指标，性能差的网站往往也代表这可用性等各方面不好。</p><p>关于性能优化，对不同的对象，采取不同的优化措施。</p><h3><span id="1浏览器端">1.浏览器端</span></h3><p>参考《高性能网站建设指南》，里面提供了14个措施。<br>(1)减少HTTP请求;<br>(2)使用CDN;<br>(3)添加Expires头;<br>(4)压缩组件;<br>(5)将样式放在顶部;<br>(6)将脚本放在底部;<br>(7)避免CSS表达式;<br>(8)使用外部JavaScript和CSS;<br>(9)减少DNS查找;<br>(10)精简JavaScript;<br>(11)避免重定向;<br>(12)移除重复脚本;<br>(13)配置ETag;<br>(14)使用Ajax缓存;</p><p><strong>联系实际:</strong><br>以个人实践来说，上述的不说将网站性能100%提高，至少提高50%，因为一个网站不仅仅牵涉网页，而且还牵涉服务端和数据库等。</p><p>想要对网页端优化的朋友，可以参考这本书，具体详情，本文不做太多讲解，该书资源我已经放在我的GitHub，需要的可以去下载。<br>个人平时收集的知识库:<a href="https://github.com/developers-youcong/Personal-Learning-Library" target="_blank" rel="noopener">https://github.com/developers-youcong/Personal-Learning-Library</a></p><h3><span id="2应用服务端">2.应用服务端</span></h3><p>(1)数据库服务器(索引、缓存、SQL优化);<br>(2)使用NoSQL;<br>(3)使用分布式;<br>(4)使用集群;<br>(5)异步操作;</p><h3><span id="3代码层面">3.代码层面</span></h3><p>使用多线程、改善内存管理等手段优化。</p><p>对于网站而言，性能符合预期仅仅是必要条件，因为无法预知网站可能会面临的访问压力，所以必须要考虑系统在高并发访问情况下，超出负载设计能力的情况下可能会出现的性能问题。网站需要长时间持续运行，还必须保证系统在持续运行且访问压力不均匀的情况下保持稳定的性能特征。</p><h2><span id="二-可用性">二、可用性</span></h2><p>网站高可用的主要手段是冗余，应用部署在多台服务器上同时提供访问，数据存在在多台服务器上互相备份，任何一台服务器宕机都不会影响应用的整体可用，也不会导致数据丢失。</p><p><strong>联系实际:</strong><br>这种方式适合看公司情况，有的公司虽然有盈利，但是为了减少一些不必要的成本，需要架构师做一些技术架构的评估，比如A和B技术架构方案都适合业务时，这时公司拍板的人更倾向于成本更低的方案。</p><h2><span id="三-伸缩性">三、伸缩性</span></h2><p>大型网站需要面对大量用户的高并发访问和存储海量数据，不可能只用一台服务器就处理全部用户请求，存储全部数据。网站通过集群的方式将多台服务器组成一个整体共同提供服务。所谓伸缩性是指通过不断向集群中加入服务器的手段来缓解不断上升的用户并发访问压力和不断增长的数据存储需求。</p><p><strong>联系实际:</strong><br>针对之前研究过弹性伸缩，所谓弹性伸缩就是当处于高并发时，自动扩展，开启多台服务器来应对高并发，当处于低并发时，也就是用户不是特别多的时候，自动回收一些多余的服务器。减少不必要的资源浪费。</p><h2><span id="四-扩展性">四、扩展性</span></h2><p>不同于其他架构要素主要关于非功能性需求，网站的扩展性架构直接关注网站的功能需求。网站快速发展，功能不断扩展，如何设计网站的架构使其能够快速响应需求变化，是网站可扩展架构主要的目的。</p><p>衡量网站架构扩展性好坏的主要标准就是网站增加新的业务产品时，是否可以上线新产品。不同产品之间是否很少耦合，一个产品改动对其他产品无影响，其他产品和功能不需要受牵连进行改动。</p><p><strong>联系实际:</strong><br>说到扩展性，工作两年以上的朋友特别深有感触，两年的时间由一个初级开发者到中级开发者，从0写过项目，也维护过不少项目，应该能够深刻的理解扩展性是多么的重要。</p><h2><span id="五-安全性">五、安全性</span></h2><p>互联网是开放的，任何人在任何地方都可以访问网站。网站的安全将就是保护网站不受恶意访问和攻击，保护网站的重要数据不被窃取。</p><p>Web网站常用的攻击方式:<br>(1)SQL注入 - 此威胁的目标可能是绕过登录算法，破坏数据等。</p><p>(2)拒绝服务攻击 - 此威胁的目标可能是拒绝合法用户访问资源。</p><p>(3)跨站点脚本XSS - 此威胁的目标可能是注入可在客户端浏览器上执行的代码。</p><p>(4)Cookie /会话中毒 - 此威胁的目标是通过攻击者修改Cookie /会话数据以获取未经授权的访问权限。</p><p>(5)表格篡改 - 此威胁的目标是修改表单数据，例如电子商务应用程序中的价格，以便攻击者可以以较低的价格获得物品。</p><p>(6)代码注入 - 此威胁的目标是注入可在服务器上执行的PHP，Python等代码。代码可以安装后门，泄露敏感信息等。<br>破坏 - 此威胁的目标是修改网站上显示的页面，并将所有页面请求重定向到包含攻击者消息的单个页面。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多模块应用自动化部署</title>
      <link href="/2019/04/11/%E5%A4%9A%E6%A8%A1%E5%9D%97%E5%BA%94%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/04/11/%E5%A4%9A%E6%A8%A1%E5%9D%97%E5%BA%94%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>多模块应用自动化部署脚本(一个maven项目可以是单体的，也可以有很多子模块，以我之前博客为例，我的博客有这么几个模块，blog-common、blog-service、blog-web、blog-generator等，这种模块打包的时候，全部都不能缺，缺一不可，否则就会报错，也就是构建失败):<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">time=$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git clone https://code.aliyun.com/test/bfi.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd /home/project/bfi/bfi-saas/bfi-web/src</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm -r ./test/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd /home/project/bfi/bfi-saas</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mvn clean package</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    echo &quot;自动化部署bfi项目失败,当前日期为:&quot;$time &gt;&gt; /home/project/bfi_deploy.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    echo &apos;部署失败，请登录服务器查看&apos; | mail -s &quot;bfi部署&quot; test@163.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    cp -r /home/project/bfi/bfi-saas/bfi-web/target/bfi-web.war /home/project/tomcat8/webapps/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /home/project/tomcat8/bin/shutdown.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /home/project/tomcat8/bin/startup.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    rm -r /home/project/bfi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    echo &quot;自动化部署bfi项目成功,当前日期为:&quot;$time &gt;&gt; /home/project/bfi_deploy.log</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    echo &apos;部署成功&apos; | mail -s &quot;bfi部署&quot; test@163.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><!--more--><p>注意:</p><p>(1)maven打包通常也会执行mvn test，也就是会将src/test/java下面的单元测试代码全部执行一遍，如果你的单元测试其中某个方法有问题也会导致构建失败。上述我的其中一步操作rm -r ./test/主要就是将单元测试代码删除防止影响构建，实际上是不应该这样做的，但是由于某种原因我必须要这样做(不建议开发者将单元测试删除后部署，单测也是一种上线部署的保障;</p><p>(2)模块之间最好界限分明，否则会有不必要的依赖错误;</p><p>关于脚本中的邮件发送，可以参考我的这篇博客<a href="https://developers-youcong.github.io/2019/04/11/%E5%8D%95%E4%BD%93%E5%BA%94%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/">单体应用自动化部署</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单体应用自动化部署</title>
      <link href="/2019/04/11/%E5%8D%95%E4%BD%93%E5%BA%94%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/04/11/%E5%8D%95%E4%BD%93%E5%BA%94%E7%94%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>单体应用自动化部署脚本:<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">DATE=$(date +%Y%m%d)</span><br><span class="line"></span><br><span class="line">time=$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line"></span><br><span class="line">git clone https://code.aliyun.com/test/blog.git</span><br><span class="line"></span><br><span class="line">cd blog</span><br><span class="line"></span><br><span class="line">mvn clean package</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line"></span><br><span class="line">    echo &quot;自动化部署blog项目失败,当前日期为:&quot;$time &gt;&gt; /home/project/blog_deploy.log</span><br><span class="line">    echo &apos;部署失败，请登录服务器查看&apos; | mail -s &quot;blog部署&quot; test@163.com</span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">    cp -r /home/project/blog/target/blog.war /home/project/tomcat8/webapps/</span><br><span class="line"></span><br><span class="line">    /home/project/tomcat8/bin/shutdown.sh</span><br><span class="line"></span><br><span class="line">    /home/project/tomcat8/bin/startup.sh</span><br><span class="line"></span><br><span class="line">    rm -r /home/project/blog</span><br><span class="line"></span><br><span class="line">    echo &quot;自动化部署blog项目成功,当前日期为:&quot;$time &gt;&gt; /home/project/blog_deploy.log</span><br><span class="line">    echo &apos;部署成功&apos; | mail -s &quot;blog部署&quot; test@163.com</span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p>其中涉及到邮件在服务器发生，我在这里使用的是heirloom-mailx</p><p>安装使用流程如下(以Ubuntu16.04为例):</p><h3><span id="1安装heirloom-mailx">1.安装heirloom-mailx</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install heirloom-mailx</span><br></pre></td></tr></table></figure><h3><span id="2修改etcs-nailrc并在尾部添加如下内容这里使用的是163详情可去163邮箱了解">2.修改/etc/s-nail.rc并在尾部添加如下内容(这里使用的是163，详情可去163邮箱了解)</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set from=&quot;xxx@163.com&quot;</span><br><span class="line">set smtp=&quot;smtps://smtp.163.com:465&quot;</span><br><span class="line">set smtp-auth-user=&quot;xxxm@163.com&quot;</span><br><span class="line">set smtp-auth-password=&quot;123456&quot;</span><br><span class="line">set smtp-auth=login</span><br></pre></td></tr></table></figure><h3><span id="3测试">3.测试</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;this is test&apos; | mail -s &quot;test email.&quot; 123@qq.com</span><br></pre></td></tr></table></figure><p>邮箱这里我主要参考:<br><a href="https://blog.csdn.net/just_shunjian/article/details/78677054" target="_blank" rel="noopener">ubuntu16.04 heirloom-mailx 通过外部SMTP服务器发送邮件</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Edusoho之LNMP环境搭建</title>
      <link href="/2019/04/10/Edusoho%E4%B9%8BLNMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/04/10/Edusoho%E4%B9%8BLNMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2><span id="1更新">1.更新</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h2><span id="2安装nginx">2.安装Nginx</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h2><span id="3安装php">3.安装php</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php-pear php7.0-cli php7.0-common php7.0-curl \</span><br><span class="line">    php7.0-dev php7.0-fpm php7.0-json php7.0-mbstring php7.0-mcrypt \</span><br><span class="line">    php7.0-mysql php7.0-opcache php7.0-zip php7.0-intl php7.0-gd php7.0-xml</span><br></pre></td></tr></table></figure><a id="more"></a><p>修改配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/php/7.0/fpm/php.ini</span><br></pre></td></tr></table></figure></p><p>修改配置内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post_max_size = 1024M</span><br><span class="line">memory_limit = 1024M</span><br><span class="line">upload_max_filesize = 1024M</span><br></pre></td></tr></table></figure></p><p>重启让配置生效:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service php7.0-fpm restart</span><br></pre></td></tr></table></figure></p><h2><span id="4安装mysql">4.安装mysql</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><h2><span id="5安装edusoho">5.安装edusoho</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www</span><br><span class="line">sudo wget http://download.edusoho.com/edusoho-8.3.20.tar.gz </span><br><span class="line">sudo tar -zxvf edusoho-8.3.20.tar.gz </span><br><span class="line">sudo chown www-data:www-data edusoho/ -Rf</span><br></pre></td></tr></table></figure><h2><span id="6修改配置文件">6.修改配置文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-enabled/edusoho</span><br></pre></td></tr></table></figure><p>edusoho配置如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    # [改] 域名或IP</span><br><span class="line">    server_name 192.168.126.130;</span><br><span class="line">    </span><br><span class="line">    #301跳转可以在nginx中配置</span><br><span class="line"></span><br><span class="line">    # 程序的安装路径</span><br><span class="line">    root /var/www/edusoho/web;</span><br><span class="line"></span><br><span class="line">    # 日志路径</span><br><span class="line">    access_log /var/log/nginx/example.com.access.log;</span><br><span class="line">    error_log /var/log/nginx/example.com.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        index app.php;</span><br><span class="line">        try_files $uri @rewriteapp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location @rewriteapp &#123;</span><br><span class="line">        rewrite ^(.*)$ /app.php/$1 last;</span><br><span class="line">    &#125;</span><br><span class="line">     location ~ ^/udisk &#123;</span><br><span class="line">        internal;</span><br><span class="line">        root /var/www/edusoho/app/data/;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(app|app_dev)\.php(/|$) &#123;</span><br><span class="line">        fastcgi_pass   unix:/var/run/php7.0-fpm.sock;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.*)$;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param  HTTPS              off;</span><br><span class="line">        fastcgi_param HTTP_X-Sendfile-Type X-Accel-Redirect;</span><br><span class="line">        fastcgi_param HTTP_X-Accel-Mapping /udisk=/var/www/edusoho/app/data/udisk;</span><br><span class="line">        fastcgi_buffer_size 128k;</span><br><span class="line">        fastcgi_buffers 8 128k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 配置设置图片格式文件</span><br><span class="line">    location ~* \.(jpg|jpeg|gif|png|ico|swf)$ &#123;</span><br><span class="line">        # 过期时间为3年</span><br><span class="line">        expires 3y;</span><br><span class="line">        </span><br><span class="line">        # 关闭日志记录</span><br><span class="line">        access_log off;</span><br><span class="line"></span><br><span class="line">        # 关闭gzip压缩，减少CPU消耗，因为图片的压缩率不高。</span><br><span class="line">        gzip off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 配置css/js文件</span><br><span class="line">    location ~* \.(css|js)$ &#123;</span><br><span class="line">        access_log off;</span><br><span class="line">        expires 3y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 禁止用户上传目录下所有.php文件的访问，提高安全性</span><br><span class="line">    location ~ ^/files/.*\.(php|php7.0)$ &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"> # 以下配置允许运行.php的程序，方便于其他第三方系统的集成。</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        # [改] 请根据实际php-fpm运行的方式修改</span><br><span class="line">        fastcgi_pass   unix:/var/run/php7.0-fpm.sock;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.*)$;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param  HTTPS              off;</span><br><span class="line">        fastcgi_param  HTTP_PROXY         &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其实LNMP环境搭建与LAMP环境搭建基本相同，只不过使用的web服务器不同及其配置有点差异，一句话，大同小异。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Edusoho之LAMP环境搭建</title>
      <link href="/2019/04/10/Edusoho%E4%B9%8BLAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/04/10/Edusoho%E4%B9%8BLAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>主要参考官方文档<a href="http://www.qiqiuyu.com/course/20/task/2708/show" target="_blank" rel="noopener">Ubuntu16.04+Apache+PHP+MySQL+EduSoho 安装教程</a><br>LAMP环境按照如下搭建是没有问题的，本地虚拟机试验是完全没有问题的。</p><h2><span id="1更新">1.更新</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h2><span id="2安装apache2">2.安装apache2</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2 </span><br><span class="line">sudo apt-get install libapache2-mod-xsendfile</span><br></pre></td></tr></table></figure><p>通常sudo apt-get install apache2 默认是安装apache2.4(通过apache -v可以查看对应的apache版本)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod rewrite   #启用rewrite模块</span><br><span class="line">sudo a2enmod xsendfile    #启用xsendfile模块</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2><span id="3修改配置文件">3.修改配置文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/apache2/sites-enabled/edusoho.conf</span><br></pre></td></tr></table></figure><p>edusoho.conf内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName 192.168.126.130</span><br><span class="line"></span><br><span class="line">    DocumentRoot /var/www/project/web</span><br><span class="line">    &lt;Directory /var/www/project/web&gt;</span><br><span class="line">        # enable the .htaccess rewrites</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Require all granted   </span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">    ErrorLog /var/log/apache2/project_error.log</span><br><span class="line">    CustomLog /var/log/apache2/project_access.log combined</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p>ServerName 可以域名也可以是IP地址，在这里我用的是IP地址。</p><h2><span id="4安装php">4.安装php</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php-pear php7.0-cli php7.0-common php7.0-curl \</span><br><span class="line">    php7.0-dev php7.0-fpm php7.0-json php7.0-mbstring php7.0-mcrypt \</span><br><span class="line">    php7.0-mysql php7.0-opcache php7.0-zip php7.0-intl php7.0-gd php7.0-xml</span><br></pre></td></tr></table></figure><p>顺便修改对应的配置文件(主要用于修改PHP上传文件的大小限制)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/php/7.0/fpm/php.ini</span><br></pre></td></tr></table></figure></p><p>修改这三个值的大小(通过/+对应的关键字搜索效率更高)，如/post_max_size就可以一下定位到该键上):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post_max_size = 1024M</span><br><span class="line">memory_limit = 1024M</span><br><span class="line">upload_max_filesize = 1024M</span><br></pre></td></tr></table></figure></p><p>修改配置文件后，记得执行重启命令，让配置生效:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service php7.0-fpm restart</span><br></pre></td></tr></table></figure></p><h2><span id="5安装mysql">5.安装mysql</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><p>设置密码</p><p>在这个过程过程中会要求您输入MySQL数据库的root密码，请认真填写。</p><h2><span id="6配置安装edusoho">6.配置安装edusoho</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www</span><br><span class="line">sudo wget http://download.edusoho.com/edusoho-8.3.20.tar.gz </span><br><span class="line">sudo tar -zxvf edusoho-8.3.20.tar.gz </span><br><span class="line">sudo chown www-data:www-data edusoho/ -Rf</span><br></pre></td></tr></table></figure><h2><span id="7重启apache访问">7.重启apache访问</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure><p>访问地址为:192.168.126.130 初次出现的其实与jenkins和wordpress倒有不少相似之处，比如配置数据库和用户等。</p><p>如下图所示:<br>(1)同意协议<br><img src="/2019/04/10/Edusoho之LAMP环境搭建/01.png" alt=""></p><p>(2)检测环境<br><img src="/2019/04/10/Edusoho之LAMP环境搭建/02.png" alt=""></p><p>(3)配置数据库<br><img src="/2019/04/10/Edusoho之LAMP环境搭建/03.png" alt=""></p><p>(4)配置网站信息<br><img src="/2019/04/10/Edusoho之LAMP环境搭建/04.png" alt=""></p><p>(5)安装成功<br><img src="/2019/04/10/Edusoho之LAMP环境搭建/05.png" alt=""></p><p>(6)最终网站效果如图<br><img src="/2019/04/10/Edusoho之LAMP环境搭建/06.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E:dpkg was interrupted, you must manually run&#39;dpkg配置&#39;to correct the problem.</title>
      <link href="/2019/04/10/E-dpkg-was-interrupted-you-must-manually-run-dpkg%E9%85%8D%E7%BD%AE-to-correct-the-problem/"/>
      <url>/2019/04/10/E-dpkg-was-interrupted-you-must-manually-run-dpkg%E9%85%8D%E7%BD%AE-to-correct-the-problem/</url>
      
        <content type="html"><![CDATA[<p>执行sudo apt-get install安装对应的软件出现如下错误</p><p>详细错误信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)</span><br><span class="line">E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</span><br></pre></td></tr></table></figure></p><p>错误原因:是因为引用错误的链接导致的。</p><p>解决办法(删除这些引用即可):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /var/lib/dpkg/updates</span><br><span class="line">rm -r ./*</span><br></pre></td></tr></table></figure></p><p>删除完后，执行sudo apt-get update即可，这时就可以正常安装软件了。</p><p>参考解决办法链接:<br><a href="https://www.helplib.com/ubuntu/article_158303" target="_blank" rel="noopener">14.04消息’E:dpkg was interrupted, you must manually run’dpkg配置’to correct the problem.’</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04中php如何切换版本</title>
      <link href="/2019/04/10/Ubuntu16-04%E4%B8%ADphp%E5%A6%82%E4%BD%95%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"/>
      <url>/2019/04/10/Ubuntu16-04%E4%B8%ADphp%E5%A6%82%E4%BD%95%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>其实就是一条Linux命令,如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config php</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>会出现下面选项:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">There are 2 choices for the alternative php (providing /usr/bin/php).</span><br><span class="line"></span><br><span class="line">  Selection    Path             Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/php7.1   71        auto mode</span><br><span class="line">  1            /usr/bin/php7.0   70        manual mode</span><br><span class="line">  2            /usr/bin/php7.1   71        manual mode</span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or type selection number:</span><br></pre></td></tr></table></figure></p><p>输入其中一项数字即可实现php版本切换</p><p>如何判断版本是否切换成功？<br><code>php -v</code>命令进行前后版本对比即可看出。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx上配置phpmyadmin</title>
      <link href="/2019/04/10/nginx%E4%B8%8A%E9%85%8D%E7%BD%AEphpmyadmin/"/>
      <url>/2019/04/10/nginx%E4%B8%8A%E9%85%8D%E7%BD%AEphpmyadmin/</url>
      
        <content type="html"><![CDATA[<p>Nginx配置phpmyadmin流程如下:</p><h2><span id="一-准备软件和环境这里我以ubuntu1604为例">一、准备软件和环境(这里我以ubuntu16.04为例)</span></h2><h3><span id="1安装php71">1.安装php7.1</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install php-pear php7.1-cli php7.1-common php7.1-curl \</span><br><span class="line">    php7.1-dev php7.1-fpm php7.1-json php7.1-mbstring php7.1-mcrypt \</span><br><span class="line">    php7.1-mysql php7.1-opcache php7.1-zip php7.1-intl php7.1-gd php7.1-xml</span><br></pre></td></tr></table></figure><h4><span id="1修改-php-fpm-监听方式为1270019000">(1)修改 PHP-FPM 监听方式为127.0.0.1:9000</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &apos;s/listen = .*/listen = 127.0.0.1:9000/g&apos; /etc/php/7.1/fpm/pool.d/www.conf</span><br></pre></td></tr></table></figure><h4><span id="2重启-php-fpm-服务进程">(2)重启 PHP-FPM 服务进程</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service php7.1-fpm restart</span><br></pre></td></tr></table></figure><a id="more"></a><h3><span id="2安装mysql">2.安装mysql</span></h3><h4><span id="1配置mysql57源">(1)配置mysql5.7源</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 可在 http://dev.mysql.com/downloads/repo/apt/ 页面找到 mysql-apt-config 的最新版本。</span><br><span class="line">wget http://dev.mysql.com/get/mysql-apt-config_0.8.7-1_all.deb</span><br><span class="line">sudo dpkg -i mysql-apt-config_0.8.7-1_all.deb</span><br></pre></td></tr></table></figure><p>这时会弹出让你选择，将：</p><p>MySQL Server修改为： mysql-5.7<br>MySQL Tools &amp; Connectors (Currently selected: Enabled)修改为Disabled。<br>MySQL Preview Packages修改过为 Disabled。</p><h4><span id="2安装mysql服务端">(2)安装mysql服务端</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><h3><span id="3下载最新版phpmyadmin可以到官网去下载">3.下载最新版phpmyadmin，可以到去下载:</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://files.phpmyadmin.net/phpMyAdmin/4.8.5/phpMyAdmin-4.8.5-all-languages.zip</span><br><span class="line">unzip phpMyAdmin-4.8.5-all-languages.zip</span><br><span class="line">mv phpMyAdmin-4.8.5-all-languages.zip phpmyadmin</span><br></pre></td></tr></table></figure><h3><span id="4安装nginx">4.安装nginx:</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:nginx/stable</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h2><span id="二-将phpmyadmin复制到varwww目录下">二、将phpmyadmin复制到/var/www目录下</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r phpmyadmin /var/www</span><br></pre></td></tr></table></figure><h2><span id="三-配置nginx主要修改nginxconf配置文件">三、配置nginx(主要修改nginx.conf配置文件)</span></h2><p>这段代码放到http{}里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 8090;</span><br><span class="line">root /var/www/phpmyadmin;</span><br><span class="line">index index.php;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">  include snippets/fastcgi-php.conf;</span><br><span class="line">  fastcgi_pass unix:/run/php/php7.1-fpm.sock;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四、重启nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p><p>访问:<a href="http://IP地址:8090/即可看到" target="_blank" rel="noopener">http://IP地址:8090/即可看到</a><br>效果图如下:<br><img src="/2019/04/10/nginx上配置phpmyadmin/phpmyadmin.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot:The field file exceeds its maximum permitted size of 1048576 bytes</title>
      <link href="/2019/04/08/Spring-Boot-The-field-file-exceeds-its-maximum-permitted-size-of-1048576-bytes/"/>
      <url>/2019/04/08/Spring-Boot-The-field-file-exceeds-its-maximum-permitted-size-of-1048576-bytes/</url>
      
        <content type="html"><![CDATA[<p>错误信息:The field file exceeds its maximum permitted size of 1048576 bytes<br>原因是因为SpringBoot内嵌tomcat默认所能上传的文件大小为1M,超出这个就会报错。<br><a id="more"></a><br>解决办法:</p><h2><span id="1修改applicationyml配置文件">1.修改application.yml配置文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  http:</span><br><span class="line">    multipart:</span><br><span class="line">      enabled: true</span><br><span class="line">      max-file-size: 30MB</span><br><span class="line">      max-request-size: 30MB</span><br></pre></td></tr></table></figure><h2><span id="2编写配置类">2.编写配置类</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.config;</span><br><span class="line"></span><br><span class="line">import javax.servlet.MultipartConfigElement;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.web.servlet.MultipartConfigFactory;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class MulterFile &#123;</span><br><span class="line">/**  </span><br><span class="line">     * 文件上传配置  </span><br><span class="line">     * @return  </span><br><span class="line">     */  </span><br><span class="line">    @Bean  </span><br><span class="line">    public MultipartConfigElement multipartConfigElement() &#123;  </span><br><span class="line">        MultipartConfigFactory factory = new MultipartConfigFactory();  </span><br><span class="line">        //文件最大  </span><br><span class="line">        factory.setMaxFileSize(&quot;30960KB&quot;); //KB,MB  </span><br><span class="line">        /// 设置总上传数据总大小  </span><br><span class="line">        factory.setMaxRequestSize(&quot;309600KB&quot;);  </span><br><span class="line">        return factory.createMultipartConfig();  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资料:<br><a href="https://blog.csdn.net/u010429286/article/details/54381705" target="_blank" rel="noopener">Spring Boot:The field file exceeds its maximum permitted size of 1048576 bytes.</a><br><a href="https://www.cnblogs.com/jiangwz/p/9030943.html" target="_blank" rel="noopener">Spring Boot设置上传文件大小</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot打包成war</title>
      <link href="/2019/04/08/SpringBoot%E6%89%93%E5%8C%85%E6%88%90war/"/>
      <url>/2019/04/08/SpringBoot%E6%89%93%E5%8C%85%E6%88%90war/</url>
      
        <content type="html"><![CDATA[<p>关于SpringBoot打成jar包以及jar包如何在Linux持久运行，我在前面已经说过了，所以本次不再赘述。</p><p>关于SpringBoot打包成war，其实步骤特别简单，如下图所示(如果是jar，通常是没有图中红色标记处，因为默认就是jar):<br><a id="more"></a></p><h2><span id="1添加war">1.添加<packaging>war</packaging></span></h2><p><img src="/2019/04/08/SpringBoot打包成war/springboot.png" alt=""></p><h2><span id="2修改启动类">2.修改启动类</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.boot.Banner;</span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line">import org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line">@EnableTransactionManagement</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class Application &#123;</span><br><span class="line"></span><br><span class="line">    protected final static Logger logger = LoggerFactory.getLogger(Application.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication app = new SpringApplication(Application.class);</span><br><span class="line">        app.setBannerMode(Banner.Mode.OFF);</span><br><span class="line">        app.run(args);</span><br><span class="line">        logger.info(&quot;Application is success!&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    //关键是添加这段代码</span><br><span class="line">    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) &#123;</span><br><span class="line">// 注意这里要指向原先用main方法执行的Application启动类</span><br><span class="line">return builder.sources(Application.class);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="3做完1和2你会发现项目报错这时你只需update-project即可直到不报错为止">3.做完1和2你会发现项目报错，这时你只需update project即可，直到不报错为止。</span></h2><h2><span id="4mvn-install出现如图所示表示打包成功至于war的部署方式就不多说了直接扔到tomcat下的webapps目录下即可">4.mvn install，出现如图所示,表示打包成功(至于war的部署方式就不多说了，直接扔到tomcat下的webapps目录下即可)</span></h2><p><img src="/2019/04/08/SpringBoot打包成war/war.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型网站架构模式</title>
      <link href="/2019/04/08/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/04/08/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>关于什么是模式,这个来自建筑师的词汇是这样定义的:”每一个模式描述了一个在我们周围不断重复发生的问题及该问题解决方案的核心。这样，你就能一次又一次地使用该方案而不必做重复的工作”。</p><p>模式的关键在于模式的可重复性，问题与场景的可重复性带来的解决方案的可重复使用。</p><p><strong>联系实际开发</strong>:<br>每个做前后台开发的小伙伴们都会发现一点，一个正儿八经的后台系统，80%是重复的，20%是特别的(可以称作个性化定制)。</p><p>举个例子:<br>人人开源的后台系统:<br><img src="/2019/04/08/大型网站架构模式/model01.png" alt=""></p><p>Jeesite4的后台系统:<br><img src="/2019/04/08/大型网站架构模式/model02.png" alt=""></p><p>从这两者进行比对就可以明显的发现公共的部分非常相似(只不过展现的形式不一样，renren-security中的角色管理是直接在菜单中显示，而jeesite4则放在权限管理中，只需点击即可看到对应的角色管理)<br><a id="more"></a><br>在这里我就不详细说它们的内部架构了，感兴趣的可以参考我的这篇博客<a href="https://www.cnblogs.com/youcong/p/9800717.html" target="_blank" rel="noopener">开源项目之架构分享</a></p><p>在软件开发中，可复用模式非常重要，因为这会直接影响到敏捷开发的效率高低。</p><h2><span id="网站架构模式">网站架构模式</span></h2><h3><span id="1分层">1.分层</span></h3><p>分层是企业应用系统中最常见的一种架构模式，将系统在横向维度上切分成几个部分，每个部分负责一部分相对比较单一的职责，然后通过上层对下层的依赖和调用组成一个完整的系统。</p><p>应用层:负责具体业务和视图展示，如网站首页及搜索输入和结果展示。<br>服务层:为应用层提供服务支持，如用户管理服务，购物车服务等。<br>数据层:提供数据存储访问服务，如数据库、缓存、文件、搜索引擎等。</p><p>这种分层模式，很多开发者们并不陌生，特别是Java开发的朋友们，最常用的就是三层架构(业务逻辑层、数据访问层、UI层等)，在分层模式中就是一个比较好的诠释。</p><p>通过分层，可以更好地将一个庞大的软件系统切分成不同的部分，便于分工合作开发和维护；各层之间具有一定的独立性，只要维持调用接口不变，各层可以根据具体问题独立演化发展而不需要其他层必须做出相应的调整。</p><p>任何事情有利也有弊，分层并不是万能的，比如禁止跨层次调用(应用层不能直接调用数据层)及逆向调用(数据层调用服务层、或服务层调用应用层等)。</p><p>不过总的来说，正是因为有了分层，软件开发效率才会越来越高，再没有分层的时代，数据层、业务逻辑层、表现层全部耦合在一起，真的是牵其一而动全身。在此我不得不佩服早期开发人员的勇气(这里以早期Java开发为例，记得在校的时候我曾经见过一个JSP+Servlet囊括数据层、业务逻辑层、表现层内容，当时我看到这个项目就冒冷汗，太TMD的变态了)</p><h3><span id="2分割">2.分割</span></h3><p>如果说分层是将软件在横向方面进行切分，那么分割就是在纵向方面对软件进行切分。<br>网站越大，功能越复杂，服务和数据处理的种类也越多，将这些不同的功能和服务分割开来，包装成高内聚低耦合的模块单元，一方面有助于软件的开发和维护；另一方面，便于不同模块的分布式部署，提高网站的并发处理能力和功能扩展能力。</p><p><strong>那么什么是内聚？什么是耦合？</strong><br>内聚是从功能角度来度量模块内的联系，一个好的内聚模块应当恰好做一件事。它描述的是模块内的功能联系(比如一个函数只办一件事)。<br>耦合是软件结构中各模块之间相互连接的一种度量，耦合强弱取决于模块间接口的复杂度、进入或访问一个模块的点以及通过接口的数据(耦合这个很好理解，耦合性越低代码的可扩展性可维护性越好，相反耦合性越高，开发者们就有种想上吊自杀的冲动，耦合性越高的例子就不多说了，特别是维护老项目的开发者们感触最深了)</p><h3><span id="3分布式">3.分布式</span></h3><p>对于大型网站，分层和分割的一个主要目的是为了切分后的模块便于分布式部署，即将不同模块部署在不同的服务器上，通过远程调用协同工作。分布式意味着可以使用更多的计算机完成同样的功能，计算机越多，CPU、内存、存储资源也就越多，能够处理的并发访问和数据量就越大，进而能够为更多的用户提供服务。</p><p><strong>分布式也就其弊端</strong>:<br>(1)服务的调用必须通过网络，可能对性能造成比较严重的影响;<br>(2)服务器越多，服务器宕机的概率也就越大，宕机会造成服务不可用，直接导致网站可用性降低;<br>(3)数据一致性问题;<br>(4)开发管理维护困难;</p><p><strong>常用的分布式方案</strong>：<br>(1)分布式应用和服务:将分层和分割后的应用和服务模块分布式部署，除了可以改善网站性能和并发性、加快开发和发布速度、减少数据库连接资源消耗外；还可以使不同应用复用共同的服务，便于业务功能扩展;<br>(2)分布式静态资源:网站的静态资源如JS、CSS、图片等资源独立分布式部署，并采用独立的域名,即人们常说的动静分离。<br>(3)分布式数据和存储:大型网站处理以P为单位的海量数据(P这个单位也许有人对此不熟悉，本人普及一下，1024K=1M 1024M=1G 1024G=1T 1024T=1P)，通常分布式存储以NoSQL居多。<br>(4)分布式计算，首推Hadoop。</p><h3><span id="4集群">4.集群</span></h3><p>记得当初我对集群和分布式之间的区别不太理解，认为它们差不多。<br>其实它们之间的区别大了去了，在此我用一句话概括(非常理解，保你不忘):<br>集群就是不同的机器提供相同的服务;<br>分布式是不同的机器提供不同的服务;</p><p>服务器集群有更多的服务器提供相同的服务，因此可以提供更好的并发特性，当有更多用户访问的时候，只需要向集群中加入新的机器即可。同时因为一个应用由多台服务器提供，当某台服务器发生故障时，负载均衡设备或者系统的失效转移机制会将请求转发到集群中的其他服务器上，使服务器故障不影响用户使用。所以在网站应用中，即使是访问量很小的分布式应用和服务，也至少要部署两台服务器构成一个小的集群，目的就是提高系统的可用性。</p><h3><span id="5缓存">5.缓存</span></h3><p>缓存就是将数据存放在举例计算最近的位置以加快处理速度。缓存是改善软件性能的第一手段，现代CPU越来越快的一个重要因素就是使用更多的缓存，在复杂的软件设计中，缓存几乎无处不在。</p><p>(1)CDN:即内容分发网络，部署在距离终端用户最近的网络服务商，用户的网站请求总是先到达他的网络服务商那里，在这里缓存网站的一些静态资源(较少变化的数据)，可以就近以最快速度返回给用户，如视频网站和门户网站会将用户访问量大的热点内容缓存在CDN。</p><p>(2)反向代理:反向代理属于网站前端架构的一部分，部署在网站的前端，当用户请求到达网站的数据中心时，最先访问到的就是反向代理服务器，这里缓存网站的静态资源，无需将请求继续转发给应用服务器就能返回给用户。</p><p>(3)本地缓存:在应用服务器本地缓存着热点数据，应用程序可以在本机内存中直接访问数据，而无需访问数据库;</p><p>(4)分布式缓存:大型网站的数据量非常庞大，即使只缓存一小部分，需要的内存空间也不是单机能承受的，所以处了本地缓存，还需要分布式缓存，将数据缓存在一个专门的分布式缓存集群中，应用程序通过网络通信访问缓存数据;</p><p>注意:<br>使用缓存的两个前提条件:<br>a.数据访问热点不均衡,某些数据会更频繁的访问;<br>b.数据在某个时间段内有效，不会很快过期,否则缓存的数据就会因已经失效而产生脏读，影响结果的正确性。</p><p><strong>什么是脏读？</strong><br>通俗的讲，当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据，那么另外一个事务读到的这个数据是脏数据，依据脏数据所做的操作可能是不正确的</p><p>网站应用中，缓存除了可以加快数据访问数据，还可以减轻后端应用和数据存储的负载压力，这一点对网站数据库架构至关重要，网站数据库几乎都是按照有缓存的前提进行负载能力设计的。</p><h3><span id="6异步">6.异步</span></h3><p>计算机软件发展的一个重要目标和驱动力就是降低软件耦合性。事物之间直接关系越少，就越少被彼此影响，越可以独立发展。<br>系统解耦合的手段除了前面提到的分层、分割、分布式等，还有一个重要手段就是异步，业务之间的消息传递不是同步调用，而是将一个业务操作分成多个阶段，每个阶段之间通过共享数据的方式异步执行协作。</p><p>异步架构是典型的生产者消费者模式，两者不存在直接调用，只要保持数据结构不变，彼此功能实现可以随意变换而不互相影响，这对网站扩展新功能非常便利。除此外，使用异步消息队列还有如下特性:<br>(1)提高系统可用性。消费者服务器发生故障，数据会在消息队列服务器中存储堆积，生产者服务器可以继续处理业务请求，系统整体表现无故障。消费者服务器恢复正常后，继续处理消息队列中的数据。</p><p>(2)加快网站响应速度。处在业务处理前端的生产者服务器在处理完业务请求后，将数据写入消息队列，不需要等待消费者服务器处理就可以返回，响应延迟减少;</p><p>(3)消除并发访问高峰。用户访问网站是随机的，存在访问高峰和低谷，即使网站按照一般访问高峰进行规划和部署，也依然会出现突发事件，比如购物网站的促销活动，微博上的热点事件(比如之前赵丽颖官宣导致微博宕机)。</p><h3><span id="7冗余">7.冗余</span></h3><p>网站需要7x24小时连续运行，但是服务器随时可能出现故障，特别是服务器规模比较大时，出现某台服务器宕机是必然事件。要想保证在服务器宕机的情况网站依然可以继续服务，不丢失数据，就需要一定程度的服务器冗余运行，数据冗余备份，这样当某台服务器宕机时，可以将其上的服务和数据访问转移到其他机器上。</p><p>访问和负载很小的服务也必须部署至少两台服务器构成一个集群，其目的就是通过冗余实现服务高可用。数据库除了定期备份(可通过shell脚本实现)，存档保存外，为了保证在线业务高可用，还需要对数据进行主从分离，实时同步实现热备份。</p><p>为了抵御地震等不可抗因素导致的网站完全瘫痪，某些大型网站会对整个数据中心进行备份，全球范围内部署灾备数据中心。网站程序和数据实时同步到多个灾备数据中心。</p><h3><span id="8自动化">8.自动化</span></h3><p>自动化，如自动化监控报警(zabbix、nagios等)、自动化部署(jenkins)、自动化测试等。<br>通常分布式项目一般自动化程度比较高。<br>后续我会针对这些写一个专题实践。</p><h3><span id="9安全">9.安全</span></h3><p>互联网的开放特性使得其从诞生起就面对巨大的安全挑战，网站在安全将方面也积累很多模式，如对于常见的网站XSS攻击、SQL注入、进行编码转换等相应处理、对于垃圾敏感信息进行过滤等。</p><p>本文主要参考《大型网站技术架构：核心原理与案例分析》，上述内容作为本人记录的读书笔记。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客中的文章归档是如何实现的</title>
      <link href="/2019/04/07/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84%E6%96%87%E7%AB%A0%E5%BD%92%E6%A1%A3%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84/"/>
      <url>/2019/04/07/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84%E6%96%87%E7%AB%A0%E5%BD%92%E6%A1%A3%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<p>我的效果图如下(这个是我实现的):<br><img src="/2019/04/07/博客中的文章归档是如何实现的/blog01.png" alt=""></p><p>wordpress的效果图如下:<br><img src="/2019/04/07/博客中的文章归档是如何实现的/blog02.png" alt=""><br>sql代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT YEAR(post.post_modified)AS `year`,MONTH(post.post_modified) AS `month` FROM wp_posts AS post</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>xml代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.blog.springboot.dao.PostsDao&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 通用查询映射结果 --&gt;</span><br><span class="line">&lt;resultMap id=&quot;BaseResultMap&quot; type=&quot;com.blog.springboot.entity.Posts&quot;&gt;</span><br><span class="line">&lt;id column=&quot;ID&quot; property=&quot;id&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_author&quot; property=&quot;postAuthor&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_date&quot; property=&quot;postDate&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_date_gmt&quot; property=&quot;postDateGmt&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_content&quot; property=&quot;postContent&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_title&quot; property=&quot;postTitle&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_excerpt&quot; property=&quot;postExcerpt&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_status&quot; property=&quot;postStatus&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;comment_status&quot; property=&quot;commentStatus&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;ping_status&quot; property=&quot;pingStatus&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_password&quot; property=&quot;postPassword&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_name&quot; property=&quot;postName&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;to_ping&quot; property=&quot;toPing&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;pinged&quot; property=&quot;pinged&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_modified&quot; property=&quot;postModified&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_modified_gmt&quot; property=&quot;postModifiedGmt&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_content_filtered&quot; property=&quot;postContentFiltered&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_parent&quot; property=&quot;postParent&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;guid&quot; property=&quot;guid&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;menu_order&quot; property=&quot;menuOrder&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_type&quot; property=&quot;postType&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;post_mime_type&quot; property=&quot;postMimeType&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;comment_count&quot; property=&quot;commentCount&quot; /&gt;</span><br><span class="line">&lt;result column=&quot;year&quot; property=&quot;year&quot;/&gt;</span><br><span class="line">        &lt;result column=&quot;month&quot; property=&quot;month&quot;/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 通用查询结果列 --&gt;</span><br><span class="line">&lt;sql id=&quot;Base_Column_List&quot; &gt;</span><br><span class="line">ID AS id, post_author AS postAuthor, post_date AS postDate,</span><br><span class="line">post_date_gmt AS postDateGmt, post_content AS postContent, post_title</span><br><span class="line">AS postTitle, post_excerpt AS postExcerpt, post_status AS postStatus,</span><br><span class="line">comment_status AS commentStatus, ping_status AS pingStatus,</span><br><span class="line">post_password AS postPassword, post_name AS postName, to_ping AS</span><br><span class="line">toPing, pinged, post_modified AS postModified, post_modified_gmt AS</span><br><span class="line">postModifiedGmt, post_content_filtered AS postContentFiltered,</span><br><span class="line">post_parent AS postParent, guid, menu_order AS menuOrder, post_type AS</span><br><span class="line">postType, post_mime_type AS postMimeType, comment_count AS</span><br><span class="line">commentCount</span><br><span class="line">&lt;/sql&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 文章归档 --&gt;</span><br><span class="line">    &lt;select id=&quot;articleArchive&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">    SELECT DISTINCT YEAR(post.post_modified)AS `year`,MONTH(post.post_modified) AS `month` FROM wp_posts AS post</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></p><p>实体:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.entity;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.activerecord.Model;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableField;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableId;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableName;</span><br><span class="line">import com.baomidou.mybatisplus.enums.IdType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@TableName(&quot;wp_posts&quot;)</span><br><span class="line">public class Posts extends Model&lt;Posts&gt; &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">    @TableId(value = &quot;ID&quot;, type = IdType.AUTO)</span><br><span class="line">    private Integer id;</span><br><span class="line">    @TableField(&quot;post_author&quot;)</span><br><span class="line">    private Long postAuthor;</span><br><span class="line">    @TableField(&quot;post_date&quot;)</span><br><span class="line">    private String postDate;</span><br><span class="line">    @TableField(&quot;post_date_gmt&quot;)</span><br><span class="line">    private String postDateGmt;</span><br><span class="line">    @TableField(&quot;post_content&quot;)</span><br><span class="line">    private String postContent;</span><br><span class="line">    @TableField(&quot;post_title&quot;)</span><br><span class="line">    private String postTitle;</span><br><span class="line">    @TableField(&quot;post_excerpt&quot;)</span><br><span class="line">    private String postExcerpt;</span><br><span class="line">    @TableField(&quot;post_status&quot;)</span><br><span class="line">    private String postStatus;</span><br><span class="line">    @TableField(&quot;comment_status&quot;)</span><br><span class="line">    private String commentStatus;</span><br><span class="line">    @TableField(&quot;ping_status&quot;)</span><br><span class="line">    private String pingStatus;</span><br><span class="line">    @TableField(&quot;post_password&quot;)</span><br><span class="line">    private String postPassword;</span><br><span class="line">    @TableField(&quot;post_name&quot;)</span><br><span class="line">    private String postName;</span><br><span class="line">    @TableField(&quot;to_ping&quot;)</span><br><span class="line">    private String toPing;</span><br><span class="line">    private String pinged;</span><br><span class="line">    @TableField(&quot;post_modified&quot;)</span><br><span class="line">    private String postModified;</span><br><span class="line">    @TableField(&quot;post_modified_gmt&quot;)</span><br><span class="line">    private String postModifiedGmt;</span><br><span class="line">    @TableField(&quot;post_content_filtered&quot;)</span><br><span class="line">    private String postContentFiltered;</span><br><span class="line">    @TableField(&quot;post_parent&quot;)</span><br><span class="line">    private Long postParent;</span><br><span class="line">    private String guid;</span><br><span class="line">    @TableField(&quot;menu_order&quot;)</span><br><span class="line">    private Integer menuOrder;</span><br><span class="line">    @TableField(&quot;post_type&quot;)</span><br><span class="line">    private String postType;</span><br><span class="line">    @TableField(&quot;post_mime_type&quot;)</span><br><span class="line">    private String postMimeType;</span><br><span class="line">    @TableField(&quot;comment_count&quot;)</span><br><span class="line">    private Integer commentCount;</span><br><span class="line">    </span><br><span class="line">    @TableField(exist=false)</span><br><span class="line">    private List&lt;TermTaxonomy&gt; termTaxonomy;</span><br><span class="line">    </span><br><span class="line">    @TableField(exist=false)</span><br><span class="line">    private List&lt;Terms&gt; terms;</span><br><span class="line">    </span><br><span class="line">    @TableField(exist=false)</span><br><span class="line">    private List&lt;Users&gt; users;</span><br><span class="line">    </span><br><span class="line">    @TableField(&quot;year&quot;)</span><br><span class="line">    private String year;</span><br><span class="line">    </span><br><span class="line">    @TableField(&quot;month&quot;)</span><br><span class="line">    private String month;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    public String getMonth() &#123;</span><br><span class="line">return month;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setMonth(String month) &#123;</span><br><span class="line">this.month = month;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getYear() &#123;</span><br><span class="line">return year;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setYear(String year) &#123;</span><br><span class="line">this.year = year;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public List&lt;Users&gt; getUsers() &#123;</span><br><span class="line">return users;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setUsers(List&lt;Users&gt; users) &#123;</span><br><span class="line">this.users = users;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public List&lt;TermTaxonomy&gt; getTermTaxonomy() &#123;</span><br><span class="line">return termTaxonomy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setTermTaxonomy(List&lt;TermTaxonomy&gt; termTaxonomy) &#123;</span><br><span class="line">this.termTaxonomy = termTaxonomy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public List&lt;Terms&gt; getTerms() &#123;</span><br><span class="line">return terms;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setTerms(List&lt;Terms&gt; terms) &#123;</span><br><span class="line">this.terms = terms;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Integer getId() &#123;</span><br><span class="line">        return id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setId(Integer id) &#123;</span><br><span class="line">        this.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Long getPostAuthor() &#123;</span><br><span class="line">        return postAuthor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostAuthor(Long postAuthor) &#123;</span><br><span class="line">        this.postAuthor = postAuthor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostDate() &#123;</span><br><span class="line">        return postDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostDate(String postDate) &#123;</span><br><span class="line">        this.postDate = postDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostDateGmt() &#123;</span><br><span class="line">        return postDateGmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostDateGmt(String postDateGmt) &#123;</span><br><span class="line">        this.postDateGmt = postDateGmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostContent() &#123;</span><br><span class="line">        return postContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostContent(String postContent) &#123;</span><br><span class="line">        this.postContent = postContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostTitle() &#123;</span><br><span class="line">        return postTitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostTitle(String postTitle) &#123;</span><br><span class="line">        this.postTitle = postTitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostExcerpt() &#123;</span><br><span class="line">        return postExcerpt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostExcerpt(String postExcerpt) &#123;</span><br><span class="line">        this.postExcerpt = postExcerpt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostStatus() &#123;</span><br><span class="line">        return postStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostStatus(String postStatus) &#123;</span><br><span class="line">        this.postStatus = postStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentStatus() &#123;</span><br><span class="line">        return commentStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentStatus(String commentStatus) &#123;</span><br><span class="line">        this.commentStatus = commentStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPingStatus() &#123;</span><br><span class="line">        return pingStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPingStatus(String pingStatus) &#123;</span><br><span class="line">        this.pingStatus = pingStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostPassword() &#123;</span><br><span class="line">        return postPassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostPassword(String postPassword) &#123;</span><br><span class="line">        this.postPassword = postPassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostName() &#123;</span><br><span class="line">        return postName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostName(String postName) &#123;</span><br><span class="line">        this.postName = postName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getToPing() &#123;</span><br><span class="line">        return toPing;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setToPing(String toPing) &#123;</span><br><span class="line">        this.toPing = toPing;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPinged() &#123;</span><br><span class="line">        return pinged;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPinged(String pinged) &#123;</span><br><span class="line">        this.pinged = pinged;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostModified() &#123;</span><br><span class="line">        return postModified;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostModified(String postModified) &#123;</span><br><span class="line">        this.postModified = postModified;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostModifiedGmt() &#123;</span><br><span class="line">        return postModifiedGmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostModifiedGmt(String postModifiedGmt) &#123;</span><br><span class="line">        this.postModifiedGmt = postModifiedGmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostContentFiltered() &#123;</span><br><span class="line">        return postContentFiltered;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostContentFiltered(String postContentFiltered) &#123;</span><br><span class="line">        this.postContentFiltered = postContentFiltered;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Long getPostParent() &#123;</span><br><span class="line">        return postParent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostParent(Long postParent) &#123;</span><br><span class="line">        this.postParent = postParent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getGuid() &#123;</span><br><span class="line">        return guid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setGuid(String guid) &#123;</span><br><span class="line">        this.guid = guid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getMenuOrder() &#123;</span><br><span class="line">        return menuOrder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMenuOrder(Integer menuOrder) &#123;</span><br><span class="line">        this.menuOrder = menuOrder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostType() &#123;</span><br><span class="line">        return postType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostType(String postType) &#123;</span><br><span class="line">        this.postType = postType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPostMimeType() &#123;</span><br><span class="line">        return postMimeType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPostMimeType(String postMimeType) &#123;</span><br><span class="line">        this.postMimeType = postMimeType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getCommentCount() &#123;</span><br><span class="line">        return commentCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentCount(Integer commentCount) &#123;</span><br><span class="line">        this.commentCount = commentCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected Serializable pkVal() &#123;</span><br><span class="line">        return this.id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;Posts&#123;&quot; +</span><br><span class="line">        &quot;, id=&quot; + id +</span><br><span class="line">        &quot;, postAuthor=&quot; + postAuthor +</span><br><span class="line">        &quot;, postDate=&quot; + postDate +</span><br><span class="line">        &quot;, postDateGmt=&quot; + postDateGmt +</span><br><span class="line">        &quot;, postContent=&quot; + postContent +</span><br><span class="line">        &quot;, postTitle=&quot; + postTitle +</span><br><span class="line">        &quot;, postExcerpt=&quot; + postExcerpt +</span><br><span class="line">        &quot;, postStatus=&quot; + postStatus +</span><br><span class="line">        &quot;, commentStatus=&quot; + commentStatus +</span><br><span class="line">        &quot;, pingStatus=&quot; + pingStatus +</span><br><span class="line">        &quot;, postPassword=&quot; + postPassword +</span><br><span class="line">        &quot;, postName=&quot; + postName +</span><br><span class="line">        &quot;, toPing=&quot; + toPing +</span><br><span class="line">        &quot;, pinged=&quot; + pinged +</span><br><span class="line">        &quot;, postModified=&quot; + postModified +</span><br><span class="line">        &quot;, postModifiedGmt=&quot; + postModifiedGmt +</span><br><span class="line">        &quot;, postContentFiltered=&quot; + postContentFiltered +</span><br><span class="line">        &quot;, postParent=&quot; + postParent +</span><br><span class="line">        &quot;, guid=&quot; + guid +</span><br><span class="line">        &quot;, menuOrder=&quot; + menuOrder +</span><br><span class="line">        &quot;, postType=&quot; + postType +</span><br><span class="line">        &quot;, postMimeType=&quot; + postMimeType +</span><br><span class="line">        &quot;, commentCount=&quot; + commentCount +</span><br><span class="line">        &quot;&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>dao代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.dao;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.mapper.BaseMapper;</span><br><span class="line">import com.blog.springboot.entity.Posts;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public interface PostsDao extends BaseMapper&lt;Posts&gt; &#123;</span><br><span class="line">    //文章归档</span><br><span class="line">public List&lt;Posts&gt; articleArchive();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>service代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public interface PostsService extends IService&lt;Posts&gt; &#123;</span><br><span class="line">//文章归档</span><br><span class="line">public List&lt;Posts&gt; articleArchive();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实现类:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.service.impl;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.mapper.EntityWrapper;</span><br><span class="line">import com.baomidou.mybatisplus.plugins.Page;</span><br><span class="line">import com.baomidou.mybatisplus.service.impl.ServiceImpl;</span><br><span class="line">import com.blog.springboot.dao.PostsDao;</span><br><span class="line">import com.blog.springboot.entity.Posts;</span><br><span class="line">import com.blog.springboot.service.PostsService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class PostsServiceImpl extends ServiceImpl&lt;PostsDao, Posts&gt; implements PostsService &#123;</span><br><span class="line"></span><br><span class="line">@Autowired</span><br><span class="line">private PostsDao postDao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public List&lt;Posts&gt; articleArchive() &#123;</span><br><span class="line"></span><br><span class="line">return postDao.articleArchive();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>后台Controller:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 文章归档</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">@GetMapping(value=&quot;/articleArchive&quot;)</span><br><span class="line">public JSONObject writePost() &#123;</span><br><span class="line"></span><br><span class="line">List&lt;Posts&gt; post = postService.articleArchive();</span><br><span class="line"></span><br><span class="line">if(!post.isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">json.put(&quot;code&quot;, &quot;000000&quot;);</span><br><span class="line">json.put(&quot;msg&quot;, &quot;获取文章归档&quot;);</span><br><span class="line">json.put(&quot;post&quot;, post);</span><br><span class="line">&#125;else &#123;</span><br><span class="line"></span><br><span class="line">json.put(&quot;code&quot;, &quot;222222&quot;);</span><br><span class="line">json.put(&quot;msg&quot;, &quot;暂无文章归档&quot;);</span><br><span class="line">&#125;</span><br><span class="line">return json;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>前端js实现:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//文章归档</span><br><span class="line">function articleArchive()&#123;</span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url: Blog.url.api.articleArchive,</span><br><span class="line">type: &quot;GET&quot;,</span><br><span class="line">dataType: &apos;json&apos;,</span><br><span class="line">success: function(data) &#123;</span><br><span class="line"></span><br><span class="line">            var rows = &quot;&quot;;</span><br><span class="line">$.each(data.post, function(index, post) &#123;</span><br><span class="line"> var year = post.year+&quot;年&quot;;</span><br><span class="line"> var month = post.month+&quot;月&quot;;</span><br><span class="line"> var date = year + month;</span><br><span class="line"> rows= rows +&quot;&quot;;</span><br><span class="line">                 rows= rows +&quot;&lt;li&gt;&lt;a href=&apos;#&apos;&gt;&quot;+date+&quot;&lt;/a&gt;&lt;/li&gt;&quot;;</span><br><span class="line">                 rows= rows +&quot;&lt;hr/&gt;&quot;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(&quot;#articleArchive&quot;).html(rows);</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">error: function(XMLHttpRequest, textStatus, errorThrown) &#123;</span><br><span class="line"></span><br><span class="line">console.log(XMLHttpRequest.status);</span><br><span class="line"></span><br><span class="line">console.log(XMLHttpRequest.readyState);</span><br><span class="line"></span><br><span class="line">console.log(textStatus);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Caused by: java.sql.SQLException: Value &#39;0000-00-00 00:00:00&#39; can not be represented as java.sql.Timestamp</title>
      <link href="/2019/04/07/Caused-by-java-sql-SQLException-Value-0000-00-00-00-00-00-can-not-be-represented-as-java-sql-Timestamp/"/>
      <url>/2019/04/07/Caused-by-java-sql-SQLException-Value-0000-00-00-00-00-00-can-not-be-represented-as-java-sql-Timestamp/</url>
      
        <content type="html"><![CDATA[<p>错误信息如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.sql.SQLException: Value &apos;0000-00-00 00:00:00&apos; can not be represented as java.sql.Timestamp</span><br></pre></td></tr></table></figure></p><p>原因如下:<br>是因为数据表中字段类型与对象中的属性类型不一致。比如在我的数据表中是datetime类型，正常来说，对象中应该是Date类型，但是本次在对象中却是String类型。</p><p>解决办法:<br>(1)将datetime类型修改为varchar类型，即可解决问题;<br>(2)将Java对象属性类型(对应的那个)改为Date类型(java.util而非java.sql),即可解决问题;</p>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git分支开发的好处</title>
      <link href="/2019/04/06/git%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E7%9A%84%E5%A5%BD%E5%A4%84/"/>
      <url>/2019/04/06/git%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E7%9A%84%E5%A5%BD%E5%A4%84/</url>
      
        <content type="html"><![CDATA[<p>有不少开发者们不习惯使用Git分支开发。原因有如下几个方面?<br>(1)不熟悉不习惯;<br>(2)觉得太麻烦;<br>今天我想说的是使用git分支开发绝对是一个高效版本控制的做法。</p><p>当你遇到测试人员给你提的bug，你只需将其pull下来，并执行git checkout -b bug-solution01该命令即可，这条命令是切换并创建分支，当你切换到创建的分支时，便可以着手解决对应的bug，解决这个bug后，然后执行git checkout master后，再执行git merge bug-solution01该命令合并分支即可。<br>不过在一些中大公司里面，它们并不会通过主分支来合并侧分支，而是有一个开发分支，通过开发分支合并开发者分支，最后通过持续集成使master分支和开发分支合并集成测试部署(其实也是可以手动切换到master分支合并开发分支)等。假设有A、B、C等三个开发者，通常分支的形式是这样:</p><ul><li>主分支(master)</li><li>开发分支(project-dev)</li><li>开发者分支(A开发者分支、B开发者分支、C开发者分支等)</li></ul><p>假设我是开发者A，测试给我提了一个bug，我在A分支的基础上创建一个解决bug分支(暂且命名为a-bug-solution)，当我在a-bug-sllution分支上解决了这个bug并git commit提交到本地仓库后，然后通过git log查看对应的日志(防止提交失败或者其它意外),查看有对应的提交记录后，然后我切换到a-project-dev分支上执行git merge a-bug-solution，合并该分支，合并该分支成功后，然后我再次切换到project-dev分支上，执行git merge a-project-dev进行合并，合并成功后，我就可以不管了，因为剩下的可以交给持续集成工具(jenkins等)。</p><p>上述说起了，大家可能觉得很麻烦或者是没必要这样做，原因可能觉得太耽误时间了，我的回答是非也，一开始可能有点麻烦，越到后面你会越发现它的好处，让你情不自禁地爱上它。</p><p>分支开发的好处，是真正的确保每个人有自己的独立分支而不是全部在master分支上开发，全部在master分支上开发，弊端太多，比如隔离性太差了，而且全部在一个分支上开发的话，经常面临的就是解决冲突(在自己的分支上开发进行合并与全部在一个主分支上开发进行对比，如果代码提交相对频繁，你将会发现你永远都在解决冲突，如果提交缓慢的话，你还是发现在解决冲突，实际上你并不需要解决太多冲突，很多冲突是没有必要的)。</p><p>最后归纳总结一下，分支开发的好处:</p><ul><li>版本迭代更加清晰</li><li>开发效率提升</li><li>利于代码review的实现，从而使整个团队开发更加规范，减少bug率</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>layui之日期和时间组件</title>
      <link href="/2019/04/05/layui%E4%B9%8B%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4%E7%BB%84%E4%BB%B6/"/>
      <url>/2019/04/05/layui%E4%B9%8B%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>参考文档:<a href="https://www.layui.com/doc/modules/laydate.html" target="_blank" rel="noopener">https://www.layui.com/doc/modules/laydate.html</a><br>代码片段如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">layui.use(&apos;laydate&apos;, function()&#123;</span><br><span class="line">  var laydate = layui.laydate;</span><br><span class="line"></span><br><span class="line">  laydate.render(&#123;</span><br><span class="line">    elem: &apos;#createDate&apos;, // 指定元素</span><br><span class="line">    type:&apos;datetime&apos;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>效果图如下:<br><img src="/2019/04/05/layui之日期和时间组件/date01.png" alt=""></p><p>其中type默认值为date(年月日)，有如下几个可选值:</p><p><img src="/2019/04/05/layui之日期和时间组件/date02.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-electron脚手架</title>
      <link href="/2019/04/04/vue-electron%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
      <url>/2019/04/04/vue-electron%E8%84%9A%E6%89%8B%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>vue-electron官方文档(中文):<a href="https://simulatedgreg.gitbooks.io/electron-vue/content/cn" target="_blank" rel="noopener">https://simulatedgreg.gitbooks.io/electron-vue/content/cn</a><br>vue-electron官方文档(英文):<a href="https://simulatedgreg.gitbooks.io/electron-vue/content/en" target="_blank" rel="noopener">https://simulatedgreg.gitbooks.io/electron-vue/content/en</a></p><h2><span id="1脚手架搭建流程步骤">1.脚手架搭建流程步骤</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装 vue-cli 和 脚手架样板代码</span><br><span class="line">npm install -g vue-cli</span><br><span class="line">vue init simulatedgreg/electron-vue my-project</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"># 安装依赖并运行你的程序</span><br><span class="line">cd my-project</span><br><span class="line">yarn # 或者 npm install</span><br><span class="line">yarn run dev # 或者 npm run dev</span><br></pre></td></tr></table></figure><h2><span id="2效果图">2.效果图</span></h2><p><img src="/2019/04/04/vue-electron脚手架/electron.png" alt=""></p><p>注意:<br>(1)环境问题:<br>可以参考我的这篇文章<a href="https://www.cnblogs.com/youcong/p/10230091.html" target="_blank" rel="noopener">VsCode源码编译运行</a><br>环境与其保持一致，基本上就不会出什么问题。</p><p>(2)包管理工具问题:<br>关于npm和yarn，两者都是包的管理工具<br>我用npm install总是在报Error之类的错误，用yarn就好了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Contributions贡献值没有增加</title>
      <link href="/2019/04/03/GitHub-Contributions%E8%B4%A1%E7%8C%AE%E5%80%BC%E6%B2%A1%E6%9C%89%E5%A2%9E%E5%8A%A0/"/>
      <url>/2019/04/03/GitHub-Contributions%E8%B4%A1%E7%8C%AE%E5%80%BC%E6%B2%A1%E6%9C%89%E5%A2%9E%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<p>今天一个同事提交代码到Github上，发现自己的贡献值并没有增加，我从来没有遇到这种情况。<br>问题的原因是因为我的这位同事邮箱设置问题。他是参考如下链接解决的问题。本次做一个记录，说不定我以后也会遇到这种情况或者是我的朋友们。</p><p>参考解决问题:<br>GitHub Contributions贡献值没有增加或者提示提交者的邮箱不对的解决方法:<a href="https://www.jianshu.com/p/f3be25ccd92d" target="_blank" rel="noopener">https://www.jianshu.com/p/f3be25ccd92d</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次layui弹框关闭问题</title>
      <link href="/2019/04/03/%E8%AE%B0%E4%B8%80%E6%AC%A1layui%E5%BC%B9%E6%A1%86%E5%85%B3%E9%97%AD%E9%97%AE%E9%A2%98/"/>
      <url>/2019/04/03/%E8%AE%B0%E4%B8%80%E6%AC%A1layui%E5%BC%B9%E6%A1%86%E5%85%B3%E9%97%AD%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>我在博客园记录过layui关于弹框关闭问题，文章为<a href="https://www.cnblogs.com/youcong/p/10371988.html" target="_blank" rel="noopener">layui关闭弹出层</a>，这次出现了特殊情况，之前是通过<code>layer.closeAll()</code>解决了这个问题，但是这次解决不了。<br>而换成<code>parent.layer.closeAll()</code>问题就迎刃而解。<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js获取select标签选中的值</title>
      <link href="/2019/04/03/js%E8%8E%B7%E5%8F%96select%E6%A0%87%E7%AD%BE%E9%80%89%E4%B8%AD%E7%9A%84%E5%80%BC/"/>
      <url>/2019/04/03/js%E8%8E%B7%E5%8F%96select%E6%A0%87%E7%AD%BE%E9%80%89%E4%B8%AD%E7%9A%84%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<p>两种方式，原生js和jQuery。<br>特别是作为全栈开发工程师，学会使用框架固然重要，但是也要使用的基础上，由浅入深，搞懂原理，这样才能在技术进化迅速的时代立于不败之地。<br>举个例子说明以下，以我这篇文章为例<a href="https://www.cnblogs.com/youcong/p/10503099.html" target="_blank" rel="noopener">node.js之十大Web框架</a>，当你学会Node.js的语法，有过使用Node.js开发几个简单Demo的经验，你会发现这些并不难。但是如果你想深入的理解Node.js，比如VsCode就是在Electron+TypeScript等基础上研发出来，但是Electron 是基于 Chromium 和 Node.js，如果你对Node.js和Chromium毫不了解，自己深入到Electron，注定是要吃亏的。<br><a id="more"></a></p><p>使用原生js获取select标签选中值，源码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;form action=&quot;#&quot;&gt;</span><br><span class="line"> &lt;select id=&quot;test&quot;&gt;</span><br><span class="line"> &lt;option value=&quot;1&quot;&gt;VsCode&lt;/option&gt;</span><br><span class="line">  &lt;option value=&quot;2&quot;&gt;Atorm&lt;/option&gt;</span><br><span class="line"> &lt;/select&gt;</span><br><span class="line"> &lt;input type=&quot;button&quot; value=&quot;测试&quot; onclick=&quot;t1()&quot;&gt;</span><br><span class="line"> &lt;/form&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line"> function t1()&#123;</span><br><span class="line">   var myselect=document.getElementById(&quot;test&quot;);</span><br><span class="line">  var index=myselect.selectedIndex;</span><br><span class="line">  alert(myselect.options[index].value)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>使用jQuery获取select标签选中值，源码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;form action=&quot;#&quot;&gt;</span><br><span class="line"> &lt;select id=&quot;test&quot;&gt;</span><br><span class="line"> &lt;option value=&quot;1&quot;&gt;VsCode&lt;/option&gt;</span><br><span class="line">  &lt;option value=&quot;2&quot;&gt;Atorm&lt;/option&gt;</span><br><span class="line"> &lt;/select&gt;</span><br><span class="line"> &lt;input type=&quot;button&quot; value=&quot;测试&quot; onclick=&quot;t1()&quot;&gt;</span><br><span class="line"> &lt;/form&gt;</span><br><span class="line"> &lt;script src=&quot;jquery-1.8.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line"> function t1()&#123;</span><br><span class="line">   var options=$(&quot;#test option:selected&quot;);</span><br><span class="line">   alert(options.val());//获取value</span><br><span class="line">   alert(options.text());//获取文本</span><br><span class="line">&#125;</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>layui之确认框</title>
      <link href="/2019/04/03/layui%E4%B9%8B%E7%A1%AE%E8%AE%A4%E6%A1%86/"/>
      <url>/2019/04/03/layui%E4%B9%8B%E7%A1%AE%E8%AE%A4%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<p>要使用layui的确认框，需要导入layui的两个库，分别为layer.js和layer.css，除此之外layui.js和layui.css的库也是要导入，这个请注意。<br>所有说你需要分别导入四个库layer.js、layer.css、layui.js、layui.css，四个库多少也会占用带宽，这时你可以使用cdn或者将其放到nginx做缓存也行。<br><a id="more"></a><br>确认框源码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">layui.use(&apos;layer&apos;,function () &#123; </span><br><span class="line"></span><br><span class="line">    layer.confirm(&apos;确认要删除吗？&apos;, &#123;</span><br><span class="line">        btn : [ &apos;确定&apos;, &apos;取消&apos; ]//按钮</span><br><span class="line">    &#125;, function(index) &#123;</span><br><span class="line">    </span><br><span class="line">        layer.close(index);</span><br><span class="line">        //此处请求后台程序，下方是成功后的前台处理……</span><br><span class="line">        var index = layer.load(0,&#123;shade: [0.7, &apos;#393D49&apos;]&#125;, &#123;shadeClose: true&#125;); //0代表加载的风格，支持0-2</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></p><p>应用场景:<br>(1)所有的确认框操作，比如是否删除这样的;<br>(2)退出功能;</p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js读取文件内容并返回值(非异步)</title>
      <link href="/2019/04/02/Node-js%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%80%BC-%E9%9D%9E%E5%BC%82%E6%AD%A5/"/>
      <url>/2019/04/02/Node-js%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%80%BC-%E9%9D%9E%E5%BC%82%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<p>主要解决的问题的，以最近VsCode插件开发为例，每次请求都需要token,而vscode并不支持cookie这样的存储，所以就采用粗暴点办法，存到某个用户目录下并读取。</p><a id="more"></a><p>源码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">var fs=require(&quot;fs&quot;);</span><br><span class="line"></span><br><span class="line"> function getToken(isRelease) &#123;</span><br><span class="line">//是否为正式版本，路径不一样</span><br><span class="line">if (isRelease) &#123;</span><br><span class="line">const scriptSrc = path.dirname(__filename);</span><br><span class="line">const jsName = scriptSrc.split(&apos;\\&apos;);</span><br><span class="line">var i = jsName.length;</span><br><span class="line">var finpath = &quot;&quot;;</span><br><span class="line">for (var j = 0; j &lt; i - 3; j++) &#123;</span><br><span class="line">if (j == 0) &#123;</span><br><span class="line">finpath = jsName[j];</span><br><span class="line">&#125; else &#123;</span><br><span class="line">finpath = finpath + &apos;\\&apos; + jsName[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">finpath = finpath + &apos;\\token.txt&apos;;</span><br><span class="line"></span><br><span class="line">&#125; else &#123; </span><br><span class="line">finpath = &apos;D://Workspace//token//token.txt&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (fs.existsSync(finpath)) &#123; //判断是否存在该文件</span><br><span class="line">try &#123;</span><br><span class="line">let result = fs.readFileSync(finpath);</span><br><span class="line">console.log(result.toString());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">return result.toString();</span><br><span class="line"></span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(getToken());</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot1.5.4 配置druid1.1.0(使用druid-spring-boot-starter)</title>
      <link href="/2019/04/01/springboot1-5-4-%E9%85%8D%E7%BD%AEdruid1-1-0-%E4%BD%BF%E7%94%A8druid-spring-boot-starter/"/>
      <url>/2019/04/01/springboot1-5-4-%E9%85%8D%E7%BD%AEdruid1-1-0-%E4%BD%BF%E7%94%A8druid-spring-boot-starter/</url>
      
        <content type="html"><![CDATA[<h2><span id="一-导入maven依赖">一、导入Maven依赖</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="二-applicationyml配置">二、application.yml配置</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  devtools:</span><br><span class="line">    restart:</span><br><span class="line">      enabled: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  datasource:</span><br><span class="line">    url: ENC(4k7M62ElZmvr2fECvWBXaYqMh5gz5cR4hn7LU2jaAt+Cv0hfWuvEXwpigYjLXZ6W)</span><br><span class="line">    username: ENC(kJXrMwKAoGen2JxTFdtfgw==)</span><br><span class="line">    password: ENC(r7aiV3zZoSqKN36KqE6jiQ6rmfmFt7WE)</span><br><span class="line">    db-name: ENC(5lFd29y9ciI4HwyIX8BAPg==)</span><br><span class="line">    driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">    ###################以下为druid增加的配置###########################</span><br><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">    # 下面为连接池的补充设置，应用到上面所有数据源中</span><br><span class="line">    # 初始化大小，最小，最大</span><br><span class="line">    initialSize: 5</span><br><span class="line">    minIdle: 5</span><br><span class="line">    maxActive: 20</span><br><span class="line">    # 配置获取连接等待超时的时间</span><br><span class="line">    maxWait: 60000</span><br><span class="line">    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span><br><span class="line">    timeBetweenEvictionRunsMillis: 60000</span><br><span class="line">    # 配置一个连接在池中最小生存的时间，单位是毫秒</span><br><span class="line">    minEvictableIdleTimeMillis: 300000</span><br><span class="line">    validationQuery: SELECT 1 FROM DUAL</span><br><span class="line">    testWhileIdle: true</span><br><span class="line">    testOnBorrow: false</span><br><span class="line">    testOnReturn: false</span><br><span class="line">    # 打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">    poolPreparedStatements: true</span><br><span class="line">    maxPoolPreparedStatementPerConnectionSize: 20</span><br><span class="line">    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，&apos;wall&apos;用于防火墙</span><br><span class="line">    filters: stat,wall,log4j</span><br><span class="line">    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span><br><span class="line">    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span><br><span class="line">    # 合并多个DruidDataSource的监控数据</span><br><span class="line">    useGlobalDataSourceStat: true</span><br></pre></td></tr></table></figure><h2><span id="三-效果图">三、效果图</span></h2><p><img src="/2019/04/01/springboot1-5-4-配置druid1-1-0-使用druid-spring-boot-starter/druid.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL去除查询结果重复</title>
      <link href="/2019/03/29/MySQL%E5%8E%BB%E9%99%A4%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E9%87%8D%E5%A4%8D/"/>
      <url>/2019/03/29/MySQL%E5%8E%BB%E9%99%A4%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E9%87%8D%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<p>出现结果重复数SQL(四表关联):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT(post.ID )</span><br><span class="line">FROM wp_posts AS post LEFT JOIN</span><br><span class="line">wp_term_relationships AS relation</span><br><span class="line">ON(post.menu_order =</span><br><span class="line">relation.term_order) LEFT JOIN wp_term_taxonomy</span><br><span class="line">AS taxonomy</span><br><span class="line">ON(relation.term_taxonomy_id = taxonomy.term_id) LEFT JOIN</span><br><span class="line">wp_terms AS</span><br><span class="line">term ON(taxonomy.term_id = term.term_id)</span><br></pre></td></tr></table></figure></p><p>正常的结果应该显示490条数据，但是结果显示了224941。</p><a id="more"></a><p>解决这个办法是在对应的COUNT()里面加上DISTINCT</p><p>DISTINCT这个关键字主要用于过滤掉多余的重复记录只保留一条，但往往只用它来返回不重复记录的条数，而不是用它来返回不重记录的所有值。</p><p>注意:它有局限性，比如吧不能对应多个目标字段，只能对应一个目标字段。</p><p>解决重复结果书的SQL如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT(DISTINCT post.ID)</span><br><span class="line">FROM wp_posts AS post LEFT JOIN</span><br><span class="line">wp_term_relationships AS relation</span><br><span class="line">ON(post.menu_order =</span><br><span class="line">relation.term_order) LEFT JOIN wp_term_taxonomy</span><br><span class="line">AS taxonomy</span><br><span class="line">ON(relation.term_taxonomy_id = taxonomy.term_id) LEFT JOIN</span><br><span class="line">wp_terms AS</span><br><span class="line">term ON(taxonomy.term_id = term.term_id)</span><br></pre></td></tr></table></figure></p><p>参考资料:<br>MySQL中count函数使用方法详解:<a href="https://blog.csdn.net/qq_31135027/article/details/79858184" target="_blank" rel="noopener">https://blog.csdn.net/qq_31135027/article/details/79858184</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04之安装Nutch</title>
      <link href="/2019/03/29/Ubuntu16-04%E4%B9%8B%E5%AE%89%E8%A3%85Nutch/"/>
      <url>/2019/03/29/Ubuntu16-04%E4%B9%8B%E5%AE%89%E8%A3%85Nutch/</url>
      
        <content type="html"><![CDATA[<h2><span id="1下载nutch">1.下载Nutch</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.shu.edu.cn/apache/nutch/2.3.1/apache-nutch-2.3.1-src.zip</span><br></pre></td></tr></table></figure><h2><span id="2解压">2.解压</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip apache-nutch-2.3.1-src.zip</span><br></pre></td></tr></table></figure><h2><span id="3进入apache-nutch-231">3.进入apache-nutch-2.3.1</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd apache-nutch-2.3.1</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="4使用ant编译">4.使用ant编译</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ant</span><br></pre></td></tr></table></figure><p>编译成功，如下(不过需要比较多的时间，大概20分钟左右):<br><img src="/2019/03/29/Ubuntu16-04之安装Nutch/nutch.png" alt=""></p><p>参考资料:<br>Ubuntu环境下搭建nutch环境(包含使用):<a href="https://blog.csdn.net/u010317005/article/details/51090175" target="_blank" rel="noopener">https://blog.csdn.net/u010317005/article/details/51090175</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04之Solr7.7.1环境搭建</title>
      <link href="/2019/03/29/Ubuntu16-04Solr7-7-1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/03/29/Ubuntu16-04Solr7-7-1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Solr的版本一直都在变化(比如之前我在博客园写的关于Linux安装solr，那个solr为7.6版本，此时已经不在了)。<br>大家可以去这个地址下载对应的版本:<a href="http://mirror.bit.edu.cn/apache/lucene/solr/" target="_blank" rel="noopener">http://mirror.bit.edu.cn/apache/lucene/solr/</a><br><a id="more"></a></p><h2><span id="1下载solr我是进入到usrlocal目录下执行这个命令的">1.下载solr(我是进入到/usr/local目录下执行这个命令的)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirror.bit.edu.cn/apache/lucene/solr/7.7.1/solr-7.7.1.tgz</span><br></pre></td></tr></table></figure><h2><span id="2解压">2.解压</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf solr-7.7.1.tgz</span><br></pre></td></tr></table></figure><h2><span id="3进入bin目录执行该脚本">3.进入bin目录执行该脚本</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd solr-7.7.1/bin</span><br><span class="line">./install_solr_service.sh ../../solr-7.7.1.tgz</span><br></pre></td></tr></table></figure><p>如果没有按照3这样做，就可能出现如下报错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Must specify the path to the Solr installation archive, such as solr-5.0.0.tgz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Usage: install_solr_service.sh &lt;path_to_solr_distribution_archive&gt; [OPTIONS]</span><br><span class="line"></span><br><span class="line">  The first argument to the script must be a path to a Solr distribution archive, such as solr-5.0.0.tgz</span><br><span class="line">    (only .tgz or .zip are supported formats for the archive)</span><br><span class="line"></span><br><span class="line">  Supported OPTIONS include:</span><br><span class="line"></span><br><span class="line">    -d     Directory for live / writable Solr files, such as logs, pid files, and index data; defaults to /var/solr</span><br><span class="line"></span><br><span class="line">    -i     Directory to extract the Solr installation archive; defaults to /opt/</span><br><span class="line">             The specified path must exist prior to using this script.</span><br><span class="line"></span><br><span class="line">    -p     Port Solr should bind to; default is 8983</span><br><span class="line"></span><br><span class="line">    -s     Service name; defaults to solr</span><br><span class="line"></span><br><span class="line">    -u     User to own the Solr files and run the Solr process as; defaults to solr</span><br><span class="line">             This script will create the specified user account if it does not exist.</span><br><span class="line"></span><br><span class="line">    -f     Upgrade Solr. Overwrite symlink and init script of previous installation.</span><br><span class="line"></span><br><span class="line">    -n     Do not start Solr service after install, and do not abort on missing Java</span><br><span class="line"></span><br><span class="line"> NOTE: Must be run as the root user</span><br></pre></td></tr></table></figure></p><h2><span id="4成功的标识">4.成功的标识</span></h2><p><img src="/2019/03/29/Ubuntu16-04Solr7-7-1环境搭建/solr.png" alt=""></p><p>接下来就可以通过<a href="http://IP地址:8983" target="_blank" rel="noopener">http://IP地址:8983</a> 访问到solr后台管理界面,如下图所示:<br><img src="/2019/03/29/Ubuntu16-04Solr7-7-1环境搭建/solr_manage.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>org.springframework.jdbc.BadSqlGrammarException</title>
      <link href="/2019/03/28/org-springframework-jdbc-BadSqlGrammarException/"/>
      <url>/2019/03/28/org-springframework-jdbc-BadSqlGrammarException/</url>
      
        <content type="html"><![CDATA[<p>这个错误在MyBatis中实际上很常见，就是SQL写错了。通常通过先在MySQL命令行执行一遍sql看有没有错误，如果有就更改，没有就基本上可以用了。<br>注意，我说的基本上可用并不代代表完全可用，比如今天我就遇到一个非常恶心的问题。<br><a id="more"></a><br>sql代码如下(这句sql经过在mysql命令行中测试，能够获取数据，完全没有问题):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;categoreListInfo&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">SELECT</span><br><span class="line">term.term_id,term.name,</span><br><span class="line">term.slug,tax.taxonomy,tax.description,tax.count FROM wp_terms AS term</span><br><span class="line">LEFT JOIN wp_term_taxonomy AS tax ON(term.term_id=tax.term_id)</span><br><span class="line">&lt;where&gt;</span><br><span class="line">&lt;if test=&quot;name != null or name != &apos;&apos;&quot;&gt;</span><br><span class="line">and term.name like concat(&apos;%&apos;, #&#123;name&#125;, &apos;%&apos;)</span><br><span class="line">&lt;/if&gt;</span><br><span class="line">&lt;if test =&quot;taxonomy != null or  taxonomy !=&apos;&apos;&quot;&gt;</span><br><span class="line">    and tax.taxonomy = #&#123;taxonomy&#125;</span><br><span class="line">&lt;/if&gt;</span><br><span class="line">&lt;/where&gt;</span><br><span class="line">limit #&#123;start&#125;,#&#123;size&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p><p>但是我用如下单元测试就出现了问题，单元测试代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">   @Test</span><br><span class="line">public void testPageListInfo() throws Exception &#123;</span><br><span class="line"></span><br><span class="line">Map&lt;String,Object&gt; paramMap = new HashMap&lt;String,Object&gt;();</span><br><span class="line">paramMap.put(&quot;name&quot;, &quot;&quot;);</span><br><span class="line">paramMap.put(&quot;start&quot;,&quot;0&quot;);</span><br><span class="line">paramMap.put(&quot;size&quot;, &quot;10&quot;);</span><br><span class="line">paramMap.put(&quot;taxonomy&quot;, &quot;post_tag&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">List&lt;Terms&gt; list = termService.categoreListInfo(paramMap);</span><br><span class="line"></span><br><span class="line">int count = termService.categoryTotalCount(paramMap);</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;总数:&quot;+count);</span><br><span class="line"></span><br><span class="line">for (Terms terms : list) &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;terms:&quot;+terms.getName());</span><br><span class="line"></span><br><span class="line">List&lt;TermTaxonomy&gt; taxList = terms.getTax();</span><br><span class="line"></span><br><span class="line">for (TermTaxonomy termTaxonomy : taxList) &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;tax:&quot;+termTaxonomy.getDescription()+&quot;||&quot;+termTaxonomy.getTaxonomy());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>单元测试并没有写错，错的是参数问题，关键点是这个:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">paramMap.put(&quot;start&quot;,&quot;0&quot;);</span><br><span class="line">paramMap.put(&quot;size&quot;, &quot;10&quot;);</span><br></pre></td></tr></table></figure></p><p>在mysql中limit两个参数实际为int类型，非字符串，而我此时在此传字符串，所以就出现org.springframework.jdbc.BadSqlGrammarException,说sql有问题。</p><p>所以大家切记在命令行执行sql以后，千万别掉以轻心，还是要细心，否则不必要的错误非常让人糟心。</p>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>org.xml.sax.SAXParseException;在实体引用中, 实体名称必须紧跟在 &#39;&amp;&#39; 后面</title>
      <link href="/2019/03/28/org-xml-sax-SAXParseException-%E5%9C%A8%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8%E4%B8%AD-%E5%AE%9E%E4%BD%93%E5%90%8D%E7%A7%B0%E5%BF%85%E9%A1%BB%E7%B4%A7%E8%B7%9F%E5%9C%A8-%E5%90%8E%E9%9D%A2/"/>
      <url>/2019/03/28/org-xml-sax-SAXParseException-%E5%9C%A8%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8%E4%B8%AD-%E5%AE%9E%E4%BD%93%E5%90%8D%E7%A7%B0%E5%BF%85%E9%A1%BB%E7%B4%A7%E8%B7%9F%E5%9C%A8-%E5%90%8E%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>错误信息如下:<br>org.xml.sax.SAXParseException;在实体引用中, 实体名称必须紧跟在 ‘’&amp;’’ 后面</p><p>出现这个错误的原因是在xml中使用&amp;，实际上xml中不支持这种方式，&amp;其实是并列的意思，如果要在xml中使用&amp;，需要将其改为英文 and才能使用。<br><a id="more"></a><br>问题代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;categoreListInfo&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">SELECT</span><br><span class="line">term.term_id,term.name,</span><br><span class="line">term.slug,tax.taxonomy,tax.description,tax.count FROM wp_terms AS term</span><br><span class="line">LEFT JOIN wp_term_taxonomy AS tax ON(term.term_id=tax.term_id)</span><br><span class="line">&lt;where&gt;</span><br><span class="line">&lt;if test=&quot;name != null &amp; name != &apos;&apos;&quot;&gt;</span><br><span class="line">and term.name like concat(&apos;%&apos;, #&#123;name&#125;, &apos;%&apos;)</span><br><span class="line">&lt;/if&gt;</span><br><span class="line">&lt;if test =&quot;taxonomy != null &amp; taxonomy !=&apos;&apos;&quot;&gt;</span><br><span class="line">    and tax.taxonomy = #&#123;taxonomy&#125;</span><br><span class="line">&lt;/if&gt;</span><br><span class="line">&lt;/where&gt;</span><br><span class="line">limit #&#123;start&#125;,#&#123;size&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p><p>将代码中的&amp;条件改为and即可</p><p>参考资料:<br>【java】org.xml.sax.SAXParseException;在实体引用中, 实体名称必须紧跟在 ‘&amp;’ 后面。解决方法:<a href="https://blog.csdn.net/demon_ll/article/details/78542356" target="_blank" rel="noopener">https://blog.csdn.net/demon_ll/article/details/78542356</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让Node.js运行在浏览器端</title>
      <link href="/2019/03/28/%E5%A6%82%E4%BD%95%E8%AE%A9Node-js%E8%BF%90%E8%A1%8C%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AB%AF/"/>
      <url>/2019/03/28/%E5%A6%82%E4%BD%95%E8%AE%A9Node-js%E8%BF%90%E8%A1%8C%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>Node.js又称服务端JavaScript。<br>今天我为了解决一个问题，通过搜索引擎找到了如何将Node.js转成浏览器端可以运行的javascript。<br>尽管这种方式有其局限性，但是还是可以用的。<br><a id="more"></a></p><h2><span id="1安装库">1.安装库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g browserify</span><br></pre></td></tr></table></figure><h2><span id="2转换">2.转换</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">browserify test.js &gt; index.js</span><br><span class="line">或</span><br><span class="line"> browserify test &gt; index.js</span><br><span class="line">或</span><br><span class="line">browserify test.js -o index.js</span><br></pre></td></tr></table></figure><p>以上三种方式均可行</p><p>参考资料:<br>如何让nodejs写的代码在浏览器里面运行:<a href="https://jingyan.baidu.com/article/48b37f8dda4cb11a646488b9.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/48b37f8dda4cb11a646488b9.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04安装和使用ElasticSearch</title>
      <link href="/2019/03/28/Ubuntu16-04%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8ElasticSearch/"/>
      <url>/2019/03/28/Ubuntu16-04%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8ElasticSearch/</url>
      
        <content type="html"><![CDATA[<h2><span id="1下载es">1.下载es</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.4.4/elasticsearch-2.4.4.tar.gz</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="2解压并将其放到usrlocal目录下">2.解压并将其放到/usr/local目录下</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf elasticsearch-2.4.4.tar.gz -C /usr/local</span><br><span class="line">cd /usr/local/elasticsearch-2.4.4</span><br></pre></td></tr></table></figure><h2><span id="3修改es配置文件">3.修改es配置文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd config</span><br><span class="line">vim elasticsearch.yml</span><br></pre></td></tr></table></figure><p>在elasticsearch.yml添加如下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bootstrap.memory_lock: true</span><br><span class="line">index.cache.field.max_size: 50000</span><br><span class="line">index.cache.field.expire: 30m</span><br><span class="line">index.cache.field.type: soft</span><br><span class="line"></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"></span><br><span class="line">action.disable_delete_all_indices : true</span><br></pre></td></tr></table></figure></p><h2><span id="4启动">4.启动</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd ../bin</span><br><span class="line"></span><br><span class="line">//直接启动ElasticSearch</span><br><span class="line">./elasticsearch </span><br><span class="line"></span><br><span class="line">//或者使用后台方式进行启动</span><br><span class="line">./elasticsearch -d</span><br></pre></td></tr></table></figure><h2><span id="查看端口占用">查看端口占用</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp|grep 9200 或lsof -i:9200 //看该进程是否正常运行</span><br></pre></td></tr></table></figure><p>出现的问题:<br>Exception in thread “main” Java.lang.RuntimeException: don’t run elasticsearch as root.<br>at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93)<br>at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144)<br>at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:270)<br>at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35)</p><p>解决办法一:<br>添加用户并授权<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user add test</span><br><span class="line">chown -R test /usr/local/elasticsearch-2.4.4</span><br></pre></td></tr></table></figure></p><p>解决办法二:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./elasticsearch -Des.insecure.allow.root=true</span><br><span class="line">或者</span><br><span class="line">vi elasticsearch</span><br><span class="line"></span><br><span class="line">// 找到ES_JAVA_OPTS在其后追加</span><br><span class="line">ES_JAVA_OPTS=&quot;-Des.insecure.allow.root=true&quot;</span><br></pre></td></tr></table></figure></p><p>本人建议使用第一种方法，因为最好不要习惯用root用户，否则一旦不慎执行某些操作，后果很严重。</p><h2><span id="5网站访问">5.网站访问</span></h2><p><a href="http://IP地址:9200" target="_blank" rel="noopener">http://IP地址:9200</a><br>出现如图所示:<br><img src="/2019/03/28/Ubuntu16-04安装和使用ElasticSearch/es.png" alt=""></p><p>参考资料:<br>【Linux进阶】Ubuntu 16.04安装ElasticSearch:<a href="https://blog.csdn.net/u011404265/article/details/72870166" target="_blank" rel="noopener">https://blog.csdn.net/u011404265/article/details/72870166</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VsCode云端版本</title>
      <link href="/2019/03/27/VsCode%E4%BA%91%E7%AB%AF%E7%89%88%E6%9C%AC/"/>
      <url>/2019/03/27/VsCode%E4%BA%91%E7%AB%AF%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>VsCode的云端版与客户端简直是一模一样。</p><p>官网地址为:<a href="https://coder.com/" target="_blank" rel="noopener">https://coder.com/</a><br><a id="more"></a><br>安装命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -p 127.0.0.1:8443:8443 -v &quot;$&#123;PWD&#125;:/root/project&quot; codercom/code-server code-server --allow-http --no-auth</span><br></pre></td></tr></table></figure></p><p>注意安装的前提是要先安装docker，否则不能使用该命令。<br>如果你要远程访问请将127.0.0.1改为0.0.0.0即可<br>Ubuntu16.04安装docker十分容易，一条命令，如sudo apt-get install docker.io</p><p>VsCode云端版本展示效果图如下:<br><img src="/2019/03/27/VsCode云端版本/vscode.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> VsCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>普通用户使用Docker</title>
      <link href="/2019/03/27/%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8Docker/"/>
      <url>/2019/03/27/%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8Docker/</url>
      
        <content type="html"><![CDATA[<h2><span id="1查询是否有docker组">1.查询是否有docker组：</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/group</span><br></pre></td></tr></table></figure><p>如果没有可以通过该命令添加(一般默认是有的)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h2><span id="2将当前用户添加到docker组">2.将当前用户添加到docker组</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -G docker $(USER)</span><br></pre></td></tr></table></figure><p>例如:sudo usermod -G docker test</p><h2><span id="3重启docker服务">3.重启docker服务</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker.service</span><br></pre></td></tr></table></figure><p>参考资料如下:<br>普通用户使用Docker:<a href="https://blog.csdn.net/qq_36713450/article/details/83109477" target="_blank" rel="noopener">https://blog.csdn.net/qq_36713450/article/details/83109477</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装MySQL并配置远程访问</title>
      <link href="/2019/03/27/Docker%E5%AE%89%E8%A3%85MySQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
      <url>/2019/03/27/Docker%E5%AE%89%E8%A3%85MySQL%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h2><span id="1docker-search-mysql-查看mysql版本">1.docker search mysql   查看mysql版本</span></h2><h2><span id="2docker-pull-mysql-要选择starts最高的那个name-进行下载">2.docker pull mysql  要选择starts最高的那个name 进行下载</span></h2><h2><span id="3docker-images-查看下载好的镜像">3.docker images  查看下载好的镜像</span></h2><h2><span id="4启动mysql实例">4.启动mysql实例</span></h2><p> docker run –name dockermysql  -p 3307:3306 -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql</p><pre><code>--name 为mysql的实例设置别名。 -p 3307为对外暴露的端口。3306是内部端口 -e MYSQL_ROOT_PASSWORD 设置mysql登录密码  -d 以守护进程运行（后台运行） 最后的mysql是镜像名称</code></pre><h2><span id="5-docker-ps-a-查看在运行的">5. docker ps -a 查看在运行的</span></h2><h2><span id="6-docker-exec-it-dockermysql-bash-进入容器内部-dockermysql-是上边运行时为容器取的别名-也可以用id替代">6. docker exec -it dockermysql bash     进入容器内部  dockermysql 是上边运行时为容器取的别名 也可以用id替代</span></h2><p> 另外进入容器后，你如果想要使用vim或vi编辑文件，请先执行apt install vim安装对应的库，否则会出现command not found这样的错误提示</p><h2><span id="7mysql-u-root-p-然后直接输入密码即可-密码是在运行时设置的">7.mysql -u root -p      然后直接输入密码即可 密码是在运行时设置的</span></h2><h2><span id="8grant-all-privileges-on-to-root-给用于授予权限">8.grant all privileges on <em>.</em>  to ‘root‘@’%’ ;   给用于授予权限</span></h2><p> GRANT ALL PRIVILEGES ON <em>.</em>  ‘root’@’%’ identified by ‘123123’ WITH GRANT OPTION;  这是网上流传较多的写法。实际上会报错的(本人试验了确实报错，比如像mysql5.7以下的通常是好使的，像现在比较高的版本就不好使了,比如我这个版本是8.0.15)</p><a id="more"></a><h2><span id="9flush-privileges-刷新权限">9.flush privileges;  刷新权限</span></h2><p>遇见一个错误mysql 1251</p><p>解决办法按照如下做法即可解决，然后就可以利用mysql客户端(如sqlyog或其它工具)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos; PASSWORD EXPIRE NEVER; #修改加密规则 </span><br><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;password&apos;; #更新一下用户的密码 </span><br><span class="line">FLUSH PRIVILEGES; #刷新权限</span><br></pre></td></tr></table></figure></p><p>‘root’   为你自己定义的用户名</p><p>‘localhost’ 指的是用户开放的IP，可以是’localhost’(仅本机访问，相当于127.0.0.1)，可以是具体的’<em>.</em>.<em>.</em>‘(具体某一IP)，也可以是 ‘%’ (所有IP均可访问)</p><p>‘password’ 是你想使用的用户密码</p><p>参考资料:<br>docker部署mysql 实现远程连接:<a href="https://blog.csdn.net/weixin_42459563/article/details/80924634" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42459563/article/details/80924634</a><br>Navicat连接Mysql8.0.11出现1251错误:<a href="https://blog.csdn.net/qq_36068954/article/details/80175755" target="_blank" rel="noopener">https://blog.csdn.net/qq_36068954/article/details/80175755</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js之mysql增删改查</title>
      <link href="/2019/03/27/Node-js%E4%B9%8Bmysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
      <url>/2019/03/27/Node-js%E4%B9%8Bmysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2><span id="1安装库">1.安装库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mysql</span><br></pre></td></tr></table></figure><h2><span id="2编写dbjs用作公共模块">2.编写db.js(用作公共模块)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//连接MySQL数据库</span><br><span class="line">var mysql = require(&quot;mysql&quot;);</span><br><span class="line"></span><br><span class="line">var pool = mysql.createPool(&#123;</span><br><span class="line">    host:&quot;127.0.0.1&quot;,</span><br><span class="line">    user:&quot;root&quot;,</span><br><span class="line">    password:&quot;123456&quot;,</span><br><span class="line">    database:&quot;wordpress&quot;,</span><br><span class="line">port:3306</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function query(sql,callback)&#123;</span><br><span class="line">    pool.getConnection(function(err,connection)&#123;</span><br><span class="line">        connection.query(sql, function (err,rows) &#123;</span><br><span class="line">            callback(err,rows);</span><br><span class="line">            connection.release();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exports.query = query;</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="3编写userjs与数据库交互并对外开放接口">3.编写user.js(与数据库交互并对外开放接口)</span></h2><p>顺便说下req.params、req.body、req.query的应用</p><p>req.body通常用于解析post请求数据</p><p>req.query通常用于解析get请求数据,如<a href="http://wwww.youcongtech.com/blog/user?username=youcong" target="_blank" rel="noopener">http://wwww.youcongtech.com/blog/user?username=youcong</a></p><p>req.params通常用于解析rest请求方式，如<a href="http://www.youcongtech.com/blog/user/youcong" target="_blank" rel="noopener">http://www.youcongtech.com/blog/user/youcong</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line">var router = express.Router();</span><br><span class="line">var URL = require(&apos;url&apos;);</span><br><span class="line">var db = require(&apos;./db&apos;);</span><br><span class="line">var jsonData = require(&apos;./jsonData&apos;);</span><br><span class="line">var bodyParser = require(&apos;body-parser&apos;);</span><br><span class="line"></span><br><span class="line">//定义一个post输出接口</span><br><span class="line">router.post(&apos;/post&apos;, function(req, res) &#123;</span><br><span class="line"></span><br><span class="line">    var obj = &#123;</span><br><span class="line">        a: 1,</span><br><span class="line">        b: 2</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    res.json(obj); //以json格式输出</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//增删改查</span><br><span class="line"></span><br><span class="line">//查询所有信息</span><br><span class="line">router.get(&apos;/queryAll&apos;, function(req, res, next) &#123;</span><br><span class="line">    </span><br><span class="line">  var userLogin = req.userLogin</span><br><span class="line">  </span><br><span class="line">  var querySql = &apos;SELECT * FROM wp_users&apos;;</span><br><span class="line">  </span><br><span class="line">  db.query(querySql,function (err, rows) &#123;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">        if(err)&#123;</span><br><span class="line">          console.log(&apos;[SELECT ERROR] - &apos;,err.message);</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //把搜索值输出</span><br><span class="line">       res.send(rows);</span><br><span class="line">   console.log(&apos;The solution is: &apos;, rows[0].ID);</span><br><span class="line">   </span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//添加用户信息</span><br><span class="line">router.post(&quot;/add&quot;,function(req,res)&#123;</span><br><span class="line">var params = URL.parse(req.url, true).query;</span><br><span class="line">  </span><br><span class="line">var addSql = &quot;INSERT INTO wp_users (user_login) VALUES(&apos;&quot;+params.userLogin+&quot;&apos;)&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    var addSqlParams = [params.userLogin];</span><br><span class="line"> </span><br><span class="line"> db.query(addSql,function(err,rows)&#123;</span><br><span class="line">        if(err)&#123;</span><br><span class="line">            res.send(&quot;添加失败 &quot; + err);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            res.send(jsonData.addInfo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//更新用户信息</span><br><span class="line">router.put(&quot;/update&quot;,function(req,res,next)&#123;</span><br><span class="line"> </span><br><span class="line"> var params = URL.parse(req.url, true).query;</span><br><span class="line"> </span><br><span class="line"> var displayName = params.displayName;</span><br><span class="line"> </span><br><span class="line"> var id = params.id;</span><br><span class="line"></span><br><span class="line"> var sql = &quot;update wp_users set display_name = &apos;&quot;+ displayName +&quot;&apos; where ID = &quot; + id;</span><br><span class="line"> </span><br><span class="line">  db.query(sql,function(err,rows)&#123;</span><br><span class="line">        if(err)&#123;</span><br><span class="line">            res.send(&quot;修改失败 &quot; + err);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            res.send(jsonData.updateInfo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//根据ID获取用户信息</span><br><span class="line">router.get(&quot;/getById/:id&quot;,function(req,res)&#123;</span><br><span class="line"></span><br><span class="line">var id = req.params.id;</span><br><span class="line"></span><br><span class="line">var sql = &apos;select * from wp_users where ID = &apos;+id;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   db.query(sql,function (err, result) &#123;</span><br><span class="line">  </span><br><span class="line">        if(err)&#123;</span><br><span class="line">          console.log(&apos;[SELECT ERROR] - &apos;,err.message);</span><br><span class="line">          return;</span><br><span class="line">        &#125;   </span><br><span class="line"></span><br><span class="line">   console.log(result);</span><br><span class="line">   res.send(result);</span><br><span class="line">   </span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//删除用户信息</span><br><span class="line">router.delete(&apos;/delete/:id&apos;, function(req, res, next) &#123;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"> var id = req.params.id;</span><br><span class="line">  </span><br><span class="line">  var delSql = &apos;delete from wp_users where id = &apos;+id;</span><br><span class="line">  </span><br><span class="line">  db.query(delSql,function (err, result) &#123;</span><br><span class="line">  </span><br><span class="line">        if(err)&#123;</span><br><span class="line">          console.log(&apos;[INSERT ERROR] - &apos;,err.message);</span><br><span class="line">          return;</span><br><span class="line">        &#125;   </span><br><span class="line">    res.send(jsonData.deleteInfo);</span><br><span class="line">   </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module.exports = router;</span><br></pre></td></tr></table></figure><h2><span id="4不要忘记在appjs配置路由">4.不要忘记在app.js配置路由</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var usersRouter = require(&apos;./routes/users&apos;);</span><br><span class="line"></span><br><span class="line">app.use(&apos;/users&apos;, usersRouter);</span><br></pre></td></tr></table></figure><p>参考资料如下:<br>node.js取参四种方法req.body,req.params,req.param,req.body:<a href="https://www.cnblogs.com/jkingdom/p/8065202.html" target="_blank" rel="noopener">https://www.cnblogs.com/jkingdom/p/8065202.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js获取时间</title>
      <link href="/2019/03/27/node-js%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4/"/>
      <url>/2019/03/27/node-js%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<h2><span id="1nodejs安装时间库">1.Node.js安装时间库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g silly-datetime 或 npm install silly-datetime</span><br></pre></td></tr></table></figure><h2><span id="2使用代码">2.使用代码</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var sd = require(&apos;silly-datetime&apos;);</span><br><span class="line">var time=sd.format(new Date(), &apos;YYYY-MM-DD HH:mm&apos;);</span><br><span class="line">console.log(time);</span><br></pre></td></tr></table></figure><p>展示效果如下:<br><img src="/2019/03/27/node-js获取时间/date.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js api文档生成</title>
      <link href="/2019/03/25/node-js-api%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90/"/>
      <url>/2019/03/25/node-js-api%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>ApiDoc官网地址为:<a href="http://apidocjs.com/" target="_blank" rel="noopener">http://apidocjs.com/</a><br>在Java中有Swagger及其升级版的Swagger2+Springfox自动生成接口管理文档。而在Node.js中则可以利用ApiDoc生成接口文档。<br><a id="more"></a><br>参考官网其实步骤，也很简单，也就如下几步。</p><h2><span id="一-安装库">一、安装库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i apidoc -g   #全局安装</span><br></pre></td></tr></table></figure><h2><span id="二-配置packagejson">二、配置package.json</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;mock-github-api&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;Mock API server for Github&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">    &quot;start&quot;: &quot;node index&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;repository&quot;: &#123;</span><br><span class="line">    &quot;type&quot;: &quot;git&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;https://github.com/mzabriskie/mock-github-api&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;Matt Zabriskie&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;MIT&quot;,</span><br><span class="line">  &quot;bugs&quot;: &#123;</span><br><span class="line">    &quot;url&quot;: &quot;https://github.com/mzabriskie/mock-github-api/issues&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;homepage&quot;: &quot;https://github.com/mzabriskie/mock-github-api&quot;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;@octokit/app&quot;: &quot;^2.2.1&quot;,</span><br><span class="line">    &quot;apidoc&quot;: &quot;^0.17.7&quot;,</span><br><span class="line">    &quot;color&quot;: &quot;^0.11.3&quot;,</span><br><span class="line">    &quot;connect-multiparty&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">    &quot;cors&quot;: &quot;^2.7.1&quot;,</span><br><span class="line">    &quot;cos-nodejs-sdk-v5&quot;: &quot;^2.5.6&quot;,</span><br><span class="line">    &quot;express&quot;: &quot;^4.14.0&quot;,</span><br><span class="line">    &quot;faker&quot;: &quot;^3.1.0&quot;,</span><br><span class="line">    &quot;https&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;multer&quot;: &quot;^1.4.1&quot;,</span><br><span class="line">    &quot;multiparty&quot;: &quot;^4.2.1&quot;,</span><br><span class="line">    &quot;mysql&quot;: &quot;^2.16.0&quot;,</span><br><span class="line">    &quot;octokit&quot;: &quot;^1.0.0-hello-world&quot;,</span><br><span class="line">    &quot;redis&quot;: &quot;^2.8.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">&quot;apidoc&quot;: &#123;  </span><br><span class="line">    &quot;title&quot;: &quot;接口文档&quot;, </span><br><span class="line">    &quot;url&quot;: &quot;http://localhost:3000&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="三-在public目录下创建apidoc目录">三、在public目录下创建apidoc目录</span></h2><h2><span id="四-使用命令生成apidoc文档">四、使用命令生成apidoc文档</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apidoc -i routes/ -o public/apidoc/</span><br></pre></td></tr></table></figure><p>访问地址:<a href="http://localhost:3000/apidoc/index.html" target="_blank" rel="noopener">http://localhost:3000/apidoc/index.html</a><br>效果图如下所示:<br><img src="/2019/03/25/node-js-api文档生成/api.png" alt=""></p><p>源码地址为:<a href="https://github.com/developers-youcong/mock-github-api" target="_blank" rel="noopener">https://github.com/developers-youcong/mock-github-api</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON.stringify()和JSON.parse()的作用</title>
      <link href="/2019/03/22/JSON-stringify-%E5%92%8CJSON-parse-%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
      <url>/2019/03/22/JSON-stringify-%E5%92%8CJSON-parse-%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>(1)JSON.stringify() 从一个对象中解析出字符串</p><p>JSON.stringify({“a”:”1”,”b”:”2”})</p><p>结果是：”{“a”:”1”,”b”:”2”}”</p><p>(2)JSON.parse()从一个字符串中解析出JSON对象</p><p>var str = ‘{“a”:”1”,”b”:”2”}’;</p><p>JSON.parse(str);</p><p>结果是：Object{a:”1”,b:”2”}</p><p>应用场景:</p><p>针对(1)，比如后台Java对应的RequestMapping参数列表中的参数为一个对象时，前台多个传输需要经过JSON.stringify()处理，否则会出现参数解析异常。</p><p>针对(2)，比如向后台请求，后台返回一大堆字符串，这时前台页面渲染需要将其以对象的形式展现，这时可以用到JSON.parse()。</p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql备份命令</title>
      <link href="/2019/03/21/mysql%E5%A4%87%E4%BB%BD%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/03/21/mysql%E5%A4%87%E4%BB%BD%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>mysql备份命令如下:<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">备份多个数据库可以使用如下命令:</span><br><span class="line">mysqldump -uroot -p123456 --databases test1 test2 test3 &gt; /home/test/dump.sql;</span><br><span class="line"></span><br><span class="line">恢复备份:</span><br><span class="line">source dump.sql 在mysql命令行中输入该命令即可恢复</span><br><span class="line"></span><br><span class="line">备份整个数据库:</span><br><span class="line"> mysqldump -uroot -123456 -A &gt; all.sql</span><br><span class="line"></span><br><span class="line">备份整个数据库结构:</span><br><span class="line"> mysqldump -uroot -p123456 -P3306 -A -d &gt; all_002.sql</span><br><span class="line"> </span><br><span class="line">备份单个数据库结构及其数据</span><br><span class="line">mysqldump -uroot -p123456 -P3306 test &gt; all_003.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">备份单个数据库结构及其数据</span><br><span class="line">mysqldump -uroot -p123456 -P3306 test -d &gt; all_004.sql</span><br><span class="line">备份单个数据库数据</span><br><span class="line">mysqldump -uroot -p123456 -P3306 test -t &gt; all_005.sql</span><br></pre></td></tr></table></figure></p><p>通常情况下，备份数据库的结构和数据，在实际生产环境中用的比较多，对于大数据时代而言，数据是至关重要的，通过数据分析便可发现用户某些行为，从而开辟市场</p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js获取访问IP、地区、、当前操作浏览器</title>
      <link href="/2019/03/21/js%E8%8E%B7%E5%8F%96%E8%AE%BF%E9%97%AEIP%E3%80%81%E5%9C%B0%E5%8C%BA%E3%80%81%E3%80%81%E5%BD%93%E5%89%8D%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
      <url>/2019/03/21/js%E8%8E%B7%E5%8F%96%E8%AE%BF%E9%97%AEIP%E3%80%81%E5%9C%B0%E5%8C%BA%E3%80%81%E3%80%81%E5%BD%93%E5%89%8D%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>js获取IP、地区、当前操作浏览器有什么用呢？</p><p>我的回答是用处很多，比如现在的异地登录和对用户常用浏览器做数据分析等。</p><a id="more"></a><p>源代码如下:<br>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;http://pv.sohu.com/cityjson?ie=utf-8&quot;&gt;&lt;/script&gt; </span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;  </span><br><span class="line">        document.write(&apos;IP地址:&apos; + returnCitySN[&quot;cip&quot;] + &apos;, CID:&apos; + returnCitySN[&quot;cid&quot;] + &apos;, 地区:&apos; + returnCitySN[&quot;cname&quot;]+&quot;,浏览器版本:&quot;+getBrowserInfo());</span><br><span class="line"></span><br><span class="line">function getBrowserInfo()</span><br><span class="line">&#123;</span><br><span class="line">    var agent = navigator.userAgent.toLowerCase() ;</span><br><span class="line"></span><br><span class="line">    var regStr_ie = /msie [\d.]+;/gi ;</span><br><span class="line">    var regStr_ff = /firefox\/[\d.]+/gi</span><br><span class="line">    var regStr_chrome = /chrome\/[\d.]+/gi ;</span><br><span class="line">    var regStr_saf = /safari\/[\d.]+/gi ;</span><br><span class="line">    </span><br><span class="line">    //IE</span><br><span class="line">    if(agent.indexOf(&quot;msie&quot;) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return agent.match(regStr_ie) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //firefox</span><br><span class="line">    if(agent.indexOf(&quot;firefox&quot;) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return agent.match(regStr_ff) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //Chrome</span><br><span class="line">    if(agent.indexOf(&quot;chrome&quot;) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return agent.match(regStr_chrome) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //Safari</span><br><span class="line">    if(agent.indexOf(&quot;safari&quot;) &gt; 0 &amp;&amp; agent.indexOf(&quot;chrome&quot;) &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return agent.match(regStr_saf) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>展示效果如下:<br><img src="/2019/03/21/js获取访问IP、地区、、当前操作浏览器/js01.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Uncaught ReferenceError: layer is not defined</title>
      <link href="/2019/03/19/Uncaught-ReferenceError-layer-is-not-defined/"/>
      <url>/2019/03/19/Uncaught-ReferenceError-layer-is-not-defined/</url>
      
        <content type="html"><![CDATA[<p>错误详细信息,如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught ReferenceError: layer is not defined&apos;</span><br></pre></td></tr></table></figure></p><p>关键词就是not defined 未定义，那么解决方案就是给它定义。<br><a id="more"></a><br>原来的问题代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">layer.confirm(&apos;确认要退出吗？&apos;, &#123;</span><br><span class="line">           btn : [ &apos;确定&apos;, &apos;取消&apos; ]//按钮</span><br><span class="line">       &#125;, function(index) &#123;</span><br><span class="line">       </span><br><span class="line">           layer.close(index);</span><br><span class="line">           //此处请求后台程序，下方是成功后的前台处理……</span><br><span class="line">           var index = layer.load(0,&#123;shade: [0.7, &apos;#393D49&apos;]&#125;, &#123;shadeClose: true&#125;); //0代表加载的风格，支持0-2</span><br><span class="line">           </span><br><span class="line">           delete_cookie(&quot;userId&quot;, &quot;/&quot;);</span><br><span class="line"></span><br><span class="line">        window.location.href = &quot;index.html&quot;;</span><br><span class="line"></span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure></p><p>这样在我的博客首页是可以生效的，不会出现未定义。但是当我将其抽象为一个函数的时候，其它地方就不行了。</p><p>通过声明定义后，代码就变成如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">layui.use(&apos;layer&apos;,function () &#123; </span><br><span class="line">       </span><br><span class="line">       layer.confirm(&apos;确认要退出吗？&apos;, &#123;</span><br><span class="line">           btn : [ &apos;确定&apos;, &apos;取消&apos; ]//按钮</span><br><span class="line">       &#125;, function(index) &#123;</span><br><span class="line">       </span><br><span class="line">           layer.close(index);</span><br><span class="line">           //此处请求后台程序，下方是成功后的前台处理……</span><br><span class="line">           var index = layer.load(0,&#123;shade: [0.7, &apos;#393D49&apos;]&#125;, &#123;shadeClose: true&#125;); //0代表加载的风格，支持0-2</span><br><span class="line">           </span><br><span class="line">           delete_cookie(&quot;userId&quot;, &quot;/&quot;);</span><br><span class="line"></span><br><span class="line">        window.location.href = &quot;index.html&quot;;</span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line">       </span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure></p><p>当时我在想引入layer.js来解决这个问题，但是仔细一看这并不是问题的关键所在。<br>解决问题，在于更好的理解问题，当然了，把握关键词也是很重要的(事半功倍)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Error: listen EADDRINUSE :::3000</title>
      <link href="/2019/03/19/Error-listen-EADDRINUSE-3000/"/>
      <url>/2019/03/19/Error-listen-EADDRINUSE-3000/</url>
      
        <content type="html"><![CDATA[<p>错误详细信息如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">events.js:183</span><br><span class="line"></span><br><span class="line">      throw er; // Unhandled &apos;error&apos; event</span><br><span class="line"></span><br><span class="line">      ^</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Error: listen EADDRINUSE :::3000</span><br><span class="line"></span><br><span class="line">    at Server.setupListenHandle [as _listen2] (net.js:1360:14)</span><br><span class="line"></span><br><span class="line">    at listenInCluster (net.js:1401:12)</span><br><span class="line"></span><br><span class="line">    at Server.listen (net.js:1485:7)</span><br><span class="line"></span><br><span class="line">    at Function.listen (E:\VsCode\mock-github-api\node_modules\express\lib\appli                                                                                                                                  cation.js:618:24)</span><br><span class="line"></span><br><span class="line">    at Object.&lt;anonymous&gt; (E:\VsCode\mock-github-api\index.js:180:5)</span><br><span class="line"></span><br><span class="line">    at Module._compile (module.js:653:30)</span><br><span class="line"></span><br><span class="line">    at Object.Module._extensions..js (module.js:664:10)</span><br><span class="line"></span><br><span class="line">    at Module.load (module.js:566:32)</span><br><span class="line"></span><br><span class="line">    at tryModuleLoad (module.js:506:12)</span><br><span class="line"></span><br><span class="line">    at Function.Module._load (module.js:498:3)</span><br><span class="line"></span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line"></span><br><span class="line">npm ERR! errno 1</span><br><span class="line"></span><br><span class="line">npm ERR! mock-github-api@1.0.0 start: `node index`</span><br><span class="line"></span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line"></span><br><span class="line">npm ERR!</span><br><span class="line"></span><br><span class="line">npm ERR! Failed at the mock-github-api@1.0.0 start script.</span><br><span class="line"></span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional log                                                                                                                                  ging output above.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line"></span><br><span class="line">npm ERR!     D:\Program Files\nodejs\node_cache\_logs\2019-03-19T06_44_19_978Z-d                                                                                                                                  ebug.log</span><br></pre></td></tr></table></figure><a id="more"></a><p>关键信息:listen EADDRINUSE :::3000</p><p>其实就是端口被占，主要修改的地方是app.listen(4000),我在这里将其改为4000,问题就迎刃而解。</p><p>当然了，接下来还可能会出现这个问题，最直接的解决办法是快捷键ctrl+shift+esc打开进程管理，并找到对应的进程，将其杀死，如图所示:<br><img src="/2019/03/19/Error-listen-EADDRINUSE-3000/process.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3.6在linux持久运行django</title>
      <link href="/2019/03/19/python3-6%E5%9C%A8linux%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8Cdjango/"/>
      <url>/2019/03/19/python3-6%E5%9C%A8linux%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8Cdjango/</url>
      
        <content type="html"><![CDATA[<p>最近线上运行一个OnlineJudgeServer的项目，通过python manage.py runserver 0.0.0.0:8090运行，如果关闭当前窗口，实际就相当于关闭了这个进程。<br><a id="more"></a><br>之前说过通过nuhub可以实现在Linux持久运行的目的。</p><p>如果你的nohub出现 nohub命令找不到，那么你可以执行如下这个命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/nohup python manage.py runserver 0.0.0.0:8090 &gt; system.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p><p>但是由于python版本不一样，对应的django也会存在差异，报了些错误,主要是关于djaon版本问题(与Python版本也有关)。</p><p>最后通过如下命令解决该问题:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/nohup python3.6 manage.py runserver 0.0.0.0:8090 &gt; system.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js读取某个目录下的所有文件夹名字并将其写入到json文件</title>
      <link href="/2019/03/19/Node-js%E8%AF%BB%E5%8F%96%E6%9F%90%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E5%AD%97%E5%B9%B6%E5%B0%86%E5%85%B6%E5%86%99%E5%85%A5%E5%88%B0json%E6%96%87%E4%BB%B6/"/>
      <url>/2019/03/19/Node-js%E8%AF%BB%E5%8F%96%E6%9F%90%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E5%AD%97%E5%B9%B6%E5%B0%86%E5%85%B6%E5%86%99%E5%85%A5%E5%88%B0json%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>针对解决的问题是，有些时候我们需要读取某个文件并将其写入到对应的json文件(xml文件也行，不过目前用json很多，json是主流)。<br><a id="more"></a><br>源码如下:<br>index.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var fs = require(&apos;fs&apos;);</span><br><span class="line"></span><br><span class="line">let components = []</span><br><span class="line">const files = fs.readdirSync(&apos;./&apos;)</span><br><span class="line">files.forEach(function (item, index) &#123;</span><br><span class="line">    let stat = fs.lstatSync(&quot;./&quot; + item)</span><br><span class="line">    if (stat.isDirectory() === true) &#123; </span><br><span class="line">      components.push(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(components);</span><br><span class="line"></span><br><span class="line">let str = JSON.stringify(components)</span><br><span class="line"> </span><br><span class="line"> fs.writeFile(&apos;./extension.json&apos;,str,function(err)&#123;</span><br><span class="line"> if (err) &#123;res.status(500).send(&apos;Server is error...&apos;)&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>控制台输出对应的数据:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ &apos;file&apos;,</span><br><span class="line">  &apos;LearningDemo&apos;,</span><br><span class="line">  &apos;VsCode&apos;,</span><br><span class="line">  &apos;VsCode文件备份&apos;,</span><br><span class="line">  &apos;WeChatApp&apos;,</span><br><span class="line">  &apos;业务管理文档&apos;,</span><br><span class="line">  &apos;技术管理文档&apos;,</span><br><span class="line">  &apos;阿里云服务器备份&apos; ]</span><br></pre></td></tr></table></figure></p><p>参考资料如下:<br>nodejs写入json文件，格式化输出json的方法:<a href="http://www.cnblogs.com/threeEyes/p/10023827.html" target="_blank" rel="noopener">http://www.cnblogs.com/threeEyes/p/10023827.html</a><br>利用nodejs对本地json文件进行增删改查:<a href="https://blog.csdn.net/zhaoxiang66/article/details/79894209" target="_blank" rel="noopener">https://blog.csdn.net/zhaoxiang66/article/details/79894209</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL安装和使用</title>
      <link href="/2019/03/16/PostgreSQL%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/03/16/PostgreSQL%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>青岛OJ系统用的关系型数据库是PostgreSQL,为此对PostgreSQL大致了解下。</p><p>今天的主要话题围绕下面两个方面:</p><ul><li>PostgreSQL安装</li><li>PostgreSQL使用</li></ul><a id="more"></a><h2><span id="一-postgresql安装以ubuntu1604为例">一、PostgreSQL安装(以Ubuntu16.04为例)</span></h2><h4><span id="1安装命令">1.安装命令</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install postgresql</span><br></pre></td></tr></table></figure><h4><span id="2修改-etcpostgresql95mainpostgresqlconf">2.修改 /etc/postgresql/9.5/main/postgresql.conf</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">将下面 listen_addresses = &apos;localhost&apos;注释去掉并改为  listen_addresses = &apos;*&apos;</span><br><span class="line"># - Connection Settings -</span><br><span class="line">#listen_addresses = &apos;localhost&apos;          </span><br><span class="line"># what IP address(es) to listen on;                </span><br><span class="line"># comma-separated list of addresses;     </span><br><span class="line"># defaults to &apos;localhost&apos;; use &apos;*&apos; for all</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">将下面password_encryption = on 注释打开</span><br><span class="line">#password_encryption = on</span><br></pre></td></tr></table></figure><h4><span id="3切换用户su-postgres">3.切换用户su - postgres</span></h4><h4><span id="4通过psql-命令进入postgresql客户端">4.通过psql 命令进入postgresql客户端</span></h4><h4><span id="5修改用户密码">5.修改用户密码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER postgres PASSWORD &apos;youcongtech&apos;;</span><br></pre></td></tr></table></figure><h4><span id="6vim-etcpostgresql95mainpg_hbaconf-修改-host-all-all-1921681024-md5-中的ip为00000">6.vim /etc/postgresql/9.5/main/pg_hba.conf 修改 host all all 192.168.1.0/24 md5 中的ip,为：0.0.0.0/0</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># TYPE DATABASE  USER    CIDR-ADDRESS     METHOD</span><br><span class="line"># &quot;local&quot; is for Unix domain socket connections only</span><br><span class="line">local all    all               trust</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host  all    all    127.0.0.1/32     trust</span><br><span class="line">host  all    all    192.168.126.0/24    md5</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host  all    all    ::1/128       trust</span><br></pre></td></tr></table></figure><p>windows安装PostgreSQL:<a href="https://www.cnblogs.com/sharpest/p/6225028.html" target="_blank" rel="noopener">https://www.cnblogs.com/sharpest/p/6225028.html</a></p><h2><span id="二-postgresql使用">二、PostgreSQL使用</span></h2><p>PostgreSQL官方网站:<a href="https://www.postgresql.org/" target="_blank" rel="noopener">https://www.postgresql.org/</a><br>PostgreSQL中文教程:<a href="https://www.yiibai.com/postgresql/" target="_blank" rel="noopener">https://www.yiibai.com/postgresql/</a></p><h4><span id="1介绍postgresql">1.介绍PostgreSQL</span></h4><p>PostgreSQL是一个功能强大的开源对象关系数据库系统，它使用和扩展了SQL语言，并结合了许多安全存储和扩展最复杂数据工作负载的功能。PostgreSQL的起源可以追溯到1986年，作为加州大学伯克利分校POSTGRES项目的一部分，并在核心平台上进行30多年的积极开发。<br>PostgreSQL凭借其经过验证的架构，可靠性、数据完整性，强大的功能集，可扩展性以及软件背后的开源社区的奉献精神赢得了良好的声誉，以始终如一地提供高性能和创新的解决方案。PostgreSQL在所有主要操作系统上运行，自2001年以来一直是符合ACID标准的，并且具有强大的附加功能，例如流行的PostGIS地址空间数据库扩展器。毫无疑问，PostgerSQL已成为许多人和组织首选的开源关系数据库。</p><h4><span id="为什么要使用postgresql">为什么要使用PostgreSQL</span></h4><p>PostgreSQL提供了许多功能，旨在帮助开发人员构建应用程序，管理员保护数据完整性并构建容错环境，并帮助您管理数据，无论数据集有多大或多小。除了免费和开源之外，PostgeSQL还具有高度可扩展性。例如，您可以定义自己的数据类型，构建自定义函数，甚至可以编写来自不同编程语言的代码，而无需重新编译数据库。<br>PostgreSQL试图符合SQL标准，在这种标准中，这种一致性不会与传统特性相矛盾，或者可能导致糟糕的架构决策。支持SQL标准所需的许多功能，但有时语法或功能略有不同。随着时间的推移，可以预期进一步向一致性迈进。从2018年10月发布的版本11开始，PostgreSQL符合SQL:2011核心一致性的179个强制性功能中的至少160个，在撰写本文时，没有任何关系数据库符合此标准的完全符合性。</p><p>下面是PostgreSQL中各种功能的无穷无尽的功能，每个主要版本都添加更多功能:</p><h5><span id="数据类型">数据类型</span></h5><p>基元：整数，数字，字符串，布尔值<br>结构化：日期/时间，数组，范围，UUID<br>文档：JSON / JSONB，XML，键值（Hstore）<br>几何：点，线，圆，多边形<br>自定义：复合，自定义类型</p><h5><span id="数据的完整性">数据的完整性</span></h5><p>独一无二，不是空的<br>主键<br>外键<br>排除约束<br>显式锁定，咨询锁定</p><h5><span id="并发性性能">并发性，性能</span></h5><p>索引：B树，多列，表达式，部分<br>高级索引：GiST，SP-Gist，KNN Gist，GIN，BRIN，覆盖索引，布隆过滤器<br>复杂的查询计划器/优化器，仅索引扫描，多列统计<br>交易，嵌套交易（通过保存点）<br>多版本并发控制（MVCC）<br>读取查询的并行化和构建B树索引<br>表分区<br>SQL标准中定义的所有事务隔离级别，包括Serializable<br>即时（JIT）表达式汇编</p><h5><span id="可靠性灾难恢复">可靠性，灾难恢复</span></h5><p>预写日志（WAL）<br>复制：异步，同步，逻辑<br>时间点恢复（PITR），主动备用<br>表空间</p><h5><span id="安全">安全</span></h5><p>身份验证：GSSAPI，SSPI，LDAP，SCRAM-SHA-256，证书等<br>强大的访问控制系统<br>列和行级安全性</p><h5><span id="可扩展性">可扩展性</span></h5><p>存储的功能和程序<br>程序语言：PL / PGSQL，Perl，Python（以及更多）<br>外部数据包装器：使用标准SQL接口连接到其他数据库或流<br>许多提供附加功能的扩展，包括PostGIS</p><h5><span id="国际化文本搜索">国际化，文本搜索</span></h5><p>支持国际字符集，例如通过ICU校对<br>全文检索<br>您可以在PostgreSQL 文档中发现更多功能。此外，PostgreSQL具有高度可扩展性：许多功能（如索引）都定义了API，因此您可以使用PostgreSQL构建以解决您的挑战。</p><p>事实证明，PostgreSQL在可管理的大量数据和可容纳的并发用户数量方面具有高度可扩展性。生产环境中有活跃的PostgreSQL集群可管理数TB的数据，以及管理PB级的专用系统。</p><p>本文参考资料:<br><a href="https://www.jianshu.com/p/dda94c4ffd52" target="_blank" rel="noopener">Ubuntu 16.04 安装使用PostgreSQL最佳指南</a><br><a href="https://www.postgresql.org/" target="_blank" rel="noopener">PostgreSQL官网</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm run dev 在Linux上持久运行</title>
      <link href="/2019/03/16/npm-run-dev-%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/"/>
      <url>/2019/03/16/npm-run-dev-%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>关于node.js应用程序如何持久运行，我在<a href="https://developers-youcong.github.io/2019/03/05/node-js%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/">node.js服务端程序在Linux上持久运行</a>用过。</p><p>这次主要是针对是一个vue.js应用程序。<br><a id="more"></a><br>vue.js应用程序通常运行命令是npm run dev。如果是在命令行输入该命令，则会出现如下信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DONE  Compiled successfully in 1140ms                                                                          15:13:02</span><br><span class="line"></span><br><span class="line">I  Your application is running here: http://0.0.0.0:8081</span><br></pre></td></tr></table></figure></p><p>假定如果关闭当前窗口则发现进程随之关闭，那么如何保证其持久运行，不会因为关闭窗口造成进程关闭，还是需要用到nohub这个Linux命令。</p><p>关于这个命令我在<a href="https://developers-youcong.github.io/2019/02/23/springboot%E6%89%93%E6%88%90%E7%9A%84jar%E5%8C%85%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/">springboot打成的jar包如何在Linux上持久运行</a>用过</p><p>该vue.js应用程序同样适用。</p><p>如果想记录日志，请按照如下执行(一定要在package.json同级目录或者是当前项目根目录):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch my.log</span><br><span class="line">chmod u+w my.log</span><br><span class="line">nohup npm run dev &gt; my.log 2&gt;my.log &amp;</span><br></pre></td></tr></table></figure><p>如果不想记录日志，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup npm run dev &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></p><p>参考资料:<br><a href="https://blog.csdn.net/chanlingmai5374/article/details/80762983?utm_source=blogxgwz7" target="_blank" rel="noopener">让npm run dev在Linux后台 持久运行</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js截取url参数</title>
      <link href="/2019/03/16/js%E6%88%AA%E5%8F%96url%E5%8F%82%E6%95%B0/"/>
      <url>/2019/03/16/js%E6%88%AA%E5%8F%96url%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>举例说明，比如<a href="http://localhost:2019/blog/getCommentListInfo?postId=1" target="_blank" rel="noopener">http://localhost:2019/blog/getCommentListInfo?postId=1</a><br>如何获取postId=1这个参数值呢？<br><a id="more"></a><br>很简单通过下面代码即可获取，如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">window.onload = function() &#123;</span><br><span class="line"></span><br><span class="line">var postId = getUrlParms(&quot;postId&quot;);</span><br><span class="line"></span><br><span class="line">getByIdCommentInfo(postId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//获取地址栏参数，name:参数名称</span><br><span class="line">function getUrlParms(name) &#123;</span><br><span class="line">var reg = new RegExp(&quot;(^|&amp;)&quot; + name + &quot;=([^&amp;]*)(&amp;|$)&quot;);</span><br><span class="line">var r = window.location.search.substr(1).match(reg);</span><br><span class="line">if(r != null)</span><br><span class="line">return unescape(r[2]);</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>参考资料:<br>js获取url传递参数，js获取url?号后面的参数:<a href="https://www.cnblogs.com/karila/p/5991340.html" target="_blank" rel="noopener">https://www.cnblogs.com/karila/p/5991340.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express框架之跨域请求</title>
      <link href="/2019/03/13/express%E6%A1%86%E6%9E%B6%E4%B9%8B%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
      <url>/2019/03/13/express%E6%A1%86%E6%9E%B6%E4%B9%8B%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>express.js跨域请求代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.all(&apos;*&apos;, function(req, res, next) &#123;</span><br><span class="line">    res.header(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);</span><br><span class="line">    res.header(&quot;Access-Control-Allow-Headers&quot;, &quot;X-Requested-With&quot;);</span><br><span class="line">    res.header(&quot;Access-Control-Allow-Methods&quot;,&quot;PUT,POST,GET,DELETE,OPTIONS&quot;);</span><br><span class="line">    res.header(&quot;X-Powered-By&quot;,&apos; 3.2.1&apos;)</span><br><span class="line">    res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>按照上面的代码，即可解决跨域问题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js之Cookie</title>
      <link href="/2019/03/13/node-js%E4%B9%8BCookie/"/>
      <url>/2019/03/13/node-js%E4%B9%8BCookie/</url>
      
        <content type="html"><![CDATA[<p>最近还是用node.js比较多，今天正好遇见一个问题，还是关于Cookie。<br><a id="more"></a><br>node.js中如何实现cookie(以express框架为例):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&quot;use strict&quot;;</span><br><span class="line"> </span><br><span class="line">var express = require(&quot;express&quot;);</span><br><span class="line">var cookieParser = require(&quot;cookie-parser&quot;);</span><br><span class="line">var util = require(&quot;util&quot;);</span><br><span class="line"> </span><br><span class="line">var app = express();</span><br><span class="line">app.use(cookieParser());</span><br><span class="line"> </span><br><span class="line">app.get(&quot;/test&quot;,function (req, res) &#123;</span><br><span class="line">    console.log(&quot;Cookies: &quot; + util.inspect(req.cookies));</span><br><span class="line"></span><br><span class="line">res.send(&quot;cookie&quot;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(8081);</span><br></pre></td></tr></table></figure></p><p>控制台输出结果为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cookies: &#123; Hm_lvt_2edaee7dab677cdec491683758d1e378: &apos;1552046206,1552134942,1552485731&apos;,</span><br><span class="line">  Hm_lpvt_2edaee7dab677cdec491683758d1e378: &apos;1552485731&apos;,</span><br><span class="line">  add: [ null, null, null, null, null, null, null ] &#125;</span><br></pre></td></tr></table></figure></p><p>如果不使用express的话，那么原生node.js是如何实现的呢？代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);</span><br><span class="line"></span><br><span class="line">http.createServer(function (req, res) &#123;</span><br><span class="line"></span><br><span class="line">    // 获得客户端的Cookie</span><br><span class="line"></span><br><span class="line">    var Cookies = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    req.headers.cookie &amp;&amp; req.headers.cookie.split(&apos;;&apos;).forEach(function( Cookie ) &#123;</span><br><span class="line"></span><br><span class="line">        var parts = Cookie.split(&apos;=&apos;);</span><br><span class="line"></span><br><span class="line">        Cookies[ parts[ 0 ].trim() ] = ( parts[ 1 ] || &apos;&apos; ).trim();</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    console.log(Cookies)</span><br><span class="line"></span><br><span class="line">    // 向客户端设置一个Cookie</span><br><span class="line"></span><br><span class="line">    res.writeHead(200, &#123;</span><br><span class="line"></span><br><span class="line">        &apos;Set-Cookie&apos;: &apos;myCookie=test&apos;,</span><br><span class="line"></span><br><span class="line">        &apos;Content-Type&apos;: &apos;text/plain&apos;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    res.end(&apos;Hello World\n&apos;);</span><br><span class="line"></span><br><span class="line">&#125;).listen(8000);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">console.log(&apos;Server running at http://127.0.0.1:8000/&apos;);</span><br></pre></td></tr></table></figure></p><p>‘<br>cookie并不是万能的，相反它有一定的安全隐患，为此node.js有一种cookie签名实现，源码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">const express = require(&apos;express&apos;);</span><br><span class="line">const cookieParser = require(&apos;cookie-parser&apos;);</span><br><span class="line"></span><br><span class="line">//随机生成的字符串</span><br><span class="line">var signStr = &apos;xadsafeowirw&apos;</span><br><span class="line"></span><br><span class="line">var app = express();</span><br><span class="line"></span><br><span class="line">//需要将密匙传给cookieParser, 在接收数据的时候，进行解析。</span><br><span class="line">app.use(cookieParser(signStr));</span><br><span class="line"></span><br><span class="line">app.use(&apos;/&apos;, function (req, res) &#123;</span><br><span class="line">    //将密匙字符串赋值给req.secret,可以省略，在上面cookieparser()时会自动对secret赋值</span><br><span class="line">    req.secret=signStr;</span><br><span class="line"></span><br><span class="line">    //返回给浏览器的cookie, 这就是传说中的种cookie了</span><br><span class="line">    //如果需要开启签名，第三个参数对象signed 设置为true.</span><br><span class="line">    //由于cookie的大小限制4k，而签名后的cookie体积会增加，所以重要的cookie才签名</span><br><span class="line">    res.cookie(&apos;cookiename&apos;, &apos;youcong&apos;, &#123;signed: true, maxAge: 3600&#125;)</span><br><span class="line"></span><br><span class="line">    //有没有签名的cookie，获取方式不一样。</span><br><span class="line">    console.log(&apos;无签名&apos;, req.cookies);</span><br><span class="line">    console.log(&apos;带签名&apos;,req.signedCookies);</span><br><span class="line">    res.send(&apos;ok&apos;)</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(8090);</span><br></pre></td></tr></table></figure></p><p>顺便再补充一下node.js的session实现,代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">const express = require(&apos;express&apos;);</span><br><span class="line">const cookieParser = require(&apos;cookie-parser&apos;);</span><br><span class="line">const cookieSession = require(&apos;cookie-session&apos;);</span><br><span class="line"></span><br><span class="line">var app = express();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(cookieParser());</span><br><span class="line"></span><br><span class="line">//cookieSession 必须放在cookieParser后面</span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">    //session的秘钥，防止session劫持。 这个秘钥会被循环使用，秘钥越长，数量越多，破解难度越高。</span><br><span class="line">    keys: [&apos;aaa&apos;, &apos;bbb&apos;, &apos;ccc&apos;],</span><br><span class="line">    //session过期时间，不易太长。php默认20分钟</span><br><span class="line">    maxAge: 60*60,</span><br><span class="line">    //可以改变浏览器cookie的名字</span><br><span class="line">    name: &apos;session&apos;</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.use(&apos;/&apos;, function (req, res) &#123;</span><br><span class="line"></span><br><span class="line">    //假设使用count记录用户访问的次数</span><br><span class="line">   if(req.session[&apos;count&apos;] == null) &#123;</span><br><span class="line">       req.session[&apos;count&apos;] = 1;</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">       req.session[&apos;count&apos;]++;</span><br><span class="line">   &#125;</span><br><span class="line">   console.log(req.session[&apos;count&apos;])</span><br><span class="line">    res.send(&apos;ok&apos;)</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(8090)</span><br></pre></td></tr></table></figure></p><p>参考资料如下:<br>node.js操作Cookie，让你清楚了解cookie存入过程:<a href="https://blog.csdn.net/sinat_18474835/article/details/79987282" target="_blank" rel="noopener">https://blog.csdn.net/sinat_18474835/article/details/79987282</a><br>Node.js学习（15）-Cookie:<a href="https://blog.csdn.net/sunhuansheng/article/details/82356129" target="_blank" rel="noopener">https://blog.csdn.net/sunhuansheng/article/details/82356129</a><br>node学习之cookie和session:<a href="https://www.cnblogs.com/lijinwen/p/7898159.html" target="_blank" rel="noopener">https://www.cnblogs.com/lijinwen/p/7898159.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery和js之Cookie实现</title>
      <link href="/2019/03/13/jQuery%E5%92%8Cjs%E4%B9%8BCookie%E5%AE%9E%E7%8E%B0/"/>
      <url>/2019/03/13/jQuery%E5%92%8Cjs%E4%B9%8BCookie%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>Web开发者的朋友们基本上都知道，jQuery是对js的封装。今天之所以想讲解这个问题，主要是因为Cookie用的还是比较多，应用场景除了老生常谈的购物车，还有就是用户状态(以我之前开发的一个项目除了session和token外，还有一个加密cookie，双重保护，确保系统安全)。<br><a id="more"></a></p><h2><span id="一-js中的cookie增加-获取-删除操作">一、js中的Cookie增加、获取、删除操作</span></h2><h3><span id="1添加cookie保存cookie">1.添加Cookie(保存Cookie)</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function setCookie(c_name,value,expiredays)&#123;</span><br><span class="line">    var cookieStr = &quot;&quot;;</span><br><span class="line">    var exdate=new Date();</span><br><span class="line">    exdate.setDate(exdate.getDate()+expiredays);</span><br><span class="line">    document.cookie = c_name+ &quot;=&quot; +escape(value)+</span><br><span class="line">    ((expiredays==null) ? &quot;&quot; : &quot;; expires=&quot;+exdate.toGMTString())+&quot;;path=/&quot;;</span><br><span class="line">&#125;//由于cookie存在域的概念，且在这里要不区分域，获取cookie的值，所以在这里使用的是统一的路径 path=/ ；</span><br></pre></td></tr></table></figure><h3><span id="2获取cookie">2.获取Cookie</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function getCookie(c_name)&#123;</span><br><span class="line">    if (document.cookie.length&gt;0)&#123; </span><br><span class="line">        console.log(document.cookie);</span><br><span class="line">        c_start=document.cookie.indexOf(c_name + &quot;=&quot;);</span><br><span class="line">        if (c_start!=-1)&#123; </span><br><span class="line">            c_start=c_start + c_name.length+1; </span><br><span class="line">            c_end=document.cookie.indexOf(&quot;;&quot;,c_start);</span><br><span class="line">            if (c_end==-1) c_end=document.cookie.length;</span><br><span class="line">            return unescape(document.cookie.substring(c_start,c_end));</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="3删除cookie">3.删除Cookie</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function delete_cookie( name, path, domain ) &#123;</span><br><span class="line">  if( get_cookie( name ) ) &#123;</span><br><span class="line">    document.cookie = name + &quot;=&quot; +</span><br><span class="line">      ((path) ? &quot;;path=&quot;+path:&quot;&quot;)+</span><br><span class="line">      ((domain)?&quot;;domain=&quot;+domain:&quot;&quot;) +</span><br><span class="line">      &quot;;expires=Thu, 01 Jan 1970 00:00:01 GMT&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="二-jquery如何操作cookie">二、jQuery如何操作Cookie</span></h2><p>前提必须要有jQuery.min.js和jQuery.cookie.js。<br>jQuery.cookie.js下载:<a href="http://plugins.jquery.com/cookie/" target="_blank" rel="noopener">http://plugins.jquery.com/cookie/</a></p><h3><span id="1jquery添加cookie">1.jQuery添加Cookie</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.cookie(&apos;the_cookie&apos;, &apos;the_value&apos;, &#123; expires: 7 &#125;);</span><br></pre></td></tr></table></figure><h3><span id="2jquery获取cookie">2.jQuery获取Cookie</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.cookie(&apos;the_cookie&apos;);</span><br></pre></td></tr></table></figure><h3><span id="3jquery删除cookie">3.jQuery删除Cookie</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.cookie(&apos;the_cookie&apos;, null);</span><br></pre></td></tr></table></figure><p>js和jQuery对比，两者效果明显，从中也能体现框架化繁为简的特性。</p><p>注意事项:<br>有的浏览器禁用Cookie会看不到Cookie信息，比如Google。上面的例子是没有问题的，如果你发现在你本地运行不出来，该导入的库也导入了还是没有效果，也不报错，这个时候你就需要看看是不是浏览器禁用Cookie了。</p><p>本文参考资料:<br>jQuery之操作Cookie:<a href="https://www.cnblogs.com/s313139232/p/7839037.html" target="_blank" rel="noopener">https://www.cnblogs.com/s313139232/p/7839037.html</a><br>js中Cookie操作:<a href="https://www.cnblogs.com/springlight/p/5953153.html" target="_blank" rel="noopener">https://www.cnblogs.com/springlight/p/5953153.html</a><br>关于js操作Cookie(包含Cookie相关的基础知识):<a href="https://blog.csdn.net/web_yzm/article/details/81669772" target="_blank" rel="noopener">https://blog.csdn.net/web_yzm/article/details/81669772</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot之静态资源放行</title>
      <link href="/2019/03/13/SpringBoot%E4%B9%8B%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%94%BE%E8%A1%8C/"/>
      <url>/2019/03/13/SpringBoot%E4%B9%8B%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%94%BE%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>为了提高开发效率，编写对应的代码生成器。代码生成器主要有两个方面，一个是在线Web，另外一个是运行某个类。</p><p>使用的技术是SpringBoot+MyBatis-Plus+MySQL+JDK8。</p><p>在编写在线代码生成器的时候，正好遇到一个小问题，那就是静态资源无法访问。</p><p>以SSM(Spring+SpringMVC+MyBatis/MyBatis-Plus)框架来说，通常要想对静态资源放行，最简单直接的办法是使用*.do。</p><a id="more"></a><p>如果你不想使用*.do，那么可以尝试下面两种方法？</p><h2><span id="第一种方法">第一种方法</span></h2><p>在spring-mvc.xml中配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;mvc:default-servlet-handler/&gt;</span><br></pre></td></tr></table></figure><p>光这样还不够，如果是不起作用，你还需要在web.xml配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 静态资源文件的引入 --&gt;</span><br><span class="line"></span><br><span class="line"> &lt;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line"></span><br><span class="line">  &lt;url-pattern&gt;*.js&lt;/url-pattern&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line"> &lt;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line"></span><br><span class="line">  &lt;url-pattern&gt;*.css&lt;/url-pattern&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line"> &lt;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line"></span><br><span class="line">  &lt;url-pattern&gt;*.png&lt;/url-pattern&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line"></span><br><span class="line">  &lt;url-pattern&gt;*.jpg&lt;/url-pattern&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h2><span id="第二种方法">第二种方法</span></h2><p>对指定目录放行，通常也是修改spring-mvc.xml,请参考:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 对指定目录下的静态资源放行 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;mvc:resources location=&quot;/images/&quot; mapping=&quot;/images/**&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;mvc:resources location=&quot;/css/&quot; mapping=&quot;/css/**&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;mvc:resources location=&quot;/js/&quot; mapping=&quot;/js/**&quot;/&gt;</span><br></pre></td></tr></table></figure><p>如果是使用SpringBoot的话，该如何配置静态资源放行呢？</p><p>一般情况下，SpringBoot+模板语言(jsp+freemarker等)开发。</p><p>但是有部分开发者为了实现前后端分离(这是一种变相的分离)，将静态资源放在src/main/resources目录下。</p><p>放在这个目录下是无法访问的，如果要想访问，需要配置。</p><p>WebConfig.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package com.acs.springboot.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">import org.springframework.http.CacheControl;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@ControllerAdvice</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line"></span><br><span class="line">public class WebConfig extends WebMvcConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line"></span><br><span class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line"></span><br><span class="line">        //静态资源放行</span><br><span class="line"></span><br><span class="line">    registry.addResourceHandler(&quot;/view/**&quot;).addResourceLocations(&quot;classpath:/view/&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图如下:</p><p><img src="/2019/03/13/SpringBoot之静态资源放行/server01.png" alt=""></p><p><img src="/2019/03/13/SpringBoot之静态资源放行/server02.png" alt=""></p><p>参考(均来自我个人的博客园):</p><p>JavaWeb在线代码生成器:<a href="https://www.cnblogs.com/youcong/p/9494892.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/9494892.html</a></p><p>MP实战系列(六)之代码生成器讲解:<a href="https://blog.csdn.net/suijiarui/article/details/51360980" target="_blank" rel="noopener">https://blog.csdn.net/suijiarui/article/details/51360980</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StringRedisTemplate操作Redis</title>
      <link href="/2019/03/09/StringRedisTemplate%E6%93%8D%E4%BD%9CRedis/"/>
      <url>/2019/03/09/StringRedisTemplate%E6%93%8D%E4%BD%9CRedis/</url>
      
        <content type="html"><![CDATA[<p>在说到StringRedisTemplate操作Redis数据的时候，我们顺便谈谈StringRedisTemplate和RedisTemplate的区别。</p><h2><span id="一-stringredistemplate和redistemplate的区别">一、StringRedisTemplate和RedisTemplate的区别</span></h2><p>区别如下:<br>1.两者关系是StringRedisTemplate继承RedisTemplate。</p><p>从StringRedisTemplate源码即可看出，如下图所示:<br><img src="/2019/03/09/StringRedisTemplate操作Redis/example01.png" alt=""></p><p>2.两者的数据是不共通的，也就是说StringRedisTemplate只能管理StringRedisTemplate里面的数据，RedisTemplate只能管理RedisTemplate中的数据。</p><p>3.使用的序列化类不同。<br>使用的序列化哪里不同?如下所示:<br>(1)RedisTemplate使用的是JdkSerializationRedisSerializer 存入数据会将数据先序列化成字节组然后再存入Redis数据库。<br>(2)StringRedisTemplate使用的是StringRedisSerializer。</p><a id="more"></a><p>使用时注意事项:<br>(1)当你的Redis数据库里面本来存的是字符串数据或者是你要存取的数据就是字符串类型数据的时候，那么你就使用StringRedisTemplate即可;<br>(2)但是如果你的数据是复杂的对象类型，而取出的时候又不想做任何数据转换，直接从Redis里面取出一个对象，那么使用RedisTemplate是更好的选择;<br>(3)RedisTemplate中存取数据都是字节数组。当Redis职工存入的数据是可读形式而非字节数组时，使用RedisTemplate取值的时候会无法获取导出数据，获得的值为null。可以使用StringRedisTemplate试试;</p><h2><span id="二-redistemplate定义了5种数据结构操作">二、RedisTemplate定义了5种数据结构操作</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue();//操作字符串</span><br><span class="line">redisTemplate.opsForHash();//操作hash</span><br><span class="line">redisTemplate.opsForList();//操作list</span><br><span class="line">redisTemplate.opsForSet();//操作set</span><br><span class="line">redisTemplate.opsForZSet();//操作有序set</span><br></pre></td></tr></table></figure><h2><span id="三-stringredistemplate常用操作">三、StringRedisTemplate常用操作</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">stringRedisTemplate.opsForValue().set(&quot;test&quot;, &quot;100&quot;,60*10,TimeUnit.SECONDS);//向redis里存入数据和设置缓存时间  </span><br><span class="line"></span><br><span class="line">stringRedisTemplate.boundValueOps(&quot;test&quot;).increment(-1);//val做-1操作</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.opsForValue().get(&quot;test&quot;)//根据key获取缓存中的val</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.boundValueOps(&quot;test&quot;).increment(1);//val +1</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.getExpire(&quot;test&quot;)//根据key获取过期时间</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.getExpire(&quot;test&quot;,TimeUnit.SECONDS)//根据key获取过期时间并换算成指定单位 </span><br><span class="line"></span><br><span class="line">stringRedisTemplate.delete(&quot;test&quot;);//根据key删除缓存</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.hasKey(&quot;546545&quot;);//检查key是否存在，返回boolean值 </span><br><span class="line"></span><br><span class="line">stringRedisTemplate.opsForSet().add(&quot;red_123&quot;, &quot;1&quot;,&quot;2&quot;,&quot;3&quot;);//向指定key中存放set集合</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.expire(&quot;red_123&quot;,1000 , TimeUnit.MILLISECONDS);//设置过期时间</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.opsForSet().isMember(&quot;red_123&quot;, &quot;1&quot;)//根据key查看集合中是否存在指定数据</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.opsForSet().members(&quot;red_123&quot;);//根据key获取set集合</span><br></pre></td></tr></table></figure><p>单测示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package cn.test;</span><br><span class="line"></span><br><span class="line">import static org.junit.Assert.*;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line">import org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line">import com.blog.springboot.Application;</span><br><span class="line"></span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">@SpringBootTest(classes = Application.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</span><br><span class="line">public class PracticeJunitTest &#123;</span><br><span class="line">@Autowired</span><br><span class="line">    private StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void testConnectionRedis() throws Exception &#123;</span><br><span class="line"></span><br><span class="line">stringRedisTemplate.opsForValue().set(&quot;youcong&quot;, &quot;ok&quot;);</span><br><span class="line"></span><br><span class="line">System.out.println(stringRedisTemplate.opsForValue().get(&quot;youcong&quot;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>参考链接如下:<br><a href="http://www.cnblogs.com/slowcity/p/9002660.html" target="_blank" rel="noopener">StringRedisTemplate操作redis数据</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Could not get a resource from the pool 错误解决</title>
      <link href="/2019/03/09/Could-not-get-a-resource-from-the-pool-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
      <url>/2019/03/09/Could-not-get-a-resource-from-the-pool-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>错误关键信息:Could not get a resource from the pool</p><p>通常原因是因为远程服务器上的redis没有配置好。</p><p>解决方案如下:<br>(1)将redis.conf中的bind:127.0.0.1注释掉;<br>(2)将redis.conf中的protected-mode yes改为protected-mode no</p><p>按照上述的解决方案是可以解决这个问题的。但是以SpringBoot为例，这样做仍然无法解决问题，原因是因为application.yml中的redis配置有误造成的。</p><a id="more"></a><p>按照如下配置即可解决问题:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    host: 192.168.126.128</span><br><span class="line">    port: 2019</span><br><span class="line">    password: youcongtech</span><br><span class="line">    database: 0</span><br><span class="line">    lettuce:</span><br><span class="line">      pool:</span><br><span class="line">        max-active: 32</span><br><span class="line">        max-wait: 300ms</span><br><span class="line">        max-idle: 16</span><br><span class="line">        min-idle: 8</span><br></pre></td></tr></table></figure></p><p>之所以这样配置是因为使用的是spring-boot-starter-data-redis这个maven依赖。当然了，如果你不想这样配置的话大可自己写一个Jedis，不过通常Maven已经提供了，不必自己动手造轮子。</p><p>详情可参考如下:<br>Java连接Redis之redis的增删改查:<a href="https://www.cnblogs.com/youcong/p/8098881.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/8098881.html</a></p><p>如果你还没有安装过Redis可以参考我的这篇文章<a href="https://www.cnblogs.com/youcong/p/8044625.html" target="_blank" rel="noopener">Redis的安装和客户端使用注意事项</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型网站技术架构演化</title>
      <link href="/2019/03/08/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E6%BC%94%E5%8C%96/"/>
      <url>/2019/03/08/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E6%BC%94%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2><span id="一-大型网站软件系统的特点">一、大型网站软件系统的特点</span></h2><h4><span id="1高并发-大流量">1.高并发、大流量</span></h4><h5><span id="a什么是高并发">a.什么是高并发?</span></h5><p>高并发是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理多个请求。</p><a id="more"></a><h5><span id="b高并发的衡量指标有哪些">b.高并发的衡量指标有哪些?</span></h5><p>(1)响应时间:系统对请求做出响应。例如系统处理一个HTTP请求需要200ms,这个200ms就是系统的响应时间。</p><p>(2)吞吐量:单位时间内处理的请求数量。</p><p>(3)QPS：每秒响应请求数。在互联网领域，这个指标和吞吐量区分的不那么明显。</p><p>(4)并发用户数:同时承载正常使用系统功能的用户数量。例如一个通讯系统，在线量一定程度上代表系统的并发用户数，比如腾讯QQ。</p><h5><span id="c什么是大流量">c.什么是大流量</span></h5><p>大流量这个词，顾名思义表示很多流量，这个很多可以用一千万，一亿或者百亿等来衡量。</p><p>以流量来说，这个词有比较多的含义，如:</p><p>(1)它可以表示手机无线网数据;</p><p>(2)网店或网站的访问量;</p><p>(3)流体通过量，如水流量等;</p><p>在这里主要指网站的流量(包含网站访问量)。</p><h5><span id="d那么网站流量指标有哪些呢">d.那么网站流量指标有哪些呢</span></h5><p>主要指标包括:</p><p>(1)独立访问者数量;</p><p>(2)重复访问者数量;</p><p>(3)页面浏览数;</p><p>(4)每个访问者的页面浏览数;</p><p>(5)用户在网站的停留时间;</p><p>(6)用户来源网站(又叫”引导网站”);</p><p>(7)用户所使用的搜索引擎及其关键字;</p><h4><span id="2高可用系统需要不间断提供服务">2.高可用:系统需要不间断提供服务</span></h4><h5><span id="a什么是高可用">a.什么是高可用</span></h5><p>高可用是分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计减少系统不能提供正常服务的时间。</p><p>假设系统一直能够提供服务，我们说系统的可用性是100%。</p><p>如果系统每运行100个时间单位，会有1个时间单位无法提供服务，系统的年停机时间为8.76个小时。</p><h5><span id="b如何保障系统的高可用">b.如何保障系统的高可用</span></h5><p>我们都知道，单点是系统高可用的大敌，应该尽量在系统设计的过程中避免单点。方法论上，高可用保证的原则是“集群化”，或者叫“冗余”:只有一个单点挂了服务会受影响，如果有冗余备份，挂了还有其它backup能够顶上。</p><p>那么什么是单点呢？</p><p>你可以理解为所有的服务都在一个服务器上。</p><p>为什么要避免单点？</p><p>假定所有的服务在一个服务器上，如果该服务器因为某种原因挂掉了，那么所有的服务都会收到影响，从而会增长系统不能提供正常服务的时间。</p><h4><span id="3海量数据又称大数据">3.海量数据(又称“大数据”)</span></h4><p>什么是是海量数据？海量数据又称大数据。对于大数据，研究机构给出了这样的定义:大数据是需要新处理模式才能具有更强的决策力、洞察力和流程化能力的海量、高增长率和多样化的信息资产。</p><p>从技术上看，大数据与云计算的关系就像一昧硬币的正反面。大数据必然无法用单台计算机进行处理，必须采用分布式架构。其特色在于可对海量数据进行分布式数据挖掘，但必须依托云计算的分布式处理、分布式数据库以及云存储、虚拟化技术。</p><h5><span id="大数据的特点">大数据的特点</span></h5><p>(1)数据体量大，从TB级跃升到PB级别。</p><p>(2)数据类型繁多，比如网络日志、视频、图片、地理位置等。</p><p>(3)处理速度快。</p><p>(4)数据价值大。</p><h4><span id="4用户分布广泛网络情况复杂">4.用户分布广泛，网络情况复杂</span></h4><p>许多大型互联网都是为全球用户提供服务的，用户分布范围广，各地网络情况千差万别。在国内，还有各个运营商网络互通难的问题。<br>以在我老家的时候，联通的网络不好，移动的网络好，导致使用联通的用户使用软件受制于网络信号差而无法使用。</p><h4><span id="5安全环境恶劣">5.安全环境恶劣</span></h4><p>由于互联网的开放性，使得互联网站更容易受到攻击，大型网站几乎每天都会被黑客攻击。以GitHub为例，无时无刻不在遭受到攻击。</p><h4><span id="6需求快速变更发布频繁">6.需求快速变更，发布频繁</span></h4><p>和传统软件的版本发布频率不一样，互联网产品为了快速适应市场，满足用户需求，其产品发布频率是极高的。</p><h4><span id="7渐进式发展几乎所有的大网站都是从一个小网站开始的">7.渐进式发展:几乎所有的大网站都是从一个小网站开始的</span></h4><p>以最早期的淘宝来说，也是从单体应用来的。据说早期的架构是Linux+Apache+MySQL+PHP(LAMP)。<br>FaceBook是伯克扎克同学在哈佛大学的宿舍里开发的；Google的第一台服务器部署在斯坦福大学的实验室;阿里巴巴则是在马云家的客厅里诞生。<br>好的互联网产品都是慢慢运营出来的，不是一开始就开发好的，这也正好与网站架构的发展演化过程对应。</p><h2><span id="二-大型网站架构演化发展历程">二、大型网站架构演化发展历程</span></h2><h4><span id="1初始阶段的网络架构应用程序-数据库-文件等所有资源都在一台服务器上单体应用">1.初始阶段的网络架构:应用程序、数据库、文件等所有资源都在一台服务器上(单体应用)</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server01.png" alt=""></p><h4><span id="2应用服务和数据库分离网站使用三台服务器应用服务器-文件服务器-数据库服务器">2.应用服务和数据库分离:网站使用三台服务器:应用服务器、文件服务器、数据库服务器</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server02.png" alt=""></p><p>一般情况下有这么几种形式？</p><p>(1)nginx+tomcat+ftp+mysql/oracle;</p><p>(2)nginx+tomcat+vsftp+mysql/oracle;</p><p>(3)apache+tomcat+ftp+mysql/oracle;</p><p>(4)nginx+tomcat;</p><p>(5)docker容器实践思路(又称容器化);</p><p>当然了，上述列出的仅仅是冰山一角，有部分公司拥有自己研发的DB或者应用服务器。</p><h4><span id="3使用缓存改善网站性能使用缓存后数据库访问压力得到有效缓解">3.使用缓存改善网站性能:使用缓存后数据库访问压力得到有效缓解</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server03.png" alt=""></p><h5><span id="a那么在什么样的情况应该使用缓存">a.那么在什么样的情况应该使用缓存?</span></h5><p>(1)经常变化的数据，但是不需要立刻进行持久化的;</p><p>(2)经常被大量读取，很少进行更新操作;</p><p>(3)大量的数据库IO操作;</p><p>(4)通用的页面，如JS、CSS、图片等;</p><p>(5) 统计和计算需要暂存的信息，需要加快计算的;</p><h5><span id="bjava常用的缓存框架有哪些呢">b.Java常用的缓存框架有哪些呢？</span></h5><p>一般情况下，用Redis或者Memcache，当然了，有的时候也会用ehcache，关于Java常用的缓存框架代码示例和介绍可参考该篇文章:<a href="https://www.cnblogs.com/chinway/p/5534636.html" target="_blank" rel="noopener">https://www.cnblogs.com/chinway/p/5534636.html</a></p><h4><span id="4使用服务器集群改善网站的并发处理能力通过负载均衡调度器将请求分配到集群中的服务器上">4.使用服务器集群改善网站的并发处理能力:通过负载均衡调度器将请求分配到集群中的服务器上</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server04.png" alt=""></p><p>这种方式又可以称作“中心化”，所有的请求全部经过Nginx，由Nginx分发请求到不同的应用服务器上面(根据权重进行分配)。</p><h4><span id="5数据库读写分离应用服务器在写数据的时候访问主数据库主数据通过主从复制机制将数据更新同步到从数据库这样当服务器读数据的时候就可以通过从数据库了">5.数据库读写分离:应用服务器在写数据的时候访问主数据库，主数据通过主从复制机制将数据更新同步到从数据库，这样当服务器读数据的时候就可以通过从数据库了</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server05.png" alt=""></p><h4><span id="6使用反向代理和cdn加速网络响应">6.使用反向代理和CDN加速网络响应</span></h4><p>关于CDN可以参考我的这篇文章:<a href="https://www.cnblogs.com/youcong/p/9607448.html" target="_blank" rel="noopener">谈谈CDN</a></p><p>不过觉得还是要贴一下图，这样会有一个感性的认识。</p><p><img src="/2019/03/08/大型网站技术架构演化/server06.png" alt=""></p><h5><span id="什么是反向代理呢">什么是反向代理呢？</span></h5><p>反向代理是指以代理服务器来接收internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><h4><span id="7使用分布式文件系统和分布式数据库系统">7.使用分布式文件系统和分布式数据库系统</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server07.png" alt=""></p><h5><span id="分布式文件系统有哪些">分布式文件系统有哪些？</span></h5><p>主要有MFS、Ceph、GlusterFS、Lustre等</p><p>关于它们的区别可参考:</p><p><a href="https://www.cnblogs.com/zhiguo/p/3334993.html" target="_blank" rel="noopener">分布式文件系统MFS、Ceph、GlusterFS、Lustre的对比</a></p><h4><span id="8使用nosql和搜索引擎">8.使用NoSQL和搜索引擎</span></h4><p><img src="/2019/03/08/大型网站技术架构演化/server08.png" alt=""></p><p>应用比较多的NoSQL,比如Memcache、Redis、MongoDB等。</p><p>搜索引擎，以solr和elasticsearch比较多。</p><h4><span id="9业务拆分">9.业务拆分</span></h4><p>关于业务拆分可参考我的这篇博文<a href="https://www.cnblogs.com/youcong/p/9688300.html" target="_blank" rel="noopener">业务拆分的思考</a></p><h4><span id="10分布式服务">10.分布式服务</span></h4><p>可以去看看分布式服务架构这本书或是去看看国外相关专业人士的论文或文章。</p><p>分布式服务架构:原理、设计与实战电子书下载地址为:<a href="https://pan.baidu.com/s/1hK3vlIHX0SgbD4NNKx_zTg" target="_blank" rel="noopener">https://pan.baidu.com/s/1hK3vlIHX0SgbD4NNKx_zTg</a></p><h2><span id="三-大型网站演化的价值观">三、大型网站演化的价值观</span></h2><p>(1)大型网站架构核心价值是随网站所需灵活应付;</p><p>(2)驱动网站技术发展的主要力量是网站发展业务;</p><p>大型网站的核心价值不是从无到有二搭建一个大型网站，而是能够伴随小型网站业务逐步发展，慢慢演化成一个大型网站，网站的架构选择尽量满足网站用户增加需求。</p><h2><span id="四-网站架构设计误区">四、网站架构设计误区</span></h2><p>误区如下所示:</p><p>(1)一昧追随大公司方案;</p><p>(2)为了技术而技术;</p><p>(3)企图用技术解决所有问题;</p><p>参考资料如下:</p><p>什么是高并发:<a href="https://blog.csdn.net/DreamWeaver_zhou/article/details/78587580" target="_blank" rel="noopener">https://blog.csdn.net/DreamWeaver_zhou/article/details/78587580</a></p><p>什么是高可用:<a href="http://www.cnblogs.com/shizhiyi/p/7750530.html" target="_blank" rel="noopener">http://www.cnblogs.com/shizhiyi/p/7750530.html</a></p><p>什么是海量数据？它具有哪些特征？:<a href="http://www.znjj.tv/news/3322.html" target="_blank" rel="noopener">http://www.znjj.tv/news/3322.html</a></p><p>在什么情况使用Java缓存:<a href="https://flychao88.iteye.com/blog/1532335" target="_blank" rel="noopener">https://flychao88.iteye.com/blog/1532335</a></p><p>8张图读懂大型网站技术架构:<a href="https://github.com/Snailclimb/JavaGuide/blob/master/%E6%9E%B6%E6%9E%84/8%20%E5%BC%A0%E5%9B%BE%E8%AF%BB%E6%87%82%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.md" target="_blank" rel="noopener">https://github.com/Snailclimb/JavaGuide/blob/master/%E6%9E%B6%E6%9E%84/8%20%E5%BC%A0%E5%9B%BE%E8%AF%BB%E6%87%82%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.md</a></p><p>《大型网站技术架构:核心原理与案例分析》第一章概述第一节大型网站架构演化</p>]]></content>
      
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js之十大Web框架</title>
      <link href="/2019/03/07/node-js%E4%B9%8B%E5%8D%81%E5%A4%A7Web%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/03/07/node-js%E4%B9%8B%E5%8D%81%E5%A4%A7Web%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>之前接触过Node.js是因为好奇大前端越来越能干了，连我后台的饭碗都要抢了，太嚣张了，于是我想打压打压它，然后就这样接触它了。<br>再到后来是因为Settings-Sync插件二次开发，我需要用node.js造一个mock server，而当时在开源项目上找到一个模拟github rest api的node.js服务端程序，然后我就在此基础上开发。从工作中学习有应用场景有目的性，果然还是学的要快很多。</p><p>今天之所以要说一说node.js的十大Web框架，主要是觉得以后针对VsCode开发或者是我自己的项目，用Node.js可能会比较多，比如我将我的博客系统一步一步完善，我想尝试微服务的很多种实践方式，其实很多企业用微服务，还有一个原因就是不受编程语言的制约。</p><p>大前提:框架无优劣之分，只有在某个应用场景是否更适合和更好。<br><a id="more"></a></p><h2><span id="一-nodejs开发框架sailjs">一、Node.js开发框架Sail.js</span></h2><p>Sail.js官网地址为:<a href="https://sailsjs.com/" target="_blank" rel="noopener">https://sailsjs.com/</a><br>github地址:<a href="https://github.com/balderdashy/sails" target="_blank" rel="noopener">https://github.com/balderdashy/sails</a></p><p>Sails可以轻松构建自定义的企业级Node.js应用程序</p><p>在几周内而不是几个月内构建实用的，生产就绪的Node.js应用程序。Sails是Node.js最流行的MVC框架，旨在模拟Ruby on Rails等框架的熟悉MVC模式，但支持现代应用程序的需求:具有可扩展性，面向服务的体系结构的数据驱动API。</p><p>优点如下:<br>(1)100%JavaScript<br>在Sails自上构建意味着你的应用程序完全使用JavaScript编写，从这里可以看出浏览器兼容性良好;<br>(2)任何数据库<br>Sails捆绑了一个功能强大的ORM，即Waterline，它提供了一个简单的数据访问层，无论你使用什么数据库，它都能正常工作;<br>(3)自动生成的Rest API<br>Sails附带的蓝图有助于在不编写任何代码的情况下快速启动应用程序的后端;<br>(4)前端不可知<br>Sails与任何前端兼容:Angular、React、IOS、Android、Windows Phone，自定义硬件或其他完全兼容;<br>(5)轻松WebSocket集成<br>由于Sails会为您转换传入的套接字消息，因此它们会自动与Sails应用中的每个路由兼容;<br>(6)专业支持<br>Sails提供商业支持，以加速开发并确保代码职工的最佳实践;</p><h2><span id="二-nodejs服务端框架-hapijs">二、Node.js服务端框架 Hapi.js</span></h2><p>官网地址为:<a href="https://hapijs.com/" target="_blank" rel="noopener">https://hapijs.com/</a></p><p>如何创建一个Hapi.js?请参考如下步骤(均来自官网示例)：<br>1.初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p>2.安装库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hapi --save</span><br></pre></td></tr></table></figure><p>3.编写js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line"></span><br><span class="line">const Hapi=require(&apos;hapi&apos;);</span><br><span class="line"></span><br><span class="line">// Create a server with a host and port</span><br><span class="line">const server=Hapi.server(&#123;</span><br><span class="line">    host:&apos;localhost&apos;,</span><br><span class="line">    port:8000</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// Add the route</span><br><span class="line">server.route(&#123;</span><br><span class="line">    method:&apos;GET&apos;,</span><br><span class="line">    path:&apos;/hello&apos;,</span><br><span class="line">    handler:function(request,h) &#123;</span><br><span class="line"></span><br><span class="line">        return&apos;hello world&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// Start the server</span><br><span class="line">const start =  async function() &#123;</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        await server.start();</span><br><span class="line">    &#125;</span><br><span class="line">    catch (err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">        process.exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;Server running at:&apos;, server.info.uri);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">start();</span><br></pre></td></tr></table></figure><p>4.运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><h2><span id="三-nodejs-高性能封装-expressjs">三、Node.js 高性能封装 Express.js</span></h2><p>关于这个可以参考我的这篇博客:<a href="https://developers-youcong.github.io/2019/02/22/node-js%E4%B9%8Bexpress%E6%A1%86%E6%9E%B6/">https://developers-youcong.github.io/2019/02/22/node-js%E4%B9%8Bexpress%E6%A1%86%E6%9E%B6/</a></p><h2><span id="四-nodejs-web框架-krakenjs">四、Node.js Web框架 Kraken.js</span></h2><p>Kraken 基于 express 构建，实现对环境变量的感知、动态配置、高级中间件和应用生命周期的事件通知。</p><p>官网地址为:<a href="http://krakenjs.com/" target="_blank" rel="noopener">http://krakenjs.com/</a></p><p>示例例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line"></span><br><span class="line">var express = require(&apos;express&apos;),</span><br><span class="line">    kraken = require(&apos;kraken-js&apos;);</span><br><span class="line"></span><br><span class="line">var app = express();</span><br><span class="line">app.use(kraken());</span><br><span class="line">app.listen(8000);</span><br></pre></td></tr></table></figure></p><h2><span id="五-web应用构建平台-meteor">五、Web应用构建平台 Meteor</span></h2><p>Meteor是一组新的技术用于构建高质量的Web应用，提供很多现成的包，可直接在浏览器或者云平台运行。<br>官网地址为:<a href="https://www.meteor.com/" target="_blank" rel="noopener">https://www.meteor.com/</a></p><p>优点如下:<br>(1)使用更少的代码运送更多<br>由于集成的JS堆栈从数据库扩展到最终用户的屏幕，因此可以在10行中完成1000行.</p><p>(2)为任何设备构建应用程序<br>无论是针对Web、IOS、Android还是桌面进行开发，都使用相同的代码。热门推送新功能，无需应用商店批准或者强制用户下载新的原生应用.</p><p>(3)集成已有的技术<br>使用流行的框架和工具，开箱即用。专注于构建功能，而不是自己将不同的组件连接在一起。</p><h2><span id="六-全栈javascript-开发架构-meanjs">六、全栈JavaScript 开发架构 Mean.js</span></h2><p>官网地址为:<a href="http://meanjs.org/" target="_blank" rel="noopener">http://meanjs.org/</a></p><p>1.什么是Mean.js</p><p>MEAN.JS是一个全栈JavaScript的解决方案，可帮助您使用MongoDB、Express、Angular和Node.js构建快速，健壮且可维护的生产Web应用程序.</p><p>2.为何选择Mean.js<br>Mean.js将帮助你入门并避免无用的笨拙工作和常见陷阱，同时保持你的应用程序井然有序。我们目标是创建和维护一个简单易读的开源解决方案，你可以使用它并信任它。</p><p>3.入门<br>入门请参考官方文档:<a href="http://meanjs.org/docs.html" target="_blank" rel="noopener">http://meanjs.org/docs.html</a></p><h2><span id="七-nodejs的web框架-koajs">七、Node.js的Web框架 Koa.js</span></h2><p>Koa是下一代的Node.js的Web框架。由Express团队设计。旨在提供一个更小型、更富有表现力、更可靠的Web应用和API的开发基础。<br>Koa可以通过生成器摆脱回调，极大地改进错误处理。Koa核心不绑定任何中间件，但提供了优雅的一组可以快速愉悦地编写服务器应用的方法。<br>关于koa可参考:<a href="https://www.npmjs.com/package/koa" target="_blank" rel="noopener">https://www.npmjs.com/package/koa</a></p><h2><span id="八-nodejs-cms-和-web-应用程序平台-keystonejs">八、Node.js CMS 和 Web 应用程序平台 KeystoneJS</span></h2><p>KeystoneJS，以 Express 和 MongoDB 为基础搭建的 Node.js CMS 和 Web 应用程序平台。</p><p>官网地址为:<a href="https://keystonejs.com/" target="_blank" rel="noopener">https://keystonejs.com/</a></p><p>具有以下特性：</p><p>Express.js 和 MongoDB：Keystone 会为你配置 express（node.js 上的 Web 服务器），用 Mongoose（领先的 ODM 包）连接你的 MongoDB 数据库</p><p>动态路由：Keystone 从设置 MV* 程序的最佳实践入手，让你管理模板、视图和路由变得更容易</p><p>数据库域：ID、String、Boolean、Date 和 Number 是数据库的构件。Keystone 以它们为基础实现了在现实工作中更实用的域类型，比如 name、email、password、address、image 和 relationship (及其它)</p><p>自动生成管理员界面：不管你在搭建应用程序，或者在生产环境中作为数据库内容管理系统时是否用它，Keystone 的管理员界面都能节省你的时间，让你管理数据更容易</p><p>编码更简单：有时即便做的事情简单，异步代码也会变得复杂。Keystone让简单的事情（比如在视图中显示之前加载数据）保持简单</p><p>表单处理：要验证表单、上次图片或用一行代码更新数据库？基于你已经定义的数据模型，Keystone 可以做到</p><p>会话管理：Keystone 自带了会话管理和认证功能，包括密码域的自动加密</p><p>发送 Email：借助 Keystone，你的应用程序可以轻松地设置、预览和发送基于模板的 email。它还集成了 Mandrill (Mailchimp 卓越的事务性 email 发送服务)</p><h2><span id="九-nodejs-框架组件-flatironjs">九、Node.js 框架组件 flatiron.js</span></h2><p>flatiron 是一款 Node.js 和浏览器的框架组件，是一款构建现代化 web 应用适应性很强的框架。flatiron 提供比 Rails 类组件有更丰富配置的框架组件，允许开发者自己添加他们想要的功能组件。<br>可参考地址为:<a href="https://www.npmjs.com/package/flatiron" target="_blank" rel="noopener">https://www.npmjs.com/package/flatiron</a></p><h2><span id="十-基于-nodejs-的-api-框架-loopback">十、基于 Node.js 的 API 框架 LoopBack</span></h2><p>LoopBack 是基于 Node.js 的一个开源的 API 框架，可以让 Node.js 应用方便的跟各种设备通过 API 进行互联。<br>可参考地址为:<a href="https://loopback.io/" target="_blank" rel="noopener">https://loopback.io/</a></p><p>本文主要参考除引入的官网外还参考<a href="https://my.oschina.net/editorial-story/blog/956498" target="_blank" rel="noopener">Node.js十大Web框架</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript之Map</title>
      <link href="/2019/03/07/javascript%E4%B9%8Bmap/"/>
      <url>/2019/03/07/javascript%E4%B9%8Bmap/</url>
      
        <content type="html"><![CDATA[<p>javascript中的map，我用的不是特别多，倒是Java中的Map或HashMap，经常用。</p><p>顺便围绕几个方面介绍一下map？</p><h2><span id="1map对象">1.Map对象</span></h2><p>Map对象是一种有对应键值对的对象，JS的Object也是键值对的对象。</p><p>ES6中的Map相对Object对象有几个区别?<br>(1)Object对象有原型，也就是说它有默认的key值在对象上面，除非我们使用Object.create(null)创建一个没有原型的对象;<br>(2)在Object中，只能把String和Symbol作为key值，但是在Map中，key值可以是任何基本类型(String,Number,Boolean,undefined,NaN…),或者对象(Map,Set,Object,Function,Symbol,null…);<br>(3)通过Map中的size属性，可以很方便地获取Map长度，要获取Object的长度，你只能用别的方法;</p><p>Map实例对象的key值可以为一个数组或者一个对象，或者一个函数，比较随意，而且Map对象实例中数据的排序是根据用户push的顺序进行排序的，而Object实例中key,value的顺序则有些规律(它们会先排数字开头的值，然后才是字符串开头的key值);</p><h2><span id="2map实例属性">2.Map实例属性</span></h2><p>map.size这个属性和数组的length功能一样，都表示当前实例的长度。</p><h2><span id="3map实例的方法">3.Map实例的方法</span></h2><p>clear() 删除所有的键值对;<br>delete(key) 删除指定键;<br>entries() 返回一个迭代器，迭代器按照对象的插入顺序返回[key,value];<br>forEach(callback,context) 循环执行函数并把键值对作为参数，context为执行函数的上下文this;<br>get(key) 返回Map对象key相对的value值;<br>has(key) 返回布尔值，判断Map对象是否存在指定的key;<br>keys() 返回一个迭代器，迭代器按照插入的顺序返回每一个key元素;<br>set(key,value) 给Map对象设置key/value键值对，返回这个Map对象(相对于JavaScript的Set，Set对象添加元素的方法叫add,而Map对象添加元素的方法为set)<br>iterator 和entireds()方法一样，返回一个迭代器，迭代器按照对象的插入顺序返回[key,value]</p><a id="more"></a><p>代码示例如下(这段与后台交互的代码，主要是为了测试):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=&quot;jquery-1.8.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    url:&quot;http://localhost:2019/comments/recentsComments&quot;,</span><br><span class="line">    type:&quot;GET&quot;,</span><br><span class="line">    contentType: &apos;application/json;charset=utf-8&apos;,</span><br><span class="line">    dataType : &apos;json&apos;,</span><br><span class="line">    success:function(data)&#123;</span><br><span class="line"> </span><br><span class="line">    console.log(data.code);</span><br><span class="line"></span><br><span class="line">    var m = new Map();</span><br><span class="line"></span><br><span class="line">    m.set(&quot;data&quot;,data.list);</span><br><span class="line"></span><br><span class="line">    console.log(m.get(&quot;data&quot;));</span><br><span class="line"></span><br><span class="line">    &#125;,error:function()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>本文主要参考链接如下所示:<br>ES6新特性:JavaScript中的Map和WeakMap对象:<a href="https://www.cnblogs.com/diligenceday/p/5484130.html" target="_blank" rel="noopener">https://www.cnblogs.com/diligenceday/p/5484130.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot实现跨域请求</title>
      <link href="/2019/03/07/springboot%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
      <url>/2019/03/07/springboot%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>之所以需要用到跨域请求，目的在于现在的Java项目，几乎基本上都前后端分离，除一些较老的维护项目外(通常是单体或者是maven多模块形式，不过本质上还是将前端放在webapps下)。</p><p>SpringBoot实现跨域其实和Spring是一样，区别不大，如果要说区别的话，Spring需要在对应的xml文件中配置bean，而SpringBoot则通过注解的方式。</p><p>Spring配置跨域请求可参考我的这篇文章:<a href="https://www.cnblogs.com/youcong/p/9676433.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/9676433.html</a></p><a id="more"></a><p>示例代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Bean;  </span><br><span class="line">import org.springframework.context.annotation.Configuration;  </span><br><span class="line">import org.springframework.web.cors.CorsConfiguration;  </span><br><span class="line">import org.springframework.web.cors.UrlBasedCorsConfigurationSource;  </span><br><span class="line">import org.springframework.web.filter.CorsFilter;  </span><br><span class="line"></span><br><span class="line">@Configuration  </span><br><span class="line">public class CorsConfig &#123;  </span><br><span class="line">    private CorsConfiguration buildConfig() &#123;  </span><br><span class="line">        CorsConfiguration corsConfiguration = new CorsConfiguration();  </span><br><span class="line">        corsConfiguration.addAllowedOrigin(&quot;*&quot;); // 1允许任何域名使用</span><br><span class="line">        corsConfiguration.addAllowedHeader(&quot;*&quot;); // 2允许任何头</span><br><span class="line">        corsConfiguration.addAllowedMethod(&quot;*&quot;); // 3允许任何方法（post、get等） </span><br><span class="line">        return corsConfiguration;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    @Bean  </span><br><span class="line">    public CorsFilter corsFilter() &#123;  </span><br><span class="line">        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();  </span><br><span class="line">        source.registerCorsConfiguration(&quot;/**&quot;, buildConfig()); // 4  </span><br><span class="line">        return new CorsFilter(source);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>本文主要参考链接为:<br>SpringBoot跨域配置:<a href="https://www.cnblogs.com/nananana/p/8492185.html" target="_blank" rel="noopener">https://www.cnblogs.com/nananana/p/8492185.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js如何引用其它js文件</title>
      <link href="/2019/03/07/node-js%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8%E5%85%B6%E5%AE%83js%E6%96%87%E4%BB%B6/"/>
      <url>/2019/03/07/node-js%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8%E5%85%B6%E5%AE%83js%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>以Java来说，比如要实现第三方存储，我可能需要导入对应的库，以maven为例，使用腾讯云或者七牛云、阿里云，我需要导入对应的maven依赖。<br>再比如，有些时候我们封装某个类，而那个类不在该包下，我们需要导包(就是指定那个类的路径，如果路径不对，则可能出现找不到这个类之类的错误，通常对应的IDE会提示错误)。</p><p>其实，node.js也是这样的。最近在开发node.js的时候，难免也会遇到需要引入其它js文件。今天我以一个简单示例来说一说node.js如何引用其它js文件。<br><a id="more"></a><br>test01.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function hello()&#123;</span><br><span class="line"></span><br><span class="line">console.log(&quot;hello&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function hello2()&#123;</span><br><span class="line"></span><br><span class="line">console.log(&quot;hello2&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;hello,hello2&#125;</span><br></pre></td></tr></table></figure></p><p>test02.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var test01 = require( &quot;./test01&quot; );</span><br><span class="line"></span><br><span class="line">test01.hello();</span><br><span class="line"></span><br><span class="line">test01.hello2();</span><br></pre></td></tr></table></figure></p><p>通过命令行运行node test02.js 正常会分别输出hello、hello2。</p><p>require是什么意思呢？<br>其实就跟我们Java开发导包一样的意思，在Java中是import，其实node.js也可以import式导包。</p><p>那么node.js中的require和import导包有什么区别呢？<br>(1)require导包位置任意，而import导包必须在文件的最开始;<br>(2)遵循的规范不同，require/exports是CommonJS的一部分，而import/export是ES6的规范;<br>(3)出现时间不同，CommonJS作为node.js的规范，一直沿用至今，主要是因为npm善CommonJS的类库众多，以及CommonJS和ES6之间的差异，Node.js无法直接兼容ES6。所以现阶段require/exports仍然是必要且必须的;<br>(4)形式不同，require/exports的用法只有以下三种简单写法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const fs = require(&apos;fs&apos;);</span><br><span class="line">— — — — — — — — — — — — — — </span><br><span class="line">exports.fs = fs;</span><br><span class="line">module.exports = fs;</span><br></pre></td></tr></table></figure></p><p>而import/exports的写法就多种多样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import fs from &apos;fs&apos;;</span><br><span class="line">import &#123;default as fs&#125; from &apos;fs&apos;;</span><br><span class="line">import * as fs from &apos;fs&apos;;</span><br><span class="line">import &#123;readFile&#125; from &apos;fs&apos;;</span><br><span class="line">import &#123;readFile as read&#125; from &apos;fs&apos;;</span><br><span class="line">import fs, &#123;readFile&#125; from &apos;fs&apos;;</span><br><span class="line">— — — — — — — — — — — — — — — — — — — — </span><br><span class="line">export default fs;</span><br><span class="line">export const fs;</span><br><span class="line">export function readFile;</span><br><span class="line">export &#123;readFile, read&#125;;</span><br><span class="line">export * from &apos;fs&apos;;</span><br></pre></td></tr></table></figure></p><p>(5)本质上不同，主要体现:<br>a.CommonJS还是ES6 Module 输出都可以看成是一个具备多个属性或者方法的对象;<br>b.default是ES6 Module所独有的关键字，export default fs 输出默认的接口对象，import fs from ‘fs’可直接导入这个对象;<br>c.ES6 Module 中导入模块的属性或者方法是强绑定的，包括基础类型，而CommonJS则普通的值传递或者引用传递;</p><p>本文参考链接如下所示:<br>node.js如何引用其它js文件:<a href="https://www.cnblogs.com/wuotto/p/9640312.html" target="_blank" rel="noopener">https://www.cnblogs.com/wuotto/p/9640312.html</a><br>关于require/import的区别:<a href="https://www.jianshu.com/p/fd39e16feb60" target="_blank" rel="noopener">https://www.jianshu.com/p/fd39e16feb60</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins忘记管理员密码之解决方案</title>
      <link href="/2019/03/07/jenkins%E5%BF%98%E8%AE%B0%E7%AE%A1%E7%90%86%E5%91%98%E5%AF%86%E7%A0%81%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2019/03/07/jenkins%E5%BF%98%E8%AE%B0%E7%AE%A1%E7%90%86%E5%91%98%E5%AF%86%E7%A0%81%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>jenkins忘记管理员密码怎么办？</p><p>通常有这么几种解决方案，如下所示:</p><a id="more"></a><p>(1)进入对应的用户目录文件夹，以ubuntu16.04为例，jenkins安装目录为/var/lib/jenkins<br>进入到该目录，通过ls或ll命令可以显示对应的所有文件夹，找到其中的users文件夹，进入对应的用户里面，修改config.xml中的passwordHash<br>通过关键字hudson.security.HudsonPrivateSecurityRealm_-Details即可找到。如果找不到你可以采用方案(2)解决该问题;</p><p>(2)还是以ubuntu为了，进入/var/lib/jenkins目录，修改config.xml中的useSecurity将其改为false<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;mode&gt;NORMAL&lt;/mode&gt;</span><br><span class="line">&lt;useSecurity&gt;false&lt;/useSecurity&gt; //默认为true</span><br><span class="line">&lt;authorizationStrategy class=&quot;hudson.security.AuthorizationStrategy$Unsecured&quot;/&gt;</span><br></pre></td></tr></table></figure></p><p>最后通过service jenkins restart重启jenkins，请按照如下步骤依次操作:<br>依次点击页面中的系统管理-&gt;全局安全配置-&gt;勾选启用安全-&gt;选择jenkins专有用户数据库，点击保存-&gt;再次点击系统管理-&gt;管理用户，配置管理员账号密码即可</p><p>就这样愉快地解决了问题。</p><p>参考链接如下所示:<br>Jenkins忘记密码解决方案:<a href="https://www.cnblogs.com/kazihuo/p/9328107.html" target="_blank" rel="noopener">https://www.cnblogs.com/kazihuo/p/9328107.html</a><br>Jenkins 忘记admin密码拯救方法:<a href="https://www.cnblogs.com/huangenai/p/7416322.html" target="_blank" rel="noopener">https://www.cnblogs.com/huangenai/p/7416322.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis之一对多</title>
      <link href="/2019/03/06/mybatis%E4%B9%8B%E4%B8%80%E5%AF%B9%E5%A4%9A/"/>
      <url>/2019/03/06/mybatis%E4%B9%8B%E4%B8%80%E5%AF%B9%E5%A4%9A/</url>
      
        <content type="html"><![CDATA[<p>今天主要话题围绕这么几个方面？</p><ul><li>mybatis一对多示例</li><li>sql优化策略<a id="more"></a><h2><span id="一-mybatis之一对多">一、mybatis之一对多</span></h2>在说一对多之前，顺便说一下一对一。</li></ul><p>一对一，常见的例子，比如以常见的班级例子来说，一个班主任只属于一个班级(排除某个班主任能力超群可兼任多个班级).</p><p>例如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt; </span><br><span class="line">&lt;!DOCTYPE mapper    PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;    </span><br><span class="line">    &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt; </span><br><span class="line">&lt;!--  为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样保证了namespace的值是唯一的--&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.yc.mybatis.test.classMapper&quot;&gt;</span><br><span class="line">    </span><br><span class="line">        &lt;!-- </span><br><span class="line">         方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集</span><br><span class="line">                 封装联表查询的数据(去除重复的数据)</span><br><span class="line">         select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=1</span><br><span class="line">     --&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;select id=&quot;getClass&quot; parameterType=&quot;int&quot; resultMap=&quot;getClassMap&quot;&gt;</span><br><span class="line">        select * from class c, teacher t  where c.teacher_id = t.t_id and c.teacher_id=#&#123;id&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- resultMap:映射实体类和字段之间的一一对应的关系 --&gt;</span><br><span class="line">    &lt;resultMap type=&quot;Classes&quot; id=&quot;getClassMap&quot;&gt;</span><br><span class="line">        &lt;id property=&quot;id&quot; column=&quot;c_id&quot;/&gt;   </span><br><span class="line">        &lt;result property=&quot;name&quot; column=&quot;c_name&quot;/&gt;</span><br><span class="line">        &lt;association property=&quot;teacher&quot; javaType=&quot;Teacher&quot;&gt;   </span><br><span class="line">            &lt;id property=&quot;id&quot; column=&quot;t_id&quot;/&gt;</span><br><span class="line">            &lt;result property=&quot;name&quot; column=&quot;t_name&quot;/&gt;</span><br><span class="line">        &lt;/association&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line">    </span><br><span class="line">     &lt;!-- </span><br><span class="line">         方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型</span><br><span class="line">         SELECT * FROM class WHERE c_id=1;</span><br><span class="line">         SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值</span><br><span class="line">         property:别名(属性名)    column：列名 --&gt;</span><br><span class="line">          &lt;!-- 把teacher的字段设置进去 --&gt;</span><br><span class="line">    &lt;select id=&quot;getClass1&quot; parameterType=&quot;int&quot; resultMap=&quot;getClassMap1&quot;&gt;</span><br><span class="line">        select * from class where c_id=#&#123;id&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;resultMap type=&quot;Classes&quot; id=&quot;getClassMap1&quot;&gt;</span><br><span class="line">        &lt;id property=&quot;id&quot; column=&quot;c_id&quot;/&gt;   </span><br><span class="line">        &lt;result property=&quot;name&quot; column=&quot;c_name&quot;/&gt;</span><br><span class="line">        &lt;association property=&quot;teacher&quot; column=&quot;teacher_id&quot; select=&quot;getTeacher&quot;/&gt;   </span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line">    &lt;select id=&quot;getTeacher&quot; parameterType=&quot;int&quot; resultType=&quot;Teacher&quot;&gt;</span><br><span class="line">        select t_id id,t_name name from teacher where t_id =#&#123;id&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></p><p>顺便对association标签的属性进行解释:<br>property:对象属性名称<br>javaType:对象属性类型<br>column:所对应的外键字段名称</p><p>一对多，以我博客为例，比如今天我写的一个近期评论的接口就是一个一对多的体现(一个评论者可以对应多篇文章，相反，多篇文章也能对应一个评论者，从中可以体现一对多，多对一，甚至多对多的关系)</p><p>关于一对一、一对多或者多对多，可以参考<a href="https://www.cnblogs.com/yaobolove/p/5444046.html" target="_blank" rel="noopener">Mybatis 一对一，一对多，多对一，多对多的理解</a></p><p>话不多说，看xml代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.blog.springboot.dao.CommentsDao&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 通用查询映射结果 --&gt;</span><br><span class="line">    &lt;resultMap id=&quot;BaseResultMap&quot; type=&quot;com.blog.springboot.entity.Comments&quot;&gt;</span><br><span class="line">    </span><br><span class="line">        &lt;id column=&quot;comment_ID&quot; property=&quot;commentId&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_post_ID&quot; property=&quot;commentPostId&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_author&quot; property=&quot;commentAuthor&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_author_email&quot; property=&quot;commentAuthorEmail&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_author_url&quot; property=&quot;commentAuthorUrl&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_author_IP&quot; property=&quot;commentAuthorIp&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_date&quot; property=&quot;commentDate&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_date_gmt&quot; property=&quot;commentDateGmt&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_content&quot; property=&quot;commentContent&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_karma&quot; property=&quot;commentKarma&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_approved&quot; property=&quot;commentApproved&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_agent&quot; property=&quot;commentAgent&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_type&quot; property=&quot;commentType&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;comment_parent&quot; property=&quot;commentParent&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;user_id&quot; property=&quot;userId&quot; /&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;collection property=&quot;posts&quot; ofType=&quot;Posts&quot;&gt;</span><br><span class="line">        &lt;result column=&quot;post_title&quot; property=&quot;postTitle&quot;/&gt;</span><br><span class="line">        &lt;/collection&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 通用查询结果列 --&gt;</span><br><span class="line">    &lt;sql id=&quot;Base_Column_List&quot;&gt;</span><br><span class="line">        comment_ID AS commentId, comment_post_ID AS commentPostId, comment_author AS commentAuthor, comment_author_email AS commentAuthorEmail, comment_author_url AS commentAuthorUrl, comment_author_IP AS commentAuthorIp, comment_date AS commentDate, comment_date_gmt AS commentDateGmt, comment_content AS commentContent, comment_karma AS commentKarma, comment_approved AS commentApproved, comment_agent AS commentAgent, comment_type AS commentType, comment_parent AS commentParent, user_id AS userId</span><br><span class="line">    &lt;/sql&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;select id=&quot;recentComments&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">    SELECT comments.comment_author,posts.post_title FROM wp_comments AS comments LEFT JOIN wp_posts AS posts ON(comments.comment_post_ID=posts.ID) WHERE comments.comment_approved=&apos;0&apos; AND posts.post_status=&apos;publish&apos; ORDER BY comments.comment_date_gmt DESC LIMIT 0,5</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></p><p>相关属性我就不做多的解释，关于MyBatis相关的教程，除了参考官网之外，还可以参考我的博客系列文章，地址为:<a href="https://www.cnblogs.com/youcong/category/1144041.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/category/1144041.html</a></p><p>关于ofType还是要说的，如果你的mybatis-config.xml或者是springboot中的application.yml或application.properties没有配置对应的别名，那么请将类的完整路径填写上去，假定我没有做出相关的配置的话，那么我需要这么写 ofType=”com.blog.springboot.entity.Posts”。</p><p>collection的property要包含在com.blog.springboot.entity.Comments类里面</p><p>我贴出我的Comments类，大家可以做一个参考:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.entity;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.activerecord.Model;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableField;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableId;</span><br><span class="line">import com.baomidou.mybatisplus.annotations.TableName;</span><br><span class="line">import com.baomidou.mybatisplus.enums.IdType;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * </span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author youcong</span><br><span class="line"> * @since 2019-02-12</span><br><span class="line"> */</span><br><span class="line">@TableName(&quot;wp_comments&quot;)</span><br><span class="line">public class Comments extends Model&lt;Comments&gt; &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">    @TableId(value = &quot;comment_ID&quot;, type = IdType.AUTO)</span><br><span class="line">    private Long commentId;</span><br><span class="line">    @TableField(&quot;comment_post_ID&quot;)</span><br><span class="line">    private Long commentPostId;</span><br><span class="line">    @TableField(&quot;comment_author&quot;)</span><br><span class="line">    private String commentAuthor;</span><br><span class="line">    @TableField(&quot;comment_author_email&quot;)</span><br><span class="line">    private String commentAuthorEmail;</span><br><span class="line">    @TableField(&quot;comment_author_url&quot;)</span><br><span class="line">    private String commentAuthorUrl;</span><br><span class="line">    @TableField(&quot;comment_author_IP&quot;)</span><br><span class="line">    private String commentAuthorIp;</span><br><span class="line">    @TableField(&quot;comment_date&quot;)</span><br><span class="line">    private Date commentDate;</span><br><span class="line">    @TableField(&quot;comment_date_gmt&quot;)</span><br><span class="line">    private Date commentDateGmt;</span><br><span class="line">    @TableField(&quot;comment_content&quot;)</span><br><span class="line">    private String commentContent;</span><br><span class="line">    @TableField(&quot;comment_karma&quot;)</span><br><span class="line">    private Integer commentKarma;</span><br><span class="line">    @TableField(&quot;comment_approved&quot;)</span><br><span class="line">    private String commentApproved;</span><br><span class="line">    @TableField(&quot;comment_agent&quot;)</span><br><span class="line">    private String commentAgent;</span><br><span class="line">    @TableField(&quot;comment_type&quot;)</span><br><span class="line">    private String commentType;</span><br><span class="line">    @TableField(&quot;comment_parent&quot;)</span><br><span class="line">    private Long commentParent;</span><br><span class="line">    @TableField(&quot;user_id&quot;)</span><br><span class="line">    private Long userId;</span><br><span class="line">    </span><br><span class="line">    @TableField(exist=false)</span><br><span class="line">    private List&lt;Posts&gt; posts;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    public List&lt;Posts&gt; getPosts() &#123;</span><br><span class="line">return posts;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setPosts(List&lt;Posts&gt; posts) &#123;</span><br><span class="line">this.posts = posts;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Long getCommentId() &#123;</span><br><span class="line">        return commentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentId(Long commentId) &#123;</span><br><span class="line">        this.commentId = commentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Long getCommentPostId() &#123;</span><br><span class="line">        return commentPostId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentPostId(Long commentPostId) &#123;</span><br><span class="line">        this.commentPostId = commentPostId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentAuthor() &#123;</span><br><span class="line">        return commentAuthor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentAuthor(String commentAuthor) &#123;</span><br><span class="line">        this.commentAuthor = commentAuthor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentAuthorEmail() &#123;</span><br><span class="line">        return commentAuthorEmail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentAuthorEmail(String commentAuthorEmail) &#123;</span><br><span class="line">        this.commentAuthorEmail = commentAuthorEmail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentAuthorUrl() &#123;</span><br><span class="line">        return commentAuthorUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentAuthorUrl(String commentAuthorUrl) &#123;</span><br><span class="line">        this.commentAuthorUrl = commentAuthorUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentAuthorIp() &#123;</span><br><span class="line">        return commentAuthorIp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentAuthorIp(String commentAuthorIp) &#123;</span><br><span class="line">        this.commentAuthorIp = commentAuthorIp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Date getCommentDate() &#123;</span><br><span class="line">        return commentDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentDate(Date commentDate) &#123;</span><br><span class="line">        this.commentDate = commentDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Date getCommentDateGmt() &#123;</span><br><span class="line">        return commentDateGmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentDateGmt(Date commentDateGmt) &#123;</span><br><span class="line">        this.commentDateGmt = commentDateGmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentContent() &#123;</span><br><span class="line">        return commentContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentContent(String commentContent) &#123;</span><br><span class="line">        this.commentContent = commentContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getCommentKarma() &#123;</span><br><span class="line">        return commentKarma;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentKarma(Integer commentKarma) &#123;</span><br><span class="line">        this.commentKarma = commentKarma;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentApproved() &#123;</span><br><span class="line">        return commentApproved;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentApproved(String commentApproved) &#123;</span><br><span class="line">        this.commentApproved = commentApproved;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentAgent() &#123;</span><br><span class="line">        return commentAgent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentAgent(String commentAgent) &#123;</span><br><span class="line">        this.commentAgent = commentAgent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCommentType() &#123;</span><br><span class="line">        return commentType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentType(String commentType) &#123;</span><br><span class="line">        this.commentType = commentType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Long getCommentParent() &#123;</span><br><span class="line">        return commentParent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCommentParent(Long commentParent) &#123;</span><br><span class="line">        this.commentParent = commentParent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Long getUserId() &#123;</span><br><span class="line">        return userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUserId(Long userId) &#123;</span><br><span class="line">        this.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected Serializable pkVal() &#123;</span><br><span class="line">        return this.commentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;Comments&#123;&quot; +</span><br><span class="line">        &quot;, commentId=&quot; + commentId +</span><br><span class="line">        &quot;, commentPostId=&quot; + commentPostId +</span><br><span class="line">        &quot;, commentAuthor=&quot; + commentAuthor +</span><br><span class="line">        &quot;, commentAuthorEmail=&quot; + commentAuthorEmail +</span><br><span class="line">        &quot;, commentAuthorUrl=&quot; + commentAuthorUrl +</span><br><span class="line">        &quot;, commentAuthorIp=&quot; + commentAuthorIp +</span><br><span class="line">        &quot;, commentDate=&quot; + commentDate +</span><br><span class="line">        &quot;, commentDateGmt=&quot; + commentDateGmt +</span><br><span class="line">        &quot;, commentContent=&quot; + commentContent +</span><br><span class="line">        &quot;, commentKarma=&quot; + commentKarma +</span><br><span class="line">        &quot;, commentApproved=&quot; + commentApproved +</span><br><span class="line">        &quot;, commentAgent=&quot; + commentAgent +</span><br><span class="line">        &quot;, commentType=&quot; + commentType +</span><br><span class="line">        &quot;, commentParent=&quot; + commentParent +</span><br><span class="line">        &quot;, userId=&quot; + userId +</span><br><span class="line">        &quot;&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>也许大家发现我的mybatis与你们的mybatis不一样，实际上我用的是mybatis-plus，mybatis-plus可以说跟mybatis几乎没有什么区别，我多次强调过，mybatis-plus是mybatis的增强版，意味着mybatis原有的功能，mybatis-plus可以毫无顾忌的拿来即用。</p><p>关于mybatis-plus的学习教程，感兴趣的朋友可以参考我的这篇博客(包含从入门到使用):<a href="https://www.cnblogs.com/youcong/category/1213059.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/category/1213059.html</a></p><h2><span id="sql优化策略">sql优化策略</span></h2><p>sql优化的策略有很多，大家可以参考如下:</p><p>(1)任何地方都不要使用select <em> from table_name，请使用具体的字段列表代替”</em>“ ，不要返回用不到的任何字段;<br>(2)对查询进行优化，应尽量避免全表扫描，首先应考虑在where及order by涉及的列建立索引;<br>(3)应尽量避免在where子句中使用or来连接条件，否则将导致引擎放弃使用索引而进行全表扫描;<br>(4)应尽量避免在where子句中使用!=或&lt;&gt;操作符，否则将导致引擎放弃使用索引而进行全表扫描;<br>(5)int和not in慎用，否则会导致全表扫描;<br>(6)应尽量避免在where子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描;<br>(7)很多时候使用exists代替in是一个好的选择;<br>(8)尽量使用数字型字段，若只含数值信息的字段设计为字符型，这将会降低查询和连接的性能，并会增加存储开销,这是因为引擎在处理查询和连接时会逐个比较字符串职工的每一个字符，而对于数字型而言只需要比较一次就够了;<br>(9)尽可能使用varchar代替char，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些;</p><p>当然远远不止这么多，知识的海洋是无穷的，探索的乐趣亦如此。</p><p>关于sql优化思路，大家可以参考<a href="https://www.cnblogs.com/wcwen1990/p/7204739.html" target="_blank" rel="noopener">SQL优化思路大全</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis错误之org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)</title>
      <link href="/2019/03/05/mybatis%E9%94%99%E8%AF%AF%E4%B9%8Borg-apache-ibatis-binding-BindingException-Invalid-bound-statement-not-found/"/>
      <url>/2019/03/05/mybatis%E9%94%99%E8%AF%AF%E4%B9%8Borg-apache-ibatis-binding-BindingException-Invalid-bound-statement-not-found/</url>
      
        <content type="html"><![CDATA[<p>玩了MyBatis差不多有两年了，中间也玩过MyBatis-Plus,这个MyBatis-Plus其实与MyBatis的区别并不大。今天写博客业务代码的时候，犯一个初学者犯过的错误。<br><a id="more"></a><br>错误信息如下:<br>org.apache.ibatis.binding.BindingException: Invalid bound statement<br>  (not found)</p><p>通常原因是因为Mapper interface和xml文件的定义对不上，通常需要检查包名、namespace、函数名等。</p><p>出现这个错误的原因是我太过相信自我了，觉得自觉没有错，于是手打，结果就是一个单词写错了。</p><p>看代码示例:</p><p>xml:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;resentPosts&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line"> SELECT post_title FROM `wp_posts` WHERE post_status = &apos;publish&apos; ORDER BY post_modified DESC LIMIT 0,5 </span><br><span class="line"> &lt;/select&gt;</span><br></pre></td></tr></table></figure></p><p>dao(interface):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//近期文章</span><br><span class="line">public List&lt;Posts&gt; recentPosts();</span><br></pre></td></tr></table></figure></p><p>大家很容易会看出select标签中的id与dao中的接口函数名不对应。这就是问题的根源，改成一样的，如下(即可解决问题)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;recentPosts&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">  SELECT post_title FROM `wp_posts` WHERE post_status = &apos;publish&apos; ORDER BY post_modified DESC LIMIT 0,5 </span><br><span class="line">  &lt;/select&gt;</span><br></pre></td></tr></table></figure><p>最后说一句，遇到问题不要慌，找到问题关键信息，复制到百度上/谷歌或者stackoverflow即可找到答案。</p><p>太阳底下没有新鲜事儿，你遇到过的，说不定别人也遇到过。</p><p>参考链接:<a href="https://www.cnblogs.com/lfm601508022/p/InvalidBoundStatement.html" target="_blank" rel="noopener">https://www.cnblogs.com/lfm601508022/p/InvalidBoundStatement.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js服务端程序在Linux上持久运行</title>
      <link href="/2019/03/05/node-js%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/"/>
      <url>/2019/03/05/node-js%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>如果要想在服务端部署node.js程序，让其持久化运行，就不能单单使用npm start命令运行，当然了，这样运行是毫无问题的，但是当关闭xshell窗口或者是关闭进程的时候(其实关闭xshell窗口相当于默认关闭进程)，就无法访问对应的node.js服务端程序了。</p><p>那么该如何才能持久访问呢？</p><p>其实也就两步<br><a id="more"></a></p><h4><span id="第一步安装forever">第一步安装forever</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install forever 或者 npminstall -g forever</span><br></pre></td></tr></table></figure><h4><span id="第二步运行对应的js">第二步运行对应的js</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forver start index.js</span><br></pre></td></tr></table></figure><h5><span id="注意你可能会遇到如下错误">注意(你可能会遇到如下错误):</span></h5><p>错误信息:<br>forever: command not found</p><p>原因:以Windows来说，通常这种错误是因为没有配置好环境变量，解决方案也很简单就是配置好环境变量或者是使用绝对路径</p><p>解决方式(Linux演示，这里我使用绝对路径):</p><h5><span id="如何找到绝对路径呢">如何找到绝对路径呢？</span></h5><p>通过该命令可以获取node.js的安装模块,npm list -g –depth 0<br>├── <a href="mailto:ali-oss@6.1.0" target="_blank" rel="noopener">ali-oss@6.1.0</a><br>├── <a href="mailto:forever@0.15.3" target="_blank" rel="noopener">forever@0.15.3</a><br>└── <a href="mailto:npm@6.4.1" target="_blank" rel="noopener">npm@6.4.1</a></p><p>再通过关键字搜索 find / -name forever<br>/home/youcong/mock-github-api/node_modules/forever<br>/home/youcong/mock-github-api/node_modules/forever/lib/forever<br>/home/youcong/mock-github-api/node_modules/forever/bin/forever<br>/home/youcong/mock-github-api/node_modules/.bin/forever<br>/home/youcong/nodejs/lib/node_modules/forever<br>/home/youcong/nodejs/lib/node_modules/forever/lib/forever<br>/home/youcong/nodejs/lib/node_modules/forever/bin/forever<br>/home/youcong/nodejs/bin/forever</p><p>最后通过/home/youcong/mock-github-api/node_modules/forever/bin/forever start index.js 即可实现node.js服务端程序在Linux上持久运行。</p><h5><span id="forever常用命令">forever常用命令</span></h5><p>forever start app.js //启动程序</p><p>forever stop app.js //关闭程序</p><p>forever start -l forever.log -o out.log -e err.log app.js //启动程序并输出日志</p><p>forever restart app.js //重启程序</p><p>forever list //查看正在运行的进程</p><h6><span id="参考链接">参考链接:</span></h6><p>forever:command not found:<a href="https://blog.csdn.net/xgbm_k/article/details/78132293" target="_blank" rel="noopener">https://blog.csdn.net/xgbm_k/article/details/78132293</a><br>node.js在Linux上如何持久运行:<a href="https://blog.csdn.net/shakdy/article/details/82938679" target="_blank" rel="noopener">https://blog.csdn.net/shakdy/article/details/82938679</a><br>node.js后台运行方法:<a href="https://blog.csdn.net/zdyueguanyun/article/details/79043483" target="_blank" rel="noopener">https://blog.csdn.net/zdyueguanyun/article/details/79043483</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js读写文件</title>
      <link href="/2019/03/04/node-js%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/"/>
      <url>/2019/03/04/node-js%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>关于node.js的读写操作，应用场景有很多。<br>比如其中这样的一个场景，如何获取全局的token。<br>这就涉及到写和读操作了。<br><a id="more"></a><br>写操作:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var fs = require(&quot;fs&quot;);</span><br><span class="line"></span><br><span class="line">function storeToken(token)&#123;</span><br><span class="line"></span><br><span class="line">fs.writeFile(&apos;D://youcongtech//token.txt&apos;,token.slice(10),&apos;utf8&apos;,function(error)&#123;</span><br><span class="line"></span><br><span class="line">if(error)&#123;</span><br><span class="line">console.log(error);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">console.log(&apos;write success&apos;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>读操作:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var fs = require(&quot;fs&quot;);</span><br><span class="line"></span><br><span class="line">function readToken()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fs.readFile(&apos;D://youcongtech//token.txt&apos;, function (err, data) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">return console.error(err);</span><br><span class="line">&#125;</span><br><span class="line">console.log(data.toString());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过上述两个示例代码，就可以达到存取token的目的，这样一来就不必担心如何获取token问题。<br>当然了，问题的解决方式不止这一个，其实还可以用redis来存储token。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript之传输加密</title>
      <link href="/2019/03/04/javascript%E4%B9%8B%E4%BC%A0%E8%BE%93%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/03/04/javascript%E4%B9%8B%E4%BC%A0%E8%BE%93%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>为什么要使用javascript加密呢？<br>服务端加密远远不够，客户端或者浏览器端也需要加密，以此保证传输信息过程的安全。</p><p>今天就我工作中说说这么几种加密算法及其对应的应用场景，如下所示:</p><ul><li>base64</li><li>md5</li><li>des</li></ul><a id="more"></a><h3><span id="一-base64">一、Base64</span></h3><p>Base64通常可以用于Cookie加密，比如每个用户通过相关操作，对应的用户和数据库信息会有对应的更新，为了保证对应的用户在web端看到的信息一致，我们使用Cookie，而Cookie如果是明文的话，不是特别安全，因此我们采用Base64对其进行加密。</p><p>示例代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;base64加密解密&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 创建Base64对象</span><br><span class="line">var Base64 = &#123;</span><br><span class="line"> _keyStr: &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,</span><br><span class="line"> encode: function(e) &#123;</span><br><span class="line">  var t = &quot;&quot;;</span><br><span class="line">  var n, r, i, s, o, u, a;</span><br><span class="line">  var f = 0;</span><br><span class="line">  e = Base64._utf8_encode(e);</span><br><span class="line">  while (f &lt; e.length) &#123;</span><br><span class="line">   n = e.charCodeAt(f++);</span><br><span class="line">   r = e.charCodeAt(f++);</span><br><span class="line">   i = e.charCodeAt(f++);</span><br><span class="line">   s = n &gt;&gt; 2;</span><br><span class="line">   o = (n &amp; 3) &lt;&lt; 4 | r &gt;&gt; 4;</span><br><span class="line">   u = (r &amp; 15) &lt;&lt; 2 | i &gt;&gt; 6;</span><br><span class="line">   a = i &amp; 63;</span><br><span class="line">   if (isNaN(r)) &#123;</span><br><span class="line">    u = a = 64</span><br><span class="line">   &#125; else if (isNaN(i)) &#123;</span><br><span class="line">    a = 64</span><br><span class="line">   &#125;</span><br><span class="line">   t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a)</span><br><span class="line">  &#125;</span><br><span class="line">  return t</span><br><span class="line"> &#125;,</span><br><span class="line"> decode: function(e) &#123;</span><br><span class="line">  var t = &quot;&quot;;</span><br><span class="line">  var n, r, i;</span><br><span class="line">  var s, o, u, a;</span><br><span class="line">  var f = 0;</span><br><span class="line">  e=e.replace(/[^A-Za-z0-9+/=]/g,&quot;&quot;);</span><br><span class="line">  while (f &lt; e.length) &#123;</span><br><span class="line">   s = this._keyStr.indexOf(e.charAt(f++));</span><br><span class="line">   o = this._keyStr.indexOf(e.charAt(f++));</span><br><span class="line">   u = this._keyStr.indexOf(e.charAt(f++));</span><br><span class="line">   a = this._keyStr.indexOf(e.charAt(f++));</span><br><span class="line">   n = s &lt;&lt; 2 | o &gt;&gt; 4;</span><br><span class="line">   r = (o &amp; 15) &lt;&lt; 4 | u &gt;&gt; 2;</span><br><span class="line">   i = (u &amp; 3) &lt;&lt; 6 | a;</span><br><span class="line">   t = t + String.fromCharCode(n);</span><br><span class="line">   if (u != 64) &#123;</span><br><span class="line">    t = t + String.fromCharCode(r)</span><br><span class="line">   &#125;</span><br><span class="line">   if (a != 64) &#123;</span><br><span class="line">    t = t + String.fromCharCode(i)</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  t = Base64._utf8_decode(t);</span><br><span class="line">  return t</span><br><span class="line"> &#125;,</span><br><span class="line"> _utf8_encode: function(e) &#123;</span><br><span class="line">  e = e.replace(/rn/g, &quot;n&quot;);</span><br><span class="line">  var t = &quot;&quot;;</span><br><span class="line">  for (var n = 0; n &lt; e.length; n++) &#123;</span><br><span class="line">   var r = e.charCodeAt(n);</span><br><span class="line">   if (r &lt; 128) &#123;</span><br><span class="line">    t += String.fromCharCode(r)</span><br><span class="line">   &#125; else if (r &gt; 127 &amp;&amp; r &lt; 2048) &#123;</span><br><span class="line">    t += String.fromCharCode(r &gt;&gt; 6 | 192);</span><br><span class="line">    t += String.fromCharCode(r &amp; 63 | 128)</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">    t += String.fromCharCode(r &gt;&gt; 12 | 224);</span><br><span class="line">    t += String.fromCharCode(r &gt;&gt; 6 &amp; 63 | 128);</span><br><span class="line">    t += String.fromCharCode(r &amp; 63 | 128)</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return t</span><br><span class="line"> &#125;,</span><br><span class="line"> _utf8_decode: function(e) &#123;</span><br><span class="line">  var t = &quot;&quot;;</span><br><span class="line">  var n = 0;</span><br><span class="line">  var r = c1 = c2 = 0;</span><br><span class="line">  while (n &lt; e.length) &#123;</span><br><span class="line">   r = e.charCodeAt(n);</span><br><span class="line">   if (r &lt; 128) &#123;</span><br><span class="line">    t += String.fromCharCode(r);</span><br><span class="line">    n++</span><br><span class="line">   &#125; else if (r &gt; 191 &amp;&amp; r &lt; 224) &#123;</span><br><span class="line">    c2 = e.charCodeAt(n + 1);</span><br><span class="line">    t += String.fromCharCode((r &amp; 31) &lt;&lt; 6 | c2 &amp; 63);</span><br><span class="line">    n += 2</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">    c2 = e.charCodeAt(n + 1);</span><br><span class="line">    c3 = e.charCodeAt(n + 2);</span><br><span class="line">    t += String.fromCharCode((r &amp; 15) &lt;&lt; 12 | (c2 &amp; 63) &lt;&lt; 6 | c3 &amp; 63);</span><br><span class="line">    n += 3</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return t</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 定义字符串</span><br><span class="line">var string = &apos;http://www.youcongtech.com!&apos;;</span><br><span class="line">// 加密</span><br><span class="line">var encodedString = Base64.encode(string);</span><br><span class="line">console.log(encodedString);</span><br><span class="line">// 解密</span><br><span class="line">var decodedString = Base64.decode(encodedString);</span><br><span class="line">console.log(decodedString);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><h3><span id="二-md5">二、MD5</span></h3><h4><span id="1mdt算法特点">1.MDT算法特点</span></h4><p>(1)压缩性:任意长度的数据，算出的MD5值长度都是固定的;<br>(2)容易计算:从原数据计算出MD5值很容易;<br>(3)抗修改性:对原数据进行任何改动，哪怕只修改1个字节，所得到的MD5值都有很大区别;<br>(4)弱抗碰撞:已知原数据和其MD5值，想找到一个具有相同MD5值的数据(既伪造数据)是非常困难的;<br>(5)强抗碰撞:想找到两个不同的数据，使它们具有相同的MD5值，是非常困难的;</p><p>根据以上特点衍生出来可以供我们使用的特性:<br>(1)方便存储:MD5加密处理都是32位的字符串，能够给定固定大小的空间存储、传输、验证;<br>(2)文件加密:MD5算法运用在文件加密上很有优势，因为只需要32位字符串就能对一个巨大的文件进行验证完整性;<br>(3)不可逆:MD5加密出来只会截取末尾32位，具有良好的安全性，如果是对于参数加密很难伪造MD5;<br>(4)加密损耗低:MD5算法加密对于性能的消耗微乎其微(据说0.001毫秒)</p><h4><span id="2md5算法的实际应用">2.MD5算法的实际应用</span></h4><p>(1)用户密码<br>对于用户密码加密最高境界就是:别人获得你数据库的用户资料，别人也没有办法获知密码。<br>一般常用的规则比如:MD5(用户名+用户密码)+MD5(KEY+项目名+公司名)这样可以避免和别人碰库，不排除别人可能用MD5算法来攻击你的服务器。当然了，你还可以多包几层，可以MD5和其它加密算法混合使用(比如DES等)。</p><p>(2)请求参数校验<br>对于服务器而言，排除系统问题，最大的问题就是害怕请求被拦截，拦截修改之后就有很多漏洞的可能性。通常为了避免被拦截，会对请求参数进行校验，就算拦截了请求参数修改了，只要模拟不出MD5加密出来的值，服务器的过滤器会直接将其拦截。</p><p>(3)文件校验<br>对于一些图片或者是一些比较小的文件来说，可以不用MD5算法校验，基本上都是一次请求就完成了上传，而且显示的时候也不需要验证图片的不完整性。<br>如果有一个5MB的文件，客户端将其分割成5份1MB的文件，文件在上传的时候，上传两个MD5值，一个是当前上传的1MB文件流的MD5，另一个是拼接之后的MD5，通过这样的方式也能保证文件的完整性。<br>示例代码如下:</p><p>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script src=&quot;md5.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var code = &quot;123456&quot;;</span><br><span class="line">        var username = &quot;123456&quot;;</span><br><span class="line">        var password = &quot;123456&quot;;</span><br><span class="line">        var str1 = hex_md5(&quot;123456&quot;);</span><br><span class="line">        var str2 = b64_md5(&quot;123456&quot;);</span><br><span class="line">        var str3 = str_md5(&quot;123456&quot;);</span><br><span class="line">        var str4 = hex_hmac_md5(code,code);</span><br><span class="line">        var str5 = b64_hmac_md5(username,username);</span><br><span class="line">        var str6 = str_hmac_md5(password,password);</span><br><span class="line">        console.log(str1);            // e10adc3949ba59abbe56e057f20f883e</span><br><span class="line">        console.log(str2);            // 4QrcOUm6Wau+VuBX8g+IPg</span><br><span class="line">        console.log(str3);            // áÜ9IºY«¾VàWò&gt;</span><br><span class="line">        console.log(str4);            // 30ce71a73bdd908c3955a90e8f7429ef</span><br><span class="line">        console.log(str5);            // MM5xpzvdkIw5VakOj3Qp7w</span><br><span class="line">        console.log(str6);            // 0Îq§;Ý9U©t)ï</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>md5.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message</span><br><span class="line"> * Digest Algorithm, as defined in RFC 1321.</span><br><span class="line"> * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.</span><br><span class="line"> * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet</span><br><span class="line"> * Distributed under the BSD License</span><br><span class="line"> * See http://pajhome.org.uk/crypt/md5 for more info.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Configurable variables. You may need to tweak these to be compatible with</span><br><span class="line"> * the server-side, but the defaults work in most cases.</span><br><span class="line"> */</span><br><span class="line">var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */</span><br><span class="line">var b64pad  = &quot;&quot;; /* base-64 pad character. &quot;=&quot; for strict RFC compliance   */</span><br><span class="line">var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * These are the functions you&apos;ll usually want to call</span><br><span class="line"> * They take string arguments and return either hex or base-64 encoded strings</span><br><span class="line"> */</span><br><span class="line">function hex_md5(s)&#123; return binl2hex(core_md5(str2binl(s), s.length * chrsz));&#125;</span><br><span class="line">function b64_md5(s)&#123; return binl2b64(core_md5(str2binl(s), s.length * chrsz));&#125;</span><br><span class="line">function str_md5(s)&#123; return binl2str(core_md5(str2binl(s), s.length * chrsz));&#125;</span><br><span class="line">function hex_hmac_md5(key, data) &#123; return binl2hex(core_hmac_md5(key, data)); &#125;</span><br><span class="line">function b64_hmac_md5(key, data) &#123; return binl2b64(core_hmac_md5(key, data)); &#125;</span><br><span class="line">function str_hmac_md5(key, data) &#123; return binl2str(core_hmac_md5(key, data)); &#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Perform a simple self-test to see if the VM is working</span><br><span class="line"> */</span><br><span class="line">function md5_vm_test()</span><br><span class="line">&#123;</span><br><span class="line">  return hex_md5(&quot;abc&quot;) == &quot;900150983cd24fb0d6963f7d28e17f72&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Calculate the MD5 of an array of little-endian words, and a bit length</span><br><span class="line"> */</span><br><span class="line">function core_md5(x, len)</span><br><span class="line">&#123;</span><br><span class="line">  /* append padding */</span><br><span class="line">  x[len &gt;&gt; 5] |= 0x80 &lt;&lt; ((len) % 32);</span><br><span class="line">  x[(((len + 64) &gt;&gt;&gt; 9) &lt;&lt; 4) + 14] = len;</span><br><span class="line"></span><br><span class="line">  var a =  1732584193;</span><br><span class="line">  var b = -271733879;</span><br><span class="line">  var c = -1732584194;</span><br><span class="line">  var d =  271733878;</span><br><span class="line"></span><br><span class="line">  for(var i = 0; i &lt; x.length; i += 16)</span><br><span class="line">  &#123;</span><br><span class="line">    var olda = a;</span><br><span class="line">    var oldb = b;</span><br><span class="line">    var oldc = c;</span><br><span class="line">    var oldd = d;</span><br><span class="line"></span><br><span class="line">    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);</span><br><span class="line">    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);</span><br><span class="line">    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);</span><br><span class="line">    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);</span><br><span class="line">    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);</span><br><span class="line">    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);</span><br><span class="line">    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);</span><br><span class="line">    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);</span><br><span class="line">    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);</span><br><span class="line">    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);</span><br><span class="line">    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);</span><br><span class="line">    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);</span><br><span class="line">    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);</span><br><span class="line">    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);</span><br><span class="line">    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);</span><br><span class="line">    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);</span><br><span class="line"></span><br><span class="line">    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);</span><br><span class="line">    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);</span><br><span class="line">    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);</span><br><span class="line">    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);</span><br><span class="line">    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);</span><br><span class="line">    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);</span><br><span class="line">    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);</span><br><span class="line">    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);</span><br><span class="line">    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);</span><br><span class="line">    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);</span><br><span class="line">    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);</span><br><span class="line">    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);</span><br><span class="line">    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);</span><br><span class="line">    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);</span><br><span class="line">    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);</span><br><span class="line">    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);</span><br><span class="line"></span><br><span class="line">    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);</span><br><span class="line">    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);</span><br><span class="line">    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);</span><br><span class="line">    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);</span><br><span class="line">    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);</span><br><span class="line">    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);</span><br><span class="line">    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);</span><br><span class="line">    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);</span><br><span class="line">    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);</span><br><span class="line">    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);</span><br><span class="line">    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);</span><br><span class="line">    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);</span><br><span class="line">    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);</span><br><span class="line">    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);</span><br><span class="line">    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);</span><br><span class="line">    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);</span><br><span class="line"></span><br><span class="line">    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);</span><br><span class="line">    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);</span><br><span class="line">    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);</span><br><span class="line">    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);</span><br><span class="line">    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);</span><br><span class="line">    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);</span><br><span class="line">    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);</span><br><span class="line">    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);</span><br><span class="line">    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);</span><br><span class="line">    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);</span><br><span class="line">    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);</span><br><span class="line">    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);</span><br><span class="line">    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);</span><br><span class="line">    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);</span><br><span class="line">    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);</span><br><span class="line">    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);</span><br><span class="line"></span><br><span class="line">    a = safe_add(a, olda);</span><br><span class="line">    b = safe_add(b, oldb);</span><br><span class="line">    c = safe_add(c, oldc);</span><br><span class="line">    d = safe_add(d, oldd);</span><br><span class="line">  &#125;</span><br><span class="line">  return Array(a, b, c, d);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * These functions implement the four basic operations the algorithm uses.</span><br><span class="line"> */</span><br><span class="line">function md5_cmn(q, a, b, x, s, t)</span><br><span class="line">&#123;</span><br><span class="line">  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);</span><br><span class="line">&#125;</span><br><span class="line">function md5_ff(a, b, c, d, x, s, t)</span><br><span class="line">&#123;</span><br><span class="line">  return md5_cmn((b &amp; c) | ((~b) &amp; d), a, b, x, s, t);</span><br><span class="line">&#125;</span><br><span class="line">function md5_gg(a, b, c, d, x, s, t)</span><br><span class="line">&#123;</span><br><span class="line">  return md5_cmn((b &amp; d) | (c &amp; (~d)), a, b, x, s, t);</span><br><span class="line">&#125;</span><br><span class="line">function md5_hh(a, b, c, d, x, s, t)</span><br><span class="line">&#123;</span><br><span class="line">  return md5_cmn(b ^ c ^ d, a, b, x, s, t);</span><br><span class="line">&#125;</span><br><span class="line">function md5_ii(a, b, c, d, x, s, t)</span><br><span class="line">&#123;</span><br><span class="line">  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Calculate the HMAC-MD5, of a key and some data</span><br><span class="line"> */</span><br><span class="line">function core_hmac_md5(key, data)</span><br><span class="line">&#123;</span><br><span class="line">  var bkey = str2binl(key);</span><br><span class="line">  if(bkey.length &gt; 16) bkey = core_md5(bkey, key.length * chrsz);</span><br><span class="line"></span><br><span class="line">  var ipad = Array(16), opad = Array(16);</span><br><span class="line">  for(var i = 0; i &lt; 16; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    ipad[i] = bkey[i] ^ 0x36363636;</span><br><span class="line">    opad[i] = bkey[i] ^ 0x5C5C5C5C;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);</span><br><span class="line">  return core_md5(opad.concat(hash), 512 + 128);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Add integers, wrapping at 2^32. This uses 16-bit operations internally</span><br><span class="line"> * to work around bugs in some JS interpreters.</span><br><span class="line"> */</span><br><span class="line">function safe_add(x, y)</span><br><span class="line">&#123;</span><br><span class="line">  var lsw = (x &amp; 0xFFFF) + (y &amp; 0xFFFF);</span><br><span class="line">  var msw = (x &gt;&gt; 16) + (y &gt;&gt; 16) + (lsw &gt;&gt; 16);</span><br><span class="line">  return (msw &lt;&lt; 16) | (lsw &amp; 0xFFFF);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Bitwise rotate a 32-bit number to the left.</span><br><span class="line"> */</span><br><span class="line">function bit_rol(num, cnt)</span><br><span class="line">&#123;</span><br><span class="line">  return (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (32 - cnt));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Convert a string to an array of little-endian words</span><br><span class="line"> * If chrsz is ASCII, characters &gt;255 have their hi-byte silently ignored.</span><br><span class="line"> */</span><br><span class="line">function str2binl(str)</span><br><span class="line">&#123;</span><br><span class="line">  var bin = Array();</span><br><span class="line">  var mask = (1 &lt;&lt; chrsz) - 1;</span><br><span class="line">  for(var i = 0; i &lt; str.length * chrsz; i += chrsz)</span><br><span class="line">    bin[i&gt;&gt;5] |= (str.charCodeAt(i / chrsz) &amp; mask) &lt;&lt; (i%32);</span><br><span class="line">  return bin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Convert an array of little-endian words to a string</span><br><span class="line"> */</span><br><span class="line">function binl2str(bin)</span><br><span class="line">&#123;</span><br><span class="line">  var str = &quot;&quot;;</span><br><span class="line">  var mask = (1 &lt;&lt; chrsz) - 1;</span><br><span class="line">  for(var i = 0; i &lt; bin.length * 32; i += chrsz)</span><br><span class="line">    str += String.fromCharCode((bin[i&gt;&gt;5] &gt;&gt;&gt; (i % 32)) &amp; mask);</span><br><span class="line">  return str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Convert an array of little-endian words to a hex string.</span><br><span class="line"> */</span><br><span class="line">function binl2hex(binarray)</span><br><span class="line">&#123;</span><br><span class="line">  var hex_tab = hexcase ? &quot;0123456789ABCDEF&quot; : &quot;0123456789abcdef&quot;;</span><br><span class="line">  var str = &quot;&quot;;</span><br><span class="line">  for(var i = 0; i &lt; binarray.length * 4; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    str += hex_tab.charAt((binarray[i&gt;&gt;2] &gt;&gt; ((i%4)*8+4)) &amp; 0xF) +</span><br><span class="line">           hex_tab.charAt((binarray[i&gt;&gt;2] &gt;&gt; ((i%4)*8  )) &amp; 0xF);</span><br><span class="line">  &#125;</span><br><span class="line">  return str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Convert an array of little-endian words to a base-64 string</span><br><span class="line"> */</span><br><span class="line">function binl2b64(binarray)</span><br><span class="line">&#123;</span><br><span class="line">  var tab = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;;</span><br><span class="line">  var str = &quot;&quot;;</span><br><span class="line">  for(var i = 0; i &lt; binarray.length * 4; i += 3)</span><br><span class="line">  &#123;</span><br><span class="line">    var triplet = (((binarray[i   &gt;&gt; 2] &gt;&gt; 8 * ( i   %4)) &amp; 0xFF) &lt;&lt; 16)</span><br><span class="line">                | (((binarray[i+1 &gt;&gt; 2] &gt;&gt; 8 * ((i+1)%4)) &amp; 0xFF) &lt;&lt; 8 )</span><br><span class="line">                |  ((binarray[i+2 &gt;&gt; 2] &gt;&gt; 8 * ((i+2)%4)) &amp; 0xFF);</span><br><span class="line">    for(var j = 0; j &lt; 4; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      if(i * 8 + j * 6 &gt; binarray.length * 32) str += b64pad;</span><br><span class="line">      else str += tab.charAt((triplet &gt;&gt; 6*(3-j)) &amp; 0x3F);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="三-des加密">三、DES加密</span></h3><p>DES是一种典型的块加密方法:将固定长度的明文通过一系列复杂的操作变成同样长度的密文，块的长度为64位。<br>同时，DES使用的密钥来自定义变换过程，因此算法认为只有持有加密所用的密钥的用户才能解密密文。DES的密钥表明上是64位，实际有效密钥长度为56位，其余8位可以用于奇偶校验。</p><p>DES现在已经不被视为一种安全的加密算法，主要原因是它使用的56位密钥过短。</p><p>为了提供实用所需的安全性，可以使用DES的派生算法，3DES来进行加密(虽然3DES也存在理论上的攻击方法)</p><p>示例(DES加密和解密):<br>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;des.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function getResult()&#123;</span><br><span class="line">//待加密字符串</span><br><span class="line">var str = document.getElementById(&quot;str&quot;).innerHTML;</span><br><span class="line">//第一个参数必须；第二个、第三个参数可选</span><br><span class="line">var key1 = &quot;youcongtech&quot;;</span><br><span class="line">var key2 = &quot;test001&quot;;</span><br><span class="line">var key3 = &quot;test002&quot;; </span><br><span class="line">//加密方法</span><br><span class="line">var  enResult = strEnc(str,key1,key2,key3);</span><br><span class="line">//解密方法</span><br><span class="line">var deResult = strDec(enResult,key1,key2,key3);</span><br><span class="line">//展示结果</span><br><span class="line">document.getElementById(&quot;enStr&quot;).innerHTML = enResult; </span><br><span class="line">document.getElementById(&quot;dnStr&quot;).innerHTML = deResult; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;获取加密结果与解密结果&quot; onclick=&quot;getResult()&quot; /&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td align=&quot;left&quot;&gt;字符串：&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;&lt;span id=&quot;str&quot;&gt;admin&lt;/span&gt;&lt;/td&gt; </span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;  </span><br><span class="line">  &lt;td&gt;加密key：&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;key1=&lt;span id=&quot;key1&quot;&gt;1&lt;/span&gt;;key2=&lt;span id=&quot;key2&quot;&gt;2&lt;/span&gt;;key3=&lt;span id=&quot;key3&quot;&gt;3&lt;/span&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td align=&quot;left&quot;&gt;加密结果：&lt;/td&gt;</span><br><span class="line">  &lt;td align=&quot;left&quot;&gt;&lt;label id = &quot;enStr&quot;&gt;&lt;/label&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td align=&quot;left&quot;&gt;解密结果： &lt;/td&gt;</span><br><span class="line">  &lt;td align=&quot;left&quot;&gt;&lt;label id = &quot;dnStr&quot;&gt;&lt;/label&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>des.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* DES加密/解密</span><br><span class="line">* @Copyright Copyright (c) 2006</span><br><span class="line">* @author Guapo</span><br><span class="line">* @see DESCore</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* encrypt the string to string made up of hex</span><br><span class="line">* return the encrypted string</span><br><span class="line">*/</span><br><span class="line">function strEnc(data,firstKey,secondKey,thirdKey)&#123;</span><br><span class="line"></span><br><span class="line"> var leng = data.length;</span><br><span class="line"> var encData = &quot;&quot;;</span><br><span class="line"> var firstKeyBt,secondKeyBt,thirdKeyBt,firstLength,secondLength,thirdLength;</span><br><span class="line"> if(firstKey != null &amp;&amp; firstKey != &quot;&quot;)&#123;    </span><br><span class="line">   firstKeyBt = getKeyBytes(firstKey);</span><br><span class="line">   firstLength = firstKeyBt.length;</span><br><span class="line"> &#125;</span><br><span class="line"> if(secondKey != null &amp;&amp; secondKey != &quot;&quot;)&#123;</span><br><span class="line">   secondKeyBt = getKeyBytes(secondKey);</span><br><span class="line">   secondLength = secondKeyBt.length;</span><br><span class="line"> &#125;</span><br><span class="line"> if(thirdKey != null &amp;&amp; thirdKey != &quot;&quot;)&#123;</span><br><span class="line">   thirdKeyBt = getKeyBytes(thirdKey);</span><br><span class="line">   thirdLength = thirdKeyBt.length;</span><br><span class="line"> &#125;  </span><br><span class="line"> </span><br><span class="line"> if(leng &gt; 0)&#123;</span><br><span class="line">   if(leng &lt; 4)&#123;</span><br><span class="line">     var bt = strToBt(data);      </span><br><span class="line">     var encByte ;</span><br><span class="line">     if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null &amp;&amp; thirdKey != &quot;&quot;)&#123;</span><br><span class="line">       var tempBt;</span><br><span class="line">       var x,y,z;</span><br><span class="line">       tempBt = bt;        </span><br><span class="line">       for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">         tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">       &#125;</span><br><span class="line">       for(y = 0;y &lt; secondLength ;y ++)&#123;</span><br><span class="line">         tempBt = enc(tempBt,secondKeyBt[y]);</span><br><span class="line">       &#125;</span><br><span class="line">       for(z = 0;z &lt; thirdLength ;z ++)&#123;</span><br><span class="line">         tempBt = enc(tempBt,thirdKeyBt[z]);</span><br><span class="line">       &#125;        </span><br><span class="line">       encByte = tempBt;        </span><br><span class="line">     &#125;else&#123;</span><br><span class="line">       if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot;)&#123;</span><br><span class="line">         var tempBt;</span><br><span class="line">         var x,y;</span><br><span class="line">         tempBt = bt;</span><br><span class="line">         for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">         &#125;</span><br><span class="line">         for(y = 0;y &lt; secondLength ;y ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,secondKeyBt[y]);</span><br><span class="line">         &#125;</span><br><span class="line">         encByte = tempBt;</span><br><span class="line">       &#125;else&#123;</span><br><span class="line">         if(firstKey != null &amp;&amp; firstKey !=&quot;&quot;)&#123;            </span><br><span class="line">           var tempBt;</span><br><span class="line">           var x = 0;</span><br><span class="line">           tempBt = bt;            </span><br><span class="line">           for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">             tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">           &#125;</span><br><span class="line">           encByte = tempBt;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;        </span><br><span class="line">     &#125;</span><br><span class="line">     encData = bt64ToHex(encByte);</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">     var iterator = parseInt(leng/4);</span><br><span class="line">     var remainder = leng%4;</span><br><span class="line">     var i=0;      </span><br><span class="line">     for(i = 0;i &lt; iterator;i++)&#123;</span><br><span class="line">       var tempData = data.substring(i*4+0,i*4+4);</span><br><span class="line">       var tempByte = strToBt(tempData);</span><br><span class="line">       var encByte ;</span><br><span class="line">       if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null &amp;&amp; thirdKey != &quot;&quot;)&#123;</span><br><span class="line">         var tempBt;</span><br><span class="line">         var x,y,z;</span><br><span class="line">         tempBt = tempByte;</span><br><span class="line">         for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">         &#125;</span><br><span class="line">         for(y = 0;y &lt; secondLength ;y ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,secondKeyBt[y]);</span><br><span class="line">         &#125;</span><br><span class="line">         for(z = 0;z &lt; thirdLength ;z ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,thirdKeyBt[z]);</span><br><span class="line">         &#125;</span><br><span class="line">         encByte = tempBt;</span><br><span class="line">       &#125;else&#123;</span><br><span class="line">         if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot;)&#123;</span><br><span class="line">           var tempBt;</span><br><span class="line">           var x,y;</span><br><span class="line">           tempBt = tempByte;</span><br><span class="line">           for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">             tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">           &#125;</span><br><span class="line">           for(y = 0;y &lt; secondLength ;y ++)&#123;</span><br><span class="line">             tempBt = enc(tempBt,secondKeyBt[y]);</span><br><span class="line">           &#125;</span><br><span class="line">           encByte = tempBt;</span><br><span class="line">         &#125;else&#123;</span><br><span class="line">           if(firstKey != null &amp;&amp; firstKey !=&quot;&quot;)&#123;                      </span><br><span class="line">             var tempBt;</span><br><span class="line">             var x;</span><br><span class="line">             tempBt = tempByte;</span><br><span class="line">             for(x = 0;x &lt; firstLength ;x ++)&#123;                </span><br><span class="line">               tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">             &#125;</span><br><span class="line">             encByte = tempBt;              </span><br><span class="line">           &#125;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       encData += bt64ToHex(encByte);</span><br><span class="line">     &#125;      </span><br><span class="line">     if(remainder &gt; 0)&#123;</span><br><span class="line">       var remainderData = data.substring(iterator*4+0,leng);</span><br><span class="line">       var tempByte = strToBt(remainderData);</span><br><span class="line">       var encByte ;</span><br><span class="line">       if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null &amp;&amp; thirdKey != &quot;&quot;)&#123;</span><br><span class="line">         var tempBt;</span><br><span class="line">         var x,y,z;</span><br><span class="line">         tempBt = tempByte;</span><br><span class="line">         for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">         &#125;</span><br><span class="line">         for(y = 0;y &lt; secondLength ;y ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,secondKeyBt[y]);</span><br><span class="line">         &#125;</span><br><span class="line">         for(z = 0;z &lt; thirdLength ;z ++)&#123;</span><br><span class="line">           tempBt = enc(tempBt,thirdKeyBt[z]);</span><br><span class="line">         &#125;</span><br><span class="line">         encByte = tempBt;</span><br><span class="line">       &#125;else&#123;</span><br><span class="line">         if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot;)&#123;</span><br><span class="line">           var tempBt;</span><br><span class="line">           var x,y;</span><br><span class="line">           tempBt = tempByte;</span><br><span class="line">           for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">             tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">           &#125;</span><br><span class="line">           for(y = 0;y &lt; secondLength ;y ++)&#123;</span><br><span class="line">             tempBt = enc(tempBt,secondKeyBt[y]);</span><br><span class="line">           &#125;</span><br><span class="line">           encByte = tempBt;</span><br><span class="line">         &#125;else&#123;</span><br><span class="line">           if(firstKey != null &amp;&amp; firstKey !=&quot;&quot;)&#123;            </span><br><span class="line">             var tempBt;</span><br><span class="line">             var x;</span><br><span class="line">             tempBt = tempByte;</span><br><span class="line">             for(x = 0;x &lt; firstLength ;x ++)&#123;</span><br><span class="line">               tempBt = enc(tempBt,firstKeyBt[x]);</span><br><span class="line">             &#125;</span><br><span class="line">             encByte = tempBt;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       encData += bt64ToHex(encByte);</span><br><span class="line">     &#125;                </span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> return encData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* decrypt the encrypted string to the original string </span><br><span class="line">*</span><br><span class="line">* return  the original string  </span><br><span class="line">*/</span><br><span class="line">function strDec(data,firstKey,secondKey,thirdKey)&#123;</span><br><span class="line"> var leng = data.length;</span><br><span class="line"> var decStr = &quot;&quot;;</span><br><span class="line"> var firstKeyBt,secondKeyBt,thirdKeyBt,firstLength,secondLength,thirdLength;</span><br><span class="line"> if(firstKey != null &amp;&amp; firstKey != &quot;&quot;)&#123;    </span><br><span class="line">   firstKeyBt = getKeyBytes(firstKey);</span><br><span class="line">   firstLength = firstKeyBt.length;</span><br><span class="line"> &#125;</span><br><span class="line"> if(secondKey != null &amp;&amp; secondKey != &quot;&quot;)&#123;</span><br><span class="line">   secondKeyBt = getKeyBytes(secondKey);</span><br><span class="line">   secondLength = secondKeyBt.length;</span><br><span class="line"> &#125;</span><br><span class="line"> if(thirdKey != null &amp;&amp; thirdKey != &quot;&quot;)&#123;</span><br><span class="line">   thirdKeyBt = getKeyBytes(thirdKey);</span><br><span class="line">   thirdLength = thirdKeyBt.length;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> var iterator = parseInt(leng/16);</span><br><span class="line"> var i=0;  </span><br><span class="line"> for(i = 0;i &lt; iterator;i++)&#123;</span><br><span class="line">   var tempData = data.substring(i*16+0,i*16+16);    </span><br><span class="line">   var strByte = hexToBt64(tempData);    </span><br><span class="line">   var intByte = new Array(64);</span><br><span class="line">   var j = 0;</span><br><span class="line">   for(j = 0;j &lt; 64; j++)&#123;</span><br><span class="line">     intByte[j] = parseInt(strByte.substring(j,j+1));</span><br><span class="line">   &#125;    </span><br><span class="line">   var decByte;</span><br><span class="line">   if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null &amp;&amp; thirdKey != &quot;&quot;)&#123;</span><br><span class="line">     var tempBt;</span><br><span class="line">     var x,y,z;</span><br><span class="line">     tempBt = intByte;</span><br><span class="line">     for(x = thirdLength - 1;x &gt;= 0;x --)&#123;</span><br><span class="line">       tempBt = dec(tempBt,thirdKeyBt[x]);</span><br><span class="line">     &#125;</span><br><span class="line">     for(y = secondLength - 1;y &gt;= 0;y --)&#123;</span><br><span class="line">       tempBt = dec(tempBt,secondKeyBt[y]);</span><br><span class="line">     &#125;</span><br><span class="line">     for(z = firstLength - 1;z &gt;= 0 ;z --)&#123;</span><br><span class="line">       tempBt = dec(tempBt,firstKeyBt[z]);</span><br><span class="line">     &#125;</span><br><span class="line">     decByte = tempBt;</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">     if(firstKey != null &amp;&amp; firstKey !=&quot;&quot; &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot;)&#123;</span><br><span class="line">       var tempBt;</span><br><span class="line">       var x,y,z;</span><br><span class="line">       tempBt = intByte;</span><br><span class="line">       for(x = secondLength - 1;x &gt;= 0 ;x --)&#123;</span><br><span class="line">         tempBt = dec(tempBt,secondKeyBt[x]);</span><br><span class="line">       &#125;</span><br><span class="line">       for(y = firstLength - 1;y &gt;= 0 ;y --)&#123;</span><br><span class="line">         tempBt = dec(tempBt,firstKeyBt[y]);</span><br><span class="line">       &#125;</span><br><span class="line">       decByte = tempBt;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">       if(firstKey != null &amp;&amp; firstKey !=&quot;&quot;)&#123;</span><br><span class="line">         var tempBt;</span><br><span class="line">         var x,y,z;</span><br><span class="line">         tempBt = intByte;</span><br><span class="line">         for(x = firstLength - 1;x &gt;= 0 ;x --)&#123;</span><br><span class="line">           tempBt = dec(tempBt,firstKeyBt[x]);</span><br><span class="line">         &#125;</span><br><span class="line">         decByte = tempBt;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   decStr += byteToString(decByte);</span><br><span class="line"> &#125;      </span><br><span class="line"> return decStr;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">* chang the string into the bit array</span><br><span class="line">* </span><br><span class="line">* return bit array(it&apos;s length % 64 = 0)</span><br><span class="line">*/</span><br><span class="line">function getKeyBytes(key)&#123;</span><br><span class="line"> var keyBytes = new Array();</span><br><span class="line"> var leng = key.length;</span><br><span class="line"> var iterator = parseInt(leng/4);</span><br><span class="line"> var remainder = leng%4;</span><br><span class="line"> var i = 0;</span><br><span class="line"> for(i = 0;i &lt; iterator; i ++)&#123;</span><br><span class="line">   keyBytes[i] = strToBt(key.substring(i*4+0,i*4+4));</span><br><span class="line"> &#125;</span><br><span class="line"> if(remainder &gt; 0)&#123;</span><br><span class="line">   keyBytes[i] = strToBt(key.substring(i*4+0,leng));</span><br><span class="line"> &#125;    </span><br><span class="line"> return keyBytes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* chang the string(it&apos;s length &lt;= 4) into the bit array</span><br><span class="line">* </span><br><span class="line">* return bit array(it&apos;s length = 64)</span><br><span class="line">*/</span><br><span class="line">function strToBt(str)&#123;  </span><br><span class="line"> var leng = str.length;</span><br><span class="line"> var bt = new Array(64);</span><br><span class="line"> if(leng &lt; 4)&#123;</span><br><span class="line">   var i=0,j=0,p=0,q=0;</span><br><span class="line">   for(i = 0;i&lt;leng;i++)&#123;</span><br><span class="line">     var k = str.charCodeAt(i);</span><br><span class="line">     for(j=0;j&lt;16;j++)&#123;      </span><br><span class="line">       var pow=1,m=0;</span><br><span class="line">       for(m=15;m&gt;j;m--)&#123;</span><br><span class="line">         pow *= 2;</span><br><span class="line">       &#125;        </span><br><span class="line">       bt[16*i+j]=parseInt(k/pow)%2;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   for(p = leng;p&lt;4;p++)&#123;</span><br><span class="line">     var k = 0;</span><br><span class="line">     for(q=0;q&lt;16;q++)&#123;      </span><br><span class="line">       var pow=1,m=0;</span><br><span class="line">       for(m=15;m&gt;q;m--)&#123;</span><br><span class="line">         pow *= 2;</span><br><span class="line">       &#125;        </span><br><span class="line">       bt[16*p+q]=parseInt(k/pow)%2;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;  </span><br><span class="line"> &#125;else&#123;</span><br><span class="line">   for(i = 0;i&lt;4;i++)&#123;</span><br><span class="line">     var k = str.charCodeAt(i);</span><br><span class="line">     for(j=0;j&lt;16;j++)&#123;      </span><br><span class="line">       var pow=1;</span><br><span class="line">       for(m=15;m&gt;j;m--)&#123;</span><br><span class="line">         pow *= 2;</span><br><span class="line">       &#125;        </span><br><span class="line">       bt[16*i+j]=parseInt(k/pow)%2;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;  </span><br><span class="line"> &#125;</span><br><span class="line"> return bt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* chang the bit(it&apos;s length = 4) into the hex</span><br><span class="line">* </span><br><span class="line">* return hex</span><br><span class="line">*/</span><br><span class="line">function bt4ToHex(binary) &#123;</span><br><span class="line"> var hex;</span><br><span class="line"> switch (binary) &#123;</span><br><span class="line">   case &quot;0000&quot; : hex = &quot;0&quot;; break;</span><br><span class="line">   case &quot;0001&quot; : hex = &quot;1&quot;; break;</span><br><span class="line">   case &quot;0010&quot; : hex = &quot;2&quot;; break;</span><br><span class="line">   case &quot;0011&quot; : hex = &quot;3&quot;; break;</span><br><span class="line">   case &quot;0100&quot; : hex = &quot;4&quot;; break;</span><br><span class="line">   case &quot;0101&quot; : hex = &quot;5&quot;; break;</span><br><span class="line">   case &quot;0110&quot; : hex = &quot;6&quot;; break;</span><br><span class="line">   case &quot;0111&quot; : hex = &quot;7&quot;; break;</span><br><span class="line">   case &quot;1000&quot; : hex = &quot;8&quot;; break;</span><br><span class="line">   case &quot;1001&quot; : hex = &quot;9&quot;; break;</span><br><span class="line">   case &quot;1010&quot; : hex = &quot;A&quot;; break;</span><br><span class="line">   case &quot;1011&quot; : hex = &quot;B&quot;; break;</span><br><span class="line">   case &quot;1100&quot; : hex = &quot;C&quot;; break;</span><br><span class="line">   case &quot;1101&quot; : hex = &quot;D&quot;; break;</span><br><span class="line">   case &quot;1110&quot; : hex = &quot;E&quot;; break;</span><br><span class="line">   case &quot;1111&quot; : hex = &quot;F&quot;; break;</span><br><span class="line"> &#125;</span><br><span class="line"> return hex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* chang the hex into the bit(it&apos;s length = 4)</span><br><span class="line">* </span><br><span class="line">* return the bit(it&apos;s length = 4)</span><br><span class="line">*/</span><br><span class="line">function hexToBt4(hex) &#123;</span><br><span class="line"> var binary;</span><br><span class="line"> switch (hex) &#123;</span><br><span class="line">   case &quot;0&quot; : binary = &quot;0000&quot;; break;</span><br><span class="line">   case &quot;1&quot; : binary = &quot;0001&quot;; break;</span><br><span class="line">   case &quot;2&quot; : binary = &quot;0010&quot;; break;</span><br><span class="line">   case &quot;3&quot; : binary = &quot;0011&quot;; break;</span><br><span class="line">   case &quot;4&quot; : binary = &quot;0100&quot;; break;</span><br><span class="line">   case &quot;5&quot; : binary = &quot;0101&quot;; break;</span><br><span class="line">   case &quot;6&quot; : binary = &quot;0110&quot;; break;</span><br><span class="line">   case &quot;7&quot; : binary = &quot;0111&quot;; break;</span><br><span class="line">   case &quot;8&quot; : binary = &quot;1000&quot;; break;</span><br><span class="line">   case &quot;9&quot; : binary = &quot;1001&quot;; break;</span><br><span class="line">   case &quot;A&quot; : binary = &quot;1010&quot;; break;</span><br><span class="line">   case &quot;B&quot; : binary = &quot;1011&quot;; break;</span><br><span class="line">   case &quot;C&quot; : binary = &quot;1100&quot;; break;</span><br><span class="line">   case &quot;D&quot; : binary = &quot;1101&quot;; break;</span><br><span class="line">   case &quot;E&quot; : binary = &quot;1110&quot;; break;</span><br><span class="line">   case &quot;F&quot; : binary = &quot;1111&quot;; break;</span><br><span class="line"> &#125;</span><br><span class="line"> return binary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* chang the bit(it&apos;s length = 64) into the string</span><br><span class="line">* </span><br><span class="line">* return string</span><br><span class="line">*/</span><br><span class="line">function byteToString(byteData)&#123;</span><br><span class="line"> var str=&quot;&quot;;</span><br><span class="line"> for(i = 0;i&lt;4;i++)&#123;</span><br><span class="line">   var count=0;</span><br><span class="line">   for(j=0;j&lt;16;j++)&#123;        </span><br><span class="line">     var pow=1;</span><br><span class="line">     for(m=15;m&gt;j;m--)&#123;</span><br><span class="line">       pow*=2;</span><br><span class="line">     &#125;              </span><br><span class="line">     count+=byteData[16*i+j]*pow;</span><br><span class="line">   &#125;        </span><br><span class="line">   if(count != 0)&#123;</span><br><span class="line">     str+=String.fromCharCode(count);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> return str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function bt64ToHex(byteData)&#123;</span><br><span class="line"> var hex = &quot;&quot;;</span><br><span class="line"> for(i = 0;i&lt;16;i++)&#123;</span><br><span class="line">   var bt = &quot;&quot;;</span><br><span class="line">   for(j=0;j&lt;4;j++)&#123;    </span><br><span class="line">     bt += byteData[i*4+j];</span><br><span class="line">   &#125;    </span><br><span class="line">   hex+=bt4ToHex(bt);</span><br><span class="line"> &#125;</span><br><span class="line"> return hex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function hexToBt64(hex)&#123;</span><br><span class="line"> var binary = &quot;&quot;;</span><br><span class="line"> for(i = 0;i&lt;16;i++)&#123;</span><br><span class="line">   binary+=hexToBt4(hex.substring(i,i+1));</span><br><span class="line"> &#125;</span><br><span class="line"> return binary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* the 64 bit des core arithmetic</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">function enc(dataByte,keyByte)&#123;  </span><br><span class="line"> var keys = generateKeys(keyByte);    </span><br><span class="line"> var ipByte   = initPermute(dataByte);  </span><br><span class="line"> var ipLeft   = new Array(32);</span><br><span class="line"> var ipRight  = new Array(32);</span><br><span class="line"> var tempLeft = new Array(32);</span><br><span class="line"> var i = 0,j = 0,k = 0,m = 0, n = 0;</span><br><span class="line"> for(k = 0;k &lt; 32;k ++)&#123;</span><br><span class="line">   ipLeft[k] = ipByte[k];</span><br><span class="line">   ipRight[k] = ipByte[32+k];</span><br><span class="line"> &#125;    </span><br><span class="line"> for(i = 0;i &lt; 16;i ++)&#123;</span><br><span class="line">   for(j = 0;j &lt; 32;j ++)&#123;</span><br><span class="line">     tempLeft[j] = ipLeft[j];</span><br><span class="line">     ipLeft[j] = ipRight[j];      </span><br><span class="line">   &#125;  </span><br><span class="line">   var key = new Array(48);</span><br><span class="line">   for(m = 0;m &lt; 48;m ++)&#123;</span><br><span class="line">     key[m] = keys[i][m];</span><br><span class="line">   &#125;</span><br><span class="line">   var  tempRight = xor(pPermute(sBoxPermute(xor(expandPermute(ipRight),key))), tempLeft);      </span><br><span class="line">   for(n = 0;n &lt; 32;n ++)&#123;</span><br><span class="line">     ipRight[n] = tempRight[n];</span><br><span class="line">   &#125;  </span><br><span class="line">   </span><br><span class="line"> &#125;  </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> var finalData =new Array(64);</span><br><span class="line"> for(i = 0;i &lt; 32;i ++)&#123;</span><br><span class="line">   finalData[i] = ipRight[i];</span><br><span class="line">   finalData[32+i] = ipLeft[i];</span><br><span class="line"> &#125;</span><br><span class="line"> return finallyPermute(finalData);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dec(dataByte,keyByte)&#123;  </span><br><span class="line"> var keys = generateKeys(keyByte);    </span><br><span class="line"> var ipByte   = initPermute(dataByte);  </span><br><span class="line"> var ipLeft   = new Array(32);</span><br><span class="line"> var ipRight  = new Array(32);</span><br><span class="line"> var tempLeft = new Array(32);</span><br><span class="line"> var i = 0,j = 0,k = 0,m = 0, n = 0;</span><br><span class="line"> for(k = 0;k &lt; 32;k ++)&#123;</span><br><span class="line">   ipLeft[k] = ipByte[k];</span><br><span class="line">   ipRight[k] = ipByte[32+k];</span><br><span class="line"> &#125;  </span><br><span class="line"> for(i = 15;i &gt;= 0;i --)&#123;</span><br><span class="line">   for(j = 0;j &lt; 32;j ++)&#123;</span><br><span class="line">     tempLeft[j] = ipLeft[j];</span><br><span class="line">     ipLeft[j] = ipRight[j];      </span><br><span class="line">   &#125;  </span><br><span class="line">   var key = new Array(48);</span><br><span class="line">   for(m = 0;m &lt; 48;m ++)&#123;</span><br><span class="line">     key[m] = keys[i][m];</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   var  tempRight = xor(pPermute(sBoxPermute(xor(expandPermute(ipRight),key))), tempLeft);      </span><br><span class="line">   for(n = 0;n &lt; 32;n ++)&#123;</span><br><span class="line">     ipRight[n] = tempRight[n];</span><br><span class="line">   &#125;  </span><br><span class="line"> &#125;  </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> var finalData =new Array(64);</span><br><span class="line"> for(i = 0;i &lt; 32;i ++)&#123;</span><br><span class="line">   finalData[i] = ipRight[i];</span><br><span class="line">   finalData[32+i] = ipLeft[i];</span><br><span class="line"> &#125;</span><br><span class="line"> return finallyPermute(finalData);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function initPermute(originalData)&#123;</span><br><span class="line"> var ipByte = new Array(64);</span><br><span class="line"> for (i = 0, m = 1, n = 0; i &lt; 4; i++, m += 2, n += 2) &#123;</span><br><span class="line">   for (j = 7, k = 0; j &gt;= 0; j--, k++) &#123;</span><br><span class="line">     ipByte[i * 8 + k] = originalData[j * 8 + m];</span><br><span class="line">     ipByte[i * 8 + k + 32] = originalData[j * 8 + n];</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;    </span><br><span class="line"> return ipByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function expandPermute(rightData)&#123;  </span><br><span class="line"> var epByte = new Array(48);</span><br><span class="line"> for (i = 0; i &lt; 8; i++) &#123;</span><br><span class="line">   if (i == 0) &#123;</span><br><span class="line">     epByte[i * 6 + 0] = rightData[31];</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">     epByte[i * 6 + 0] = rightData[i * 4 - 1];</span><br><span class="line">   &#125;</span><br><span class="line">   epByte[i * 6 + 1] = rightData[i * 4 + 0];</span><br><span class="line">   epByte[i * 6 + 2] = rightData[i * 4 + 1];</span><br><span class="line">   epByte[i * 6 + 3] = rightData[i * 4 + 2];</span><br><span class="line">   epByte[i * 6 + 4] = rightData[i * 4 + 3];</span><br><span class="line">   if (i == 7) &#123;</span><br><span class="line">     epByte[i * 6 + 5] = rightData[0];</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">     epByte[i * 6 + 5] = rightData[i * 4 + 4];</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;      </span><br><span class="line"> return epByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function xor(byteOne,byteTwo)&#123;  </span><br><span class="line"> var xorByte = new Array(byteOne.length);</span><br><span class="line"> for(i = 0;i &lt; byteOne.length; i ++)&#123;      </span><br><span class="line">   xorByte[i] = byteOne[i] ^ byteTwo[i];</span><br><span class="line"> &#125;  </span><br><span class="line"> return xorByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function sBoxPermute(expandByte)&#123;</span><br><span class="line"> </span><br><span class="line">   var sBoxByte = new Array(32);</span><br><span class="line">   var binary = &quot;&quot;;</span><br><span class="line">   var s1 = [</span><br><span class="line">       [14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7],</span><br><span class="line">       [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8],</span><br><span class="line">       [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0],</span><br><span class="line">       [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 ]];</span><br><span class="line"></span><br><span class="line">       /* Table - s2 */</span><br><span class="line">   var s2 = [</span><br><span class="line">       [15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10],</span><br><span class="line">       [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5],</span><br><span class="line">       [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15],</span><br><span class="line">       [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 ]];</span><br><span class="line"></span><br><span class="line">       /* Table - s3 */</span><br><span class="line">   var s3= [</span><br><span class="line">       [10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8],</span><br><span class="line">       [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1],</span><br><span class="line">       [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7],</span><br><span class="line">       [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 ]];</span><br><span class="line">       /* Table - s4 */</span><br><span class="line">   var s4 = [</span><br><span class="line">       [7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15],</span><br><span class="line">       [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9],</span><br><span class="line">       [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4],</span><br><span class="line">       [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 ]];</span><br><span class="line"></span><br><span class="line">       /* Table - s5 */</span><br><span class="line">   var s5 = [</span><br><span class="line">       [2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9],</span><br><span class="line">       [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6],</span><br><span class="line">       [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14],</span><br><span class="line">       [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 ]];</span><br><span class="line"></span><br><span class="line">       /* Table - s6 */</span><br><span class="line">   var s6 = [</span><br><span class="line">       [12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11],</span><br><span class="line">       [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8],</span><br><span class="line">       [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6],</span><br><span class="line">       [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 ]];</span><br><span class="line"></span><br><span class="line">       /* Table - s7 */</span><br><span class="line">   var s7 = [</span><br><span class="line">       [4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1],</span><br><span class="line">       [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6],</span><br><span class="line">       [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2],</span><br><span class="line">       [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]];</span><br><span class="line"></span><br><span class="line">       /* Table - s8 */</span><br><span class="line">   var s8 = [</span><br><span class="line">       [13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7],</span><br><span class="line">       [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2],</span><br><span class="line">       [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8],</span><br><span class="line">       [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]];</span><br><span class="line">   </span><br><span class="line">   for(m=0;m&lt;8;m++)&#123;</span><br><span class="line">   var i=0,j=0;</span><br><span class="line">   i = expandByte[m*6+0]*2+expandByte[m*6+5];</span><br><span class="line">   j = expandByte[m * 6 + 1] * 2 * 2 * 2 </span><br><span class="line">     + expandByte[m * 6 + 2] * 2* 2 </span><br><span class="line">     + expandByte[m * 6 + 3] * 2 </span><br><span class="line">     + expandByte[m * 6 + 4];</span><br><span class="line">   switch (m) &#123;</span><br><span class="line">     case 0 :</span><br><span class="line">       binary = getBoxBinary(s1[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 1 :</span><br><span class="line">       binary = getBoxBinary(s2[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 2 :</span><br><span class="line">       binary = getBoxBinary(s3[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 3 :</span><br><span class="line">       binary = getBoxBinary(s4[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 4 :</span><br><span class="line">       binary = getBoxBinary(s5[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 5 :</span><br><span class="line">       binary = getBoxBinary(s6[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 6 :</span><br><span class="line">       binary = getBoxBinary(s7[i][j]);</span><br><span class="line">       break;</span><br><span class="line">     case 7 :</span><br><span class="line">       binary = getBoxBinary(s8[i][j]);</span><br><span class="line">       break;</span><br><span class="line">   &#125;      </span><br><span class="line">   sBoxByte[m*4+0] = parseInt(binary.substring(0,1));</span><br><span class="line">   sBoxByte[m*4+1] = parseInt(binary.substring(1,2));</span><br><span class="line">   sBoxByte[m*4+2] = parseInt(binary.substring(2,3));</span><br><span class="line">   sBoxByte[m*4+3] = parseInt(binary.substring(3,4));</span><br><span class="line"> &#125;</span><br><span class="line"> return sBoxByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function pPermute(sBoxByte)&#123;</span><br><span class="line"> var pBoxPermute = new Array(32);</span><br><span class="line"> pBoxPermute[ 0] = sBoxByte[15]; </span><br><span class="line"> pBoxPermute[ 1] = sBoxByte[ 6]; </span><br><span class="line"> pBoxPermute[ 2] = sBoxByte[19]; </span><br><span class="line"> pBoxPermute[ 3] = sBoxByte[20]; </span><br><span class="line"> pBoxPermute[ 4] = sBoxByte[28]; </span><br><span class="line"> pBoxPermute[ 5] = sBoxByte[11]; </span><br><span class="line"> pBoxPermute[ 6] = sBoxByte[27]; </span><br><span class="line"> pBoxPermute[ 7] = sBoxByte[16]; </span><br><span class="line"> pBoxPermute[ 8] = sBoxByte[ 0]; </span><br><span class="line"> pBoxPermute[ 9] = sBoxByte[14]; </span><br><span class="line"> pBoxPermute[10] = sBoxByte[22]; </span><br><span class="line"> pBoxPermute[11] = sBoxByte[25]; </span><br><span class="line"> pBoxPermute[12] = sBoxByte[ 4]; </span><br><span class="line"> pBoxPermute[13] = sBoxByte[17]; </span><br><span class="line"> pBoxPermute[14] = sBoxByte[30]; </span><br><span class="line"> pBoxPermute[15] = sBoxByte[ 9]; </span><br><span class="line"> pBoxPermute[16] = sBoxByte[ 1]; </span><br><span class="line"> pBoxPermute[17] = sBoxByte[ 7]; </span><br><span class="line"> pBoxPermute[18] = sBoxByte[23]; </span><br><span class="line"> pBoxPermute[19] = sBoxByte[13]; </span><br><span class="line"> pBoxPermute[20] = sBoxByte[31]; </span><br><span class="line"> pBoxPermute[21] = sBoxByte[26]; </span><br><span class="line"> pBoxPermute[22] = sBoxByte[ 2]; </span><br><span class="line"> pBoxPermute[23] = sBoxByte[ 8]; </span><br><span class="line"> pBoxPermute[24] = sBoxByte[18]; </span><br><span class="line"> pBoxPermute[25] = sBoxByte[12]; </span><br><span class="line"> pBoxPermute[26] = sBoxByte[29]; </span><br><span class="line"> pBoxPermute[27] = sBoxByte[ 5]; </span><br><span class="line"> pBoxPermute[28] = sBoxByte[21]; </span><br><span class="line"> pBoxPermute[29] = sBoxByte[10]; </span><br><span class="line"> pBoxPermute[30] = sBoxByte[ 3]; </span><br><span class="line"> pBoxPermute[31] = sBoxByte[24];    </span><br><span class="line"> return pBoxPermute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function finallyPermute(endByte)&#123;    </span><br><span class="line"> var fpByte = new Array(64);  </span><br><span class="line"> fpByte[ 0] = endByte[39]; </span><br><span class="line"> fpByte[ 1] = endByte[ 7]; </span><br><span class="line"> fpByte[ 2] = endByte[47]; </span><br><span class="line"> fpByte[ 3] = endByte[15]; </span><br><span class="line"> fpByte[ 4] = endByte[55]; </span><br><span class="line"> fpByte[ 5] = endByte[23]; </span><br><span class="line"> fpByte[ 6] = endByte[63]; </span><br><span class="line"> fpByte[ 7] = endByte[31]; </span><br><span class="line"> fpByte[ 8] = endByte[38]; </span><br><span class="line"> fpByte[ 9] = endByte[ 6]; </span><br><span class="line"> fpByte[10] = endByte[46]; </span><br><span class="line"> fpByte[11] = endByte[14]; </span><br><span class="line"> fpByte[12] = endByte[54]; </span><br><span class="line"> fpByte[13] = endByte[22]; </span><br><span class="line"> fpByte[14] = endByte[62]; </span><br><span class="line"> fpByte[15] = endByte[30]; </span><br><span class="line"> fpByte[16] = endByte[37]; </span><br><span class="line"> fpByte[17] = endByte[ 5]; </span><br><span class="line"> fpByte[18] = endByte[45]; </span><br><span class="line"> fpByte[19] = endByte[13]; </span><br><span class="line"> fpByte[20] = endByte[53]; </span><br><span class="line"> fpByte[21] = endByte[21]; </span><br><span class="line"> fpByte[22] = endByte[61]; </span><br><span class="line"> fpByte[23] = endByte[29]; </span><br><span class="line"> fpByte[24] = endByte[36]; </span><br><span class="line"> fpByte[25] = endByte[ 4]; </span><br><span class="line"> fpByte[26] = endByte[44]; </span><br><span class="line"> fpByte[27] = endByte[12]; </span><br><span class="line"> fpByte[28] = endByte[52]; </span><br><span class="line"> fpByte[29] = endByte[20]; </span><br><span class="line"> fpByte[30] = endByte[60]; </span><br><span class="line"> fpByte[31] = endByte[28]; </span><br><span class="line"> fpByte[32] = endByte[35]; </span><br><span class="line"> fpByte[33] = endByte[ 3]; </span><br><span class="line"> fpByte[34] = endByte[43]; </span><br><span class="line"> fpByte[35] = endByte[11]; </span><br><span class="line"> fpByte[36] = endByte[51]; </span><br><span class="line"> fpByte[37] = endByte[19]; </span><br><span class="line"> fpByte[38] = endByte[59]; </span><br><span class="line"> fpByte[39] = endByte[27]; </span><br><span class="line"> fpByte[40] = endByte[34]; </span><br><span class="line"> fpByte[41] = endByte[ 2]; </span><br><span class="line"> fpByte[42] = endByte[42]; </span><br><span class="line"> fpByte[43] = endByte[10]; </span><br><span class="line"> fpByte[44] = endByte[50]; </span><br><span class="line"> fpByte[45] = endByte[18]; </span><br><span class="line"> fpByte[46] = endByte[58]; </span><br><span class="line"> fpByte[47] = endByte[26]; </span><br><span class="line"> fpByte[48] = endByte[33]; </span><br><span class="line"> fpByte[49] = endByte[ 1]; </span><br><span class="line"> fpByte[50] = endByte[41]; </span><br><span class="line"> fpByte[51] = endByte[ 9]; </span><br><span class="line"> fpByte[52] = endByte[49]; </span><br><span class="line"> fpByte[53] = endByte[17]; </span><br><span class="line"> fpByte[54] = endByte[57]; </span><br><span class="line"> fpByte[55] = endByte[25]; </span><br><span class="line"> fpByte[56] = endByte[32]; </span><br><span class="line"> fpByte[57] = endByte[ 0]; </span><br><span class="line"> fpByte[58] = endByte[40]; </span><br><span class="line"> fpByte[59] = endByte[ 8]; </span><br><span class="line"> fpByte[60] = endByte[48]; </span><br><span class="line"> fpByte[61] = endByte[16]; </span><br><span class="line"> fpByte[62] = endByte[56]; </span><br><span class="line"> fpByte[63] = endByte[24];</span><br><span class="line"> return fpByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getBoxBinary(i) &#123;</span><br><span class="line"> var binary = &quot;&quot;;</span><br><span class="line"> switch (i) &#123;</span><br><span class="line">   case 0 :binary = &quot;0000&quot;;break;</span><br><span class="line">   case 1 :binary = &quot;0001&quot;;break;</span><br><span class="line">   case 2 :binary = &quot;0010&quot;;break;</span><br><span class="line">   case 3 :binary = &quot;0011&quot;;break;</span><br><span class="line">   case 4 :binary = &quot;0100&quot;;break;</span><br><span class="line">   case 5 :binary = &quot;0101&quot;;break;</span><br><span class="line">   case 6 :binary = &quot;0110&quot;;break;</span><br><span class="line">   case 7 :binary = &quot;0111&quot;;break;</span><br><span class="line">   case 8 :binary = &quot;1000&quot;;break;</span><br><span class="line">   case 9 :binary = &quot;1001&quot;;break;</span><br><span class="line">   case 10 :binary = &quot;1010&quot;;break;</span><br><span class="line">   case 11 :binary = &quot;1011&quot;;break;</span><br><span class="line">   case 12 :binary = &quot;1100&quot;;break;</span><br><span class="line">   case 13 :binary = &quot;1101&quot;;break;</span><br><span class="line">   case 14 :binary = &quot;1110&quot;;break;</span><br><span class="line">   case 15 :binary = &quot;1111&quot;;break;</span><br><span class="line"> &#125;</span><br><span class="line"> return binary;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">* generate 16 keys for xor</span><br><span class="line">*</span><br><span class="line">*/</span><br><span class="line">function generateKeys(keyByte)&#123;    </span><br><span class="line"> var key   = new Array(56);</span><br><span class="line"> var keys = new Array();  </span><br><span class="line"> </span><br><span class="line"> keys[ 0] = new Array();</span><br><span class="line"> keys[ 1] = new Array();</span><br><span class="line"> keys[ 2] = new Array();</span><br><span class="line"> keys[ 3] = new Array();</span><br><span class="line"> keys[ 4] = new Array();</span><br><span class="line"> keys[ 5] = new Array();</span><br><span class="line"> keys[ 6] = new Array();</span><br><span class="line"> keys[ 7] = new Array();</span><br><span class="line"> keys[ 8] = new Array();</span><br><span class="line"> keys[ 9] = new Array();</span><br><span class="line"> keys[10] = new Array();</span><br><span class="line"> keys[11] = new Array();</span><br><span class="line"> keys[12] = new Array();</span><br><span class="line"> keys[13] = new Array();</span><br><span class="line"> keys[14] = new Array();</span><br><span class="line"> keys[15] = new Array();  </span><br><span class="line"> var loop = [1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];</span><br><span class="line"></span><br><span class="line"> for(i=0;i&lt;7;i++)&#123;</span><br><span class="line">   for(j=0,k=7;j&lt;8;j++,k--)&#123;</span><br><span class="line">     key[i*8+j]=keyByte[8*k+i];</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;    </span><br><span class="line"> </span><br><span class="line"> var i = 0;</span><br><span class="line"> for(i = 0;i &lt; 16;i ++)&#123;</span><br><span class="line">   var tempLeft=0;</span><br><span class="line">   var tempRight=0;</span><br><span class="line">   for(j = 0; j &lt; loop[i];j ++)&#123;          </span><br><span class="line">     tempLeft = key[0];</span><br><span class="line">     tempRight = key[28];</span><br><span class="line">     for(k = 0;k &lt; 27 ;k ++)&#123;</span><br><span class="line">       key[k] = key[k+1];</span><br><span class="line">       key[28+k] = key[29+k];</span><br><span class="line">     &#125;  </span><br><span class="line">     key[27]=tempLeft;</span><br><span class="line">     key[55]=tempRight;</span><br><span class="line">   &#125;</span><br><span class="line">   var tempKey = new Array(48);</span><br><span class="line">   tempKey[ 0] = key[13];</span><br><span class="line">   tempKey[ 1] = key[16];</span><br><span class="line">   tempKey[ 2] = key[10];</span><br><span class="line">   tempKey[ 3] = key[23];</span><br><span class="line">   tempKey[ 4] = key[ 0];</span><br><span class="line">   tempKey[ 5] = key[ 4];</span><br><span class="line">   tempKey[ 6] = key[ 2];</span><br><span class="line">   tempKey[ 7] = key[27];</span><br><span class="line">   tempKey[ 8] = key[14];</span><br><span class="line">   tempKey[ 9] = key[ 5];</span><br><span class="line">   tempKey[10] = key[20];</span><br><span class="line">   tempKey[11] = key[ 9];</span><br><span class="line">   tempKey[12] = key[22];</span><br><span class="line">   tempKey[13] = key[18];</span><br><span class="line">   tempKey[14] = key[11];</span><br><span class="line">   tempKey[15] = key[ 3];</span><br><span class="line">   tempKey[16] = key[25];</span><br><span class="line">   tempKey[17] = key[ 7];</span><br><span class="line">   tempKey[18] = key[15];</span><br><span class="line">   tempKey[19] = key[ 6];</span><br><span class="line">   tempKey[20] = key[26];</span><br><span class="line">   tempKey[21] = key[19];</span><br><span class="line">   tempKey[22] = key[12];</span><br><span class="line">   tempKey[23] = key[ 1];</span><br><span class="line">   tempKey[24] = key[40];</span><br><span class="line">   tempKey[25] = key[51];</span><br><span class="line">   tempKey[26] = key[30];</span><br><span class="line">   tempKey[27] = key[36];</span><br><span class="line">   tempKey[28] = key[46];</span><br><span class="line">   tempKey[29] = key[54];</span><br><span class="line">   tempKey[30] = key[29];</span><br><span class="line">   tempKey[31] = key[39];</span><br><span class="line">   tempKey[32] = key[50];</span><br><span class="line">   tempKey[33] = key[44];</span><br><span class="line">   tempKey[34] = key[32];</span><br><span class="line">   tempKey[35] = key[47];</span><br><span class="line">   tempKey[36] = key[43];</span><br><span class="line">   tempKey[37] = key[48];</span><br><span class="line">   tempKey[38] = key[38];</span><br><span class="line">   tempKey[39] = key[55];</span><br><span class="line">   tempKey[40] = key[33];</span><br><span class="line">   tempKey[41] = key[52];</span><br><span class="line">   tempKey[42] = key[45];</span><br><span class="line">   tempKey[43] = key[41];</span><br><span class="line">   tempKey[44] = key[49];</span><br><span class="line">   tempKey[45] = key[35];</span><br><span class="line">   tempKey[46] = key[28];</span><br><span class="line">   tempKey[47] = key[31];</span><br><span class="line">   switch(i)&#123;</span><br><span class="line">     case 0: for(m=0;m &lt; 48 ;m++)&#123; keys[ 0][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 1: for(m=0;m &lt; 48 ;m++)&#123; keys[ 1][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 2: for(m=0;m &lt; 48 ;m++)&#123; keys[ 2][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 3: for(m=0;m &lt; 48 ;m++)&#123; keys[ 3][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 4: for(m=0;m &lt; 48 ;m++)&#123; keys[ 4][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 5: for(m=0;m &lt; 48 ;m++)&#123; keys[ 5][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 6: for(m=0;m &lt; 48 ;m++)&#123; keys[ 6][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 7: for(m=0;m &lt; 48 ;m++)&#123; keys[ 7][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 8: for(m=0;m &lt; 48 ;m++)&#123; keys[ 8][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 9: for(m=0;m &lt; 48 ;m++)&#123; keys[ 9][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 10: for(m=0;m &lt; 48 ;m++)&#123; keys[10][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 11: for(m=0;m &lt; 48 ;m++)&#123; keys[11][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 12: for(m=0;m &lt; 48 ;m++)&#123; keys[12][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 13: for(m=0;m &lt; 48 ;m++)&#123; keys[13][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 14: for(m=0;m &lt; 48 ;m++)&#123; keys[14][m] = tempKey[m]; &#125; break;</span><br><span class="line">     case 15: for(m=0;m &lt; 48 ;m++)&#123; keys[15][m] = tempKey[m]; &#125; break;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> return keys;  </span><br><span class="line">&#125;</span><br><span class="line">//end-------------------------------------------------------------------------------------------------------------</span><br><span class="line">/*</span><br><span class="line">function test() &#123;</span><br><span class="line"> </span><br><span class="line"> var msg = &quot;abcdefgh&quot;;</span><br><span class="line"> var bt = strToBt(msg);</span><br><span class="line"> </span><br><span class="line"> var key = &quot;12345678&quot;;</span><br><span class="line"> var keyB = strToBt(key);</span><br><span class="line">   </span><br><span class="line"> var encByte = enc(bt,keyB);</span><br><span class="line">     </span><br><span class="line"> var enchex  = bt64ToHex(encByte);  </span><br><span class="line"> endata.value=enchex;</span><br><span class="line"> </span><br><span class="line"> var encStr = hexToBt64(enchex);</span><br><span class="line"> alert(&quot;encStr=&quot;+encStr);</span><br><span class="line"> var eByte = new Array();</span><br><span class="line"> for(m=0;m&lt;encStr.length;m++)&#123;</span><br><span class="line">   eByte[m] = parseInt(encStr.substring(m,m+1));</span><br><span class="line"> &#125;</span><br><span class="line"> var decbyte= dec(eByte,keyB)</span><br><span class="line"> var decmsg= byteToString(decbyte);</span><br><span class="line"> alert(&quot;decbyte=&quot;+decbyte);</span><br><span class="line"> alert(&quot;decmsg=&quot;+decmsg);  </span><br><span class="line">&#125;*/</span><br></pre></td></tr></table></figure></p><p>DES.java(对应的Java代码):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.utils;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * DES加密/解密</span><br><span class="line"> * </span><br><span class="line"> * @Copyright Copyright (c) 2015</span><br><span class="line"> * @author liuyazhuang</span><br><span class="line"> * @see DESCore</span><br><span class="line"> */</span><br><span class="line">public class Des &#123;</span><br><span class="line">    public Des() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Des desObj = new Des();</span><br><span class="line">        String key1 = &quot;1&quot;;</span><br><span class="line">        String key2 = &quot;2&quot;;</span><br><span class="line">        String key3 = &quot;3&quot;;</span><br><span class="line">        String data = &quot;admin&quot;;</span><br><span class="line">        String str = desObj.strEnc(data, key1, key2, key3);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        String dec = desObj.strDec(str, key1, key2, key3);</span><br><span class="line">        System.out.println(dec);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /**</span><br><span class="line">     * DES加密/解密</span><br><span class="line">     * </span><br><span class="line">     * @Copyright Copyright (c) 2015</span><br><span class="line">     * @author liuyazhuang</span><br><span class="line">     * @see DESCore</span><br><span class="line">     */</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * encrypt the string to string made up of hex return the encrypted string</span><br><span class="line">     */</span><br><span class="line">    public String strEnc(String data, String firstKey, String secondKey,</span><br><span class="line">            String thirdKey) &#123;</span><br><span class="line"> </span><br><span class="line">        int leng = data.length();</span><br><span class="line">        String encData = &quot;&quot;;</span><br><span class="line">        List firstKeyBt = null, secondKeyBt = null, thirdKeyBt = null;</span><br><span class="line">        int firstLength = 0, secondLength = 0, thirdLength = 0;</span><br><span class="line">        if (firstKey != null &amp;&amp; firstKey != &quot;&quot;) &#123;</span><br><span class="line">            firstKeyBt = getKeyBytes(firstKey);</span><br><span class="line">            firstLength = firstKeyBt.size();</span><br><span class="line">        &#125;</span><br><span class="line">        if (secondKey != null &amp;&amp; secondKey != &quot;&quot;) &#123;</span><br><span class="line">            secondKeyBt = getKeyBytes(secondKey);</span><br><span class="line">            secondLength = secondKeyBt.size();</span><br><span class="line">        &#125;</span><br><span class="line">        if (thirdKey != null &amp;&amp; thirdKey != &quot;&quot;) &#123;</span><br><span class="line">            thirdKeyBt = getKeyBytes(thirdKey);</span><br><span class="line">            thirdLength = thirdKeyBt.size();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        if (leng &gt; 0) &#123;</span><br><span class="line">            if (leng &lt; 4) &#123;</span><br><span class="line">                int[] bt = strToBt(data);</span><br><span class="line">                int[] encByte = null;</span><br><span class="line">                if (firstKey != null &amp;&amp; firstKey != &quot;&quot; &amp;&amp; secondKey != null</span><br><span class="line">                        &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null</span><br><span class="line">                        &amp;&amp; thirdKey != &quot;&quot;) &#123;</span><br><span class="line">                    int[] tempBt;</span><br><span class="line">                    int x, y, z;</span><br><span class="line">                    tempBt = bt;</span><br><span class="line">                    for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                        tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                    &#125;</span><br><span class="line">                    for (y = 0; y &lt; secondLength; y++) &#123;</span><br><span class="line">                        tempBt = enc(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    for (z = 0; z &lt; thirdLength; z++) &#123;</span><br><span class="line">                        tempBt = enc(tempBt, (int[]) thirdKeyBt.get(z));</span><br><span class="line">                    &#125;</span><br><span class="line">                    encByte = tempBt;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    if (firstKey != null &amp;&amp; firstKey != &quot;&quot; &amp;&amp; secondKey != null</span><br><span class="line">                            &amp;&amp; secondKey != &quot;&quot;) &#123;</span><br><span class="line">                        int[] tempBt;</span><br><span class="line">                        int x, y;</span><br><span class="line">                        tempBt = bt;</span><br><span class="line">                        for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                        &#125;</span><br><span class="line">                        for (y = 0; y &lt; secondLength; y++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                        &#125;</span><br><span class="line">                        encByte = tempBt;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        if (firstKey != null &amp;&amp; firstKey != &quot;&quot;) &#123;</span><br><span class="line">                            int[] tempBt;</span><br><span class="line">                            int x = 0;</span><br><span class="line">                            tempBt = bt;</span><br><span class="line">                            for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                                tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                            &#125;</span><br><span class="line">                            encByte = tempBt;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                encData = bt64ToHex(encByte);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                int iterator = (leng / 4);</span><br><span class="line">                int remainder = leng % 4;</span><br><span class="line">                int i = 0;</span><br><span class="line">                for (i = 0; i &lt; iterator; i++) &#123;</span><br><span class="line">                    String tempData = data.substring(i * 4 + 0, i * 4 + 4);</span><br><span class="line">                    int[] tempByte = strToBt(tempData);</span><br><span class="line">                    int[] encByte = null;</span><br><span class="line">                    if (firstKey != null &amp;&amp; firstKey != &quot;&quot; &amp;&amp; secondKey != null</span><br><span class="line">                            &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null</span><br><span class="line">                            &amp;&amp; thirdKey != &quot;&quot;) &#123;</span><br><span class="line">                        int[] tempBt;</span><br><span class="line">                        int x, y, z;</span><br><span class="line">                        tempBt = tempByte;</span><br><span class="line">                        for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                        &#125;</span><br><span class="line">                        for (y = 0; y &lt; secondLength; y++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                        &#125;</span><br><span class="line">                        for (z = 0; z &lt; thirdLength; z++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) thirdKeyBt.get(z));</span><br><span class="line">                        &#125;</span><br><span class="line">                        encByte = tempBt;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        if (firstKey != null &amp;&amp; firstKey != &quot;&quot;</span><br><span class="line">                                &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot;) &#123;</span><br><span class="line">                            int[] tempBt;</span><br><span class="line">                            int x, y;</span><br><span class="line">                            tempBt = tempByte;</span><br><span class="line">                            for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                                tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                            &#125;</span><br><span class="line">                            for (y = 0; y &lt; secondLength; y++) &#123;</span><br><span class="line">                                tempBt = enc(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                            &#125;</span><br><span class="line">                            encByte = tempBt;</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            if (firstKey != null &amp;&amp; firstKey != &quot;&quot;) &#123;</span><br><span class="line">                                int[] tempBt;</span><br><span class="line">                                int x;</span><br><span class="line">                                tempBt = tempByte;</span><br><span class="line">                                for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                                    tempBt = enc(tempBt, (int[]) firstKeyBt</span><br><span class="line">                                            .get(x));</span><br><span class="line">                                &#125;</span><br><span class="line">                                encByte = tempBt;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    encData += bt64ToHex(encByte);</span><br><span class="line">                &#125;</span><br><span class="line">                if (remainder &gt; 0) &#123;</span><br><span class="line">                    String remainderData = data.substring(iterator * 4 + 0,</span><br><span class="line">                            leng);</span><br><span class="line">                    int[] tempByte = strToBt(remainderData);</span><br><span class="line">                    int[] encByte = null;</span><br><span class="line">                    if (firstKey != null &amp;&amp; firstKey != &quot;&quot; &amp;&amp; secondKey != null</span><br><span class="line">                            &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null</span><br><span class="line">                            &amp;&amp; thirdKey != &quot;&quot;) &#123;</span><br><span class="line">                        int[] tempBt;</span><br><span class="line">                        int x, y, z;</span><br><span class="line">                        tempBt = tempByte;</span><br><span class="line">                        for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                        &#125;</span><br><span class="line">                        for (y = 0; y &lt; secondLength; y++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                        &#125;</span><br><span class="line">                        for (z = 0; z &lt; thirdLength; z++) &#123;</span><br><span class="line">                            tempBt = enc(tempBt, (int[]) thirdKeyBt.get(z));</span><br><span class="line">                        &#125;</span><br><span class="line">                        encByte = tempBt;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        if (firstKey != null &amp;&amp; firstKey != &quot;&quot;</span><br><span class="line">                                &amp;&amp; secondKey != null &amp;&amp; secondKey != &quot;&quot;) &#123;</span><br><span class="line">                            int[] tempBt;</span><br><span class="line">                            int x, y;</span><br><span class="line">                            tempBt = tempByte;</span><br><span class="line">                            for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                                tempBt = enc(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                            &#125;</span><br><span class="line">                            for (y = 0; y &lt; secondLength; y++) &#123;</span><br><span class="line">                                tempBt = enc(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                            &#125;</span><br><span class="line">                            encByte = tempBt;</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            if (firstKey != null &amp;&amp; firstKey != &quot;&quot;) &#123;</span><br><span class="line">                                int[] tempBt;</span><br><span class="line">                                int x;</span><br><span class="line">                                tempBt = tempByte;</span><br><span class="line">                                for (x = 0; x &lt; firstLength; x++) &#123;</span><br><span class="line">                                    tempBt = enc(tempBt, (int[]) firstKeyBt</span><br><span class="line">                                            .get(x));</span><br><span class="line">                                &#125;</span><br><span class="line">                                encByte = tempBt;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    encData += bt64ToHex(encByte);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return encData;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * decrypt the encrypted string to the original string</span><br><span class="line">     * return the original string</span><br><span class="line">     */</span><br><span class="line">    public String strDec(String data, String firstKey, String secondKey,</span><br><span class="line">            String thirdKey) &#123;</span><br><span class="line">        int leng = data.length();</span><br><span class="line">        String decStr = &quot;&quot;;</span><br><span class="line">        List firstKeyBt = null, secondKeyBt = null, thirdKeyBt = null;</span><br><span class="line">        int firstLength = 0, secondLength = 0, thirdLength = 0;</span><br><span class="line">        if (firstKey != null &amp;&amp; firstKey != &quot;&quot;) &#123;</span><br><span class="line">            firstKeyBt = getKeyBytes(firstKey);</span><br><span class="line">            firstLength = firstKeyBt.size();</span><br><span class="line">        &#125;</span><br><span class="line">        if (secondKey != null &amp;&amp; secondKey != &quot;&quot;) &#123;</span><br><span class="line">            secondKeyBt = getKeyBytes(secondKey);</span><br><span class="line">            secondLength = secondKeyBt.size();</span><br><span class="line">        &#125;</span><br><span class="line">        if (thirdKey != null &amp;&amp; thirdKey != &quot;&quot;) &#123;</span><br><span class="line">            thirdKeyBt = getKeyBytes(thirdKey);</span><br><span class="line">            thirdLength = thirdKeyBt.size();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        int iterator = leng / 16;</span><br><span class="line">        int i = 0;</span><br><span class="line">        for (i = 0; i &lt; iterator; i++) &#123;</span><br><span class="line">            String tempData = data.substring(i * 16 + 0, i * 16 + 16);</span><br><span class="line">            String strByte = hexToBt64(tempData);</span><br><span class="line">            int[] intByte = new int[64];</span><br><span class="line">            int j = 0;</span><br><span class="line">            for (j = 0; j &lt; 64; j++) &#123;</span><br><span class="line">                intByte[j] = Integer.parseInt(strByte.substring(j, j + 1));</span><br><span class="line">            &#125;</span><br><span class="line">            int[] decByte = null;</span><br><span class="line">            if (firstKey != null &amp;&amp; firstKey != &quot;&quot; &amp;&amp; secondKey != null</span><br><span class="line">                    &amp;&amp; secondKey != &quot;&quot; &amp;&amp; thirdKey != null &amp;&amp; thirdKey != &quot;&quot;) &#123;</span><br><span class="line">                int[] tempBt;</span><br><span class="line">                int x, y, z;</span><br><span class="line">                tempBt = intByte;</span><br><span class="line">                for (x = thirdLength - 1; x &gt;= 0; x--) &#123;</span><br><span class="line">                    tempBt = dec(tempBt, (int[]) thirdKeyBt.get(x));</span><br><span class="line">                &#125;</span><br><span class="line">                for (y = secondLength - 1; y &gt;= 0; y--) &#123;</span><br><span class="line">                    tempBt = dec(tempBt, (int[]) secondKeyBt.get(y));</span><br><span class="line">                &#125;</span><br><span class="line">                for (z = firstLength - 1; z &gt;= 0; z--) &#123;</span><br><span class="line">                    tempBt = dec(tempBt, (int[]) firstKeyBt.get(z));</span><br><span class="line">                &#125;</span><br><span class="line">                decByte = tempBt;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if (firstKey != null &amp;&amp; firstKey != &quot;&quot; &amp;&amp; secondKey != null</span><br><span class="line">                        &amp;&amp; secondKey != &quot;&quot;) &#123;</span><br><span class="line">                    int[] tempBt;</span><br><span class="line">                    int x, y, z;</span><br><span class="line">                    tempBt = intByte;</span><br><span class="line">                    for (x = secondLength - 1; x &gt;= 0; x--) &#123;</span><br><span class="line">                        tempBt = dec(tempBt, (int[]) secondKeyBt.get(x));</span><br><span class="line">                    &#125;</span><br><span class="line">                    for (y = firstLength - 1; y &gt;= 0; y--) &#123;</span><br><span class="line">                        tempBt = dec(tempBt, (int[]) firstKeyBt.get(y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    decByte = tempBt;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    if (firstKey != null &amp;&amp; firstKey != &quot;&quot;) &#123;</span><br><span class="line">                        int[] tempBt;</span><br><span class="line">                        int x, y, z;</span><br><span class="line">                        tempBt = intByte;</span><br><span class="line">                        for (x = firstLength - 1; x &gt;= 0; x--) &#123;</span><br><span class="line">                            tempBt = dec(tempBt, (int[]) firstKeyBt.get(x));</span><br><span class="line">                        &#125;</span><br><span class="line">                        decByte = tempBt;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            decStr += byteToString(decByte);</span><br><span class="line">        &#125;</span><br><span class="line">        return decStr;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * chang the string into the bit array</span><br><span class="line">     * </span><br><span class="line">     * return bit array(it&apos;s length % 64 = 0)</span><br><span class="line">     */</span><br><span class="line">    public List getKeyBytes(String key) &#123;</span><br><span class="line">        List keyBytes = new ArrayList();</span><br><span class="line">        int leng = key.length();</span><br><span class="line">        int iterator = (leng / 4);</span><br><span class="line">        int remainder = leng % 4;</span><br><span class="line">        int i = 0;</span><br><span class="line">        for (i = 0; i &lt; iterator; i++) &#123;</span><br><span class="line">            keyBytes.add(i, strToBt(key.substring(i * 4 + 0, i * 4 + 4)));</span><br><span class="line">        &#125;</span><br><span class="line">        if (remainder &gt; 0) &#123;</span><br><span class="line">            // keyBytes[i] = strToBt(key.substring(i*4+0,leng));</span><br><span class="line">            keyBytes.add(i, strToBt(key.substring(i * 4 + 0, leng)));</span><br><span class="line">        &#125;</span><br><span class="line">        return keyBytes;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * chang the string(it&apos;s length &lt;= 4) into the bit array</span><br><span class="line">     * </span><br><span class="line">     * return bit array(it&apos;s length = 64)</span><br><span class="line">     */</span><br><span class="line">    public int[] strToBt(String str) &#123;</span><br><span class="line">        int leng = str.length();</span><br><span class="line">        int[] bt = new int[64];</span><br><span class="line">        if (leng &lt; 4) &#123;</span><br><span class="line">            int i = 0, j = 0, p = 0, q = 0;</span><br><span class="line">            for (i = 0; i &lt; leng; i++) &#123;</span><br><span class="line">                int k = str.charAt(i);</span><br><span class="line">                for (j = 0; j &lt; 16; j++) &#123;</span><br><span class="line">                    int pow = 1, m = 0;</span><br><span class="line">                    for (m = 15; m &gt; j; m--) &#123;</span><br><span class="line">                        pow *= 2;</span><br><span class="line">                    &#125;</span><br><span class="line">                    // bt.set(16*i+j,&quot;&quot;+(k/pow)%2));</span><br><span class="line">                    bt[16 * i + j] = (k / pow) % 2;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            for (p = leng; p &lt; 4; p++) &#123;</span><br><span class="line">                int k = 0;</span><br><span class="line">                for (q = 0; q &lt; 16; q++) &#123;</span><br><span class="line">                    int pow = 1, m = 0;</span><br><span class="line">                    for (m = 15; m &gt; q; m--) &#123;</span><br><span class="line">                        pow *= 2;</span><br><span class="line">                    &#125;</span><br><span class="line">                    // bt[16*p+q]=parseInt(k/pow)%2;</span><br><span class="line">                    // bt.add(16*p+q,&quot;&quot;+((k/pow)%2));</span><br><span class="line">                    bt[16 * p + q] = (k / pow) % 2;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            for (int i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">                int k = str.charAt(i);</span><br><span class="line">                for (int j = 0; j &lt; 16; j++) &#123;</span><br><span class="line">                    int pow = 1;</span><br><span class="line">                    for (int m = 15; m &gt; j; m--) &#123;</span><br><span class="line">                        pow *= 2;</span><br><span class="line">                    &#125;</span><br><span class="line">                    // bt[16*i+j]=parseInt(k/pow)%2;</span><br><span class="line">                    // bt.add(16*i+j,&quot;&quot;+((k/pow)%2));</span><br><span class="line">                    bt[16 * i + j] = (k / pow) % 2;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return bt;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * chang the bit(it&apos;s length = 4) into the hex</span><br><span class="line">     * </span><br><span class="line">     * return hex</span><br><span class="line">     */</span><br><span class="line">    public String bt4ToHex(String binary) &#123;</span><br><span class="line">        String hex = &quot;&quot;;</span><br><span class="line">        if (binary.equalsIgnoreCase(&quot;0000&quot;)) &#123;</span><br><span class="line">            hex = &quot;0&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0001&quot;)) &#123;</span><br><span class="line">            hex = &quot;1&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0010&quot;)) &#123;</span><br><span class="line">            hex = &quot;2&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0011&quot;)) &#123;</span><br><span class="line">            hex = &quot;3&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0100&quot;)) &#123;</span><br><span class="line">            hex = &quot;4&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0101&quot;)) &#123;</span><br><span class="line">            hex = &quot;5&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0110&quot;)) &#123;</span><br><span class="line">            hex = &quot;6&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;0111&quot;)) &#123;</span><br><span class="line">            hex = &quot;7&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1000&quot;)) &#123;</span><br><span class="line">            hex = &quot;8&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1001&quot;)) &#123;</span><br><span class="line">            hex = &quot;9&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1010&quot;)) &#123;</span><br><span class="line">            hex = &quot;A&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1011&quot;)) &#123;</span><br><span class="line">            hex = &quot;B&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1100&quot;)) &#123;</span><br><span class="line">            hex = &quot;C&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1101&quot;)) &#123;</span><br><span class="line">            hex = &quot;D&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1110&quot;)) &#123;</span><br><span class="line">            hex = &quot;E&quot;;</span><br><span class="line">        &#125; else if (binary.equalsIgnoreCase(&quot;1111&quot;)) &#123;</span><br><span class="line">            hex = &quot;F&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        return hex;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * chang the hex into the bit(it&apos;s length = 4)</span><br><span class="line">     * </span><br><span class="line">     * return the bit(it&apos;s length = 4)</span><br><span class="line">     */</span><br><span class="line">    public String hexToBt4(String hex) &#123;</span><br><span class="line">        String binary = &quot;&quot;;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;0&quot;)) &#123;</span><br><span class="line">            binary = &quot;0000&quot;;</span><br><span class="line">        &#125; else if (hex.equalsIgnoreCase(&quot;1&quot;)) &#123;</span><br><span class="line">            binary = &quot;0001&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;2&quot;)) &#123;</span><br><span class="line">            binary = &quot;0010&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;3&quot;)) &#123;</span><br><span class="line">            binary = &quot;0011&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;4&quot;)) &#123;</span><br><span class="line">            binary = &quot;0100&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;5&quot;)) &#123;</span><br><span class="line">            binary = &quot;0101&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;6&quot;)) &#123;</span><br><span class="line">            binary = &quot;0110&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;7&quot;)) &#123;</span><br><span class="line">            binary = &quot;0111&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;8&quot;)) &#123;</span><br><span class="line">            binary = &quot;1000&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;9&quot;)) &#123;</span><br><span class="line">            binary = &quot;1001&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;A&quot;)) &#123;</span><br><span class="line">            binary = &quot;1010&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;B&quot;)) &#123;</span><br><span class="line">            binary = &quot;1011&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;C&quot;)) &#123;</span><br><span class="line">            binary = &quot;1100&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;D&quot;)) &#123;</span><br><span class="line">            binary = &quot;1101&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;E&quot;)) &#123;</span><br><span class="line">            binary = &quot;1110&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (hex.equalsIgnoreCase(&quot;F&quot;)) &#123;</span><br><span class="line">            binary = &quot;1111&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return binary;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * chang the bit(it&apos;s length = 64) into the string</span><br><span class="line">     * </span><br><span class="line">     * return string</span><br><span class="line">     */</span><br><span class="line">    public String byteToString(int[] byteData) &#123;</span><br><span class="line">        String str = &quot;&quot;;</span><br><span class="line">        for (int i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">            int count = 0;</span><br><span class="line">            for (int j = 0; j &lt; 16; j++) &#123;</span><br><span class="line">                int pow = 1;</span><br><span class="line">                for (int m = 15; m &gt; j; m--) &#123;</span><br><span class="line">                    pow *= 2;</span><br><span class="line">                &#125;</span><br><span class="line">                count += byteData[16 * i + j] * pow;</span><br><span class="line">            &#125;</span><br><span class="line">            if (count != 0) &#123;</span><br><span class="line">                str += &quot;&quot; + (char) (count);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public String bt64ToHex(int[] byteData) &#123;</span><br><span class="line">        String hex = &quot;&quot;;</span><br><span class="line">        for (int i = 0; i &lt; 16; i++) &#123;</span><br><span class="line">            String bt = &quot;&quot;;</span><br><span class="line">            for (int j = 0; j &lt; 4; j++) &#123;</span><br><span class="line">                bt += byteData[i * 4 + j];</span><br><span class="line">            &#125;</span><br><span class="line">            hex += bt4ToHex(bt);</span><br><span class="line">        &#125;</span><br><span class="line">        return hex;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public String hexToBt64(String hex) &#123;</span><br><span class="line">        String binary = &quot;&quot;;</span><br><span class="line">        for (int i = 0; i &lt; 16; i++) &#123;</span><br><span class="line">            binary += hexToBt4(hex.substring(i, i + 1));</span><br><span class="line">        &#125;</span><br><span class="line">        return binary;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * the 64 bit des core arithmetic</span><br><span class="line">     */</span><br><span class="line"> </span><br><span class="line">    public int[] enc(int[] dataByte, int[] keyByte) &#123;</span><br><span class="line">        int[][] keys = generateKeys(keyByte);</span><br><span class="line">        int[] ipByte = initPermute(dataByte);</span><br><span class="line">        int[] ipLeft = new int[32];</span><br><span class="line">        int[] ipRight = new int[32];</span><br><span class="line">        int[] tempLeft = new int[32];</span><br><span class="line">        int i = 0, j = 0, k = 0, m = 0, n = 0;</span><br><span class="line">        for (k = 0; k &lt; 32; k++) &#123;</span><br><span class="line">            ipLeft[k] = ipByte[k];</span><br><span class="line">            ipRight[k] = ipByte[32 + k];</span><br><span class="line">        &#125;</span><br><span class="line">        for (i = 0; i &lt; 16; i++) &#123;</span><br><span class="line">            for (j = 0; j &lt; 32; j++) &#123;</span><br><span class="line">                tempLeft[j] = ipLeft[j];</span><br><span class="line">                ipLeft[j] = ipRight[j];</span><br><span class="line">            &#125;</span><br><span class="line">            int[] key = new int[48];</span><br><span class="line">            for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                key[m] = keys[i][m];</span><br><span class="line">            &#125;</span><br><span class="line">            int[] tempRight = xor(pPermute(sBoxPermute(xor(</span><br><span class="line">                    expandPermute(ipRight), key))), tempLeft);</span><br><span class="line">            for (n = 0; n &lt; 32; n++) &#123;</span><br><span class="line">                ipRight[n] = tempRight[n];</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        int[] finalData = new int[64];</span><br><span class="line">        for (i = 0; i &lt; 32; i++) &#123;</span><br><span class="line">            finalData[i] = ipRight[i];</span><br><span class="line">            finalData[32 + i] = ipLeft[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return finallyPermute(finalData);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] dec(int[] dataByte, int[] keyByte) &#123;</span><br><span class="line">        int[][] keys = generateKeys(keyByte);</span><br><span class="line">        int[] ipByte = initPermute(dataByte);</span><br><span class="line">        int[] ipLeft = new int[32];</span><br><span class="line">        int[] ipRight = new int[32];</span><br><span class="line">        int[] tempLeft = new int[32];</span><br><span class="line">        int i = 0, j = 0, k = 0, m = 0, n = 0;</span><br><span class="line">        for (k = 0; k &lt; 32; k++) &#123;</span><br><span class="line">            ipLeft[k] = ipByte[k];</span><br><span class="line">            ipRight[k] = ipByte[32 + k];</span><br><span class="line">        &#125;</span><br><span class="line">        for (i = 15; i &gt;= 0; i--) &#123;</span><br><span class="line">            for (j = 0; j &lt; 32; j++) &#123;</span><br><span class="line">                tempLeft[j] = ipLeft[j];</span><br><span class="line">                ipLeft[j] = ipRight[j];</span><br><span class="line">            &#125;</span><br><span class="line">            int[] key = new int[48];</span><br><span class="line">            for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                key[m] = keys[i][m];</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            int[] tempRight = xor(pPermute(sBoxPermute(xor(</span><br><span class="line">                    expandPermute(ipRight), key))), tempLeft);</span><br><span class="line">            for (n = 0; n &lt; 32; n++) &#123;</span><br><span class="line">                ipRight[n] = tempRight[n];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        int[] finalData = new int[64];</span><br><span class="line">        for (i = 0; i &lt; 32; i++) &#123;</span><br><span class="line">            finalData[i] = ipRight[i];</span><br><span class="line">            finalData[32 + i] = ipLeft[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return finallyPermute(finalData);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] initPermute(int[] originalData) &#123;</span><br><span class="line">        int[] ipByte = new int[64];</span><br><span class="line">        int i = 0, m = 1, n = 0, j, k;</span><br><span class="line">        for (i = 0, m = 1, n = 0; i &lt; 4; i++, m += 2, n += 2) &#123;</span><br><span class="line">            for (j = 7, k = 0; j &gt;= 0; j--, k++) &#123;</span><br><span class="line">                ipByte[i * 8 + k] = originalData[j * 8 + m];</span><br><span class="line">                ipByte[i * 8 + k + 32] = originalData[j * 8 + n];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return ipByte;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] expandPermute(int[] rightData) &#123;</span><br><span class="line">        int[] epByte = new int[48];</span><br><span class="line">        int i, j;</span><br><span class="line">        for (i = 0; i &lt; 8; i++) &#123;</span><br><span class="line">            if (i == 0) &#123;</span><br><span class="line">                epByte[i * 6 + 0] = rightData[31];</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                epByte[i * 6 + 0] = rightData[i * 4 - 1];</span><br><span class="line">            &#125;</span><br><span class="line">            epByte[i * 6 + 1] = rightData[i * 4 + 0];</span><br><span class="line">            epByte[i * 6 + 2] = rightData[i * 4 + 1];</span><br><span class="line">            epByte[i * 6 + 3] = rightData[i * 4 + 2];</span><br><span class="line">            epByte[i * 6 + 4] = rightData[i * 4 + 3];</span><br><span class="line">            if (i == 7) &#123;</span><br><span class="line">                epByte[i * 6 + 5] = rightData[0];</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                epByte[i * 6 + 5] = rightData[i * 4 + 4];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return epByte;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] xor(int[] byteOne, int[] byteTwo) &#123;</span><br><span class="line">        // var xorByte = new Array(byteOne.length);</span><br><span class="line">        // for(int i = 0;i &lt; byteOne.length; i ++)&#123;</span><br><span class="line">        // xorByte[i] = byteOne[i] ^ byteTwo[i];</span><br><span class="line">        // &#125;</span><br><span class="line">        // return xorByte;</span><br><span class="line">        int[] xorByte = new int[byteOne.length];</span><br><span class="line">        for (int i = 0; i &lt; byteOne.length; i++) &#123;</span><br><span class="line">            xorByte[i] = byteOne[i] ^ byteTwo[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return xorByte;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] sBoxPermute(int[] expandByte) &#123;</span><br><span class="line"> </span><br><span class="line">        // var sBoxByte = new Array(32);</span><br><span class="line">        int[] sBoxByte = new int[32];</span><br><span class="line">        String binary = &quot;&quot;;</span><br><span class="line">        int[][] s1 = &#123;</span><br><span class="line">                &#123; 14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7 &#125;,</span><br><span class="line">                &#123; 0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8 &#125;,</span><br><span class="line">                &#123; 4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0 &#125;,</span><br><span class="line">                &#123; 15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        /* Table - s2 */</span><br><span class="line">        int[][] s2 = &#123;</span><br><span class="line">                &#123; 15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10 &#125;,</span><br><span class="line">                &#123; 3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5 &#125;,</span><br><span class="line">                &#123; 0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15 &#125;,</span><br><span class="line">                &#123; 13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        /* Table - s3 */</span><br><span class="line">        int[][] s3 = &#123;</span><br><span class="line">                &#123; 10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8 &#125;,</span><br><span class="line">                &#123; 13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1 &#125;,</span><br><span class="line">                &#123; 13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7 &#125;,</span><br><span class="line">                &#123; 1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 &#125; &#125;;</span><br><span class="line">        /* Table - s4 */</span><br><span class="line">        int[][] s4 = &#123;</span><br><span class="line">                &#123; 7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15 &#125;,</span><br><span class="line">                &#123; 13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9 &#125;,</span><br><span class="line">                &#123; 10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4 &#125;,</span><br><span class="line">                &#123; 3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        /* Table - s5 */</span><br><span class="line">        int[][] s5 = &#123;</span><br><span class="line">                &#123; 2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9 &#125;,</span><br><span class="line">                &#123; 14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6 &#125;,</span><br><span class="line">                &#123; 4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14 &#125;,</span><br><span class="line">                &#123; 11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        /* Table - s6 */</span><br><span class="line">        int[][] s6 = &#123;</span><br><span class="line">                &#123; 12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11 &#125;,</span><br><span class="line">                &#123; 10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8 &#125;,</span><br><span class="line">                &#123; 9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6 &#125;,</span><br><span class="line">                &#123; 4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        /* Table - s7 */</span><br><span class="line">        int[][] s7 = &#123;</span><br><span class="line">                &#123; 4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1 &#125;,</span><br><span class="line">                &#123; 13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6 &#125;,</span><br><span class="line">                &#123; 1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2 &#125;,</span><br><span class="line">                &#123; 6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        /* Table - s8 */</span><br><span class="line">        int[][] s8 = &#123;</span><br><span class="line">                &#123; 13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7 &#125;,</span><br><span class="line">                &#123; 1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2 &#125;,</span><br><span class="line">                &#123; 7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8 &#125;,</span><br><span class="line">                &#123; 2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11 &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">        for (int m = 0; m &lt; 8; m++) &#123;</span><br><span class="line">            int i = 0, j = 0;</span><br><span class="line">            i = expandByte[m * 6 + 0] * 2 + expandByte[m * 6 + 5];</span><br><span class="line">            j = expandByte[m * 6 + 1] * 2 * 2 * 2 + expandByte[m * 6 + 2] * 2</span><br><span class="line">                    * 2 + expandByte[m * 6 + 3] * 2 + expandByte[m * 6 + 4];</span><br><span class="line">            switch (m) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                binary = getBoxBinary(s1[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                binary = getBoxBinary(s2[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                binary = getBoxBinary(s3[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                binary = getBoxBinary(s4[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 4:</span><br><span class="line">                binary = getBoxBinary(s5[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 5:</span><br><span class="line">                binary = getBoxBinary(s6[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 6:</span><br><span class="line">                binary = getBoxBinary(s7[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            case 7:</span><br><span class="line">                binary = getBoxBinary(s8[i][j]);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            sBoxByte[m * 4 + 0] = Integer.parseInt(binary.substring(0, 1));</span><br><span class="line">            sBoxByte[m * 4 + 1] = Integer.parseInt(binary.substring(1, 2));</span><br><span class="line">            sBoxByte[m * 4 + 2] = Integer.parseInt(binary.substring(2, 3));</span><br><span class="line">            sBoxByte[m * 4 + 3] = Integer.parseInt(binary.substring(3, 4));</span><br><span class="line">        &#125;</span><br><span class="line">        return sBoxByte;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] pPermute(int[] sBoxByte) &#123;</span><br><span class="line">        int[] pBoxPermute = new int[32];</span><br><span class="line">        pBoxPermute[0] = sBoxByte[15];</span><br><span class="line">        pBoxPermute[1] = sBoxByte[6];</span><br><span class="line">        pBoxPermute[2] = sBoxByte[19];</span><br><span class="line">        pBoxPermute[3] = sBoxByte[20];</span><br><span class="line">        pBoxPermute[4] = sBoxByte[28];</span><br><span class="line">        pBoxPermute[5] = sBoxByte[11];</span><br><span class="line">        pBoxPermute[6] = sBoxByte[27];</span><br><span class="line">        pBoxPermute[7] = sBoxByte[16];</span><br><span class="line">        pBoxPermute[8] = sBoxByte[0];</span><br><span class="line">        pBoxPermute[9] = sBoxByte[14];</span><br><span class="line">        pBoxPermute[10] = sBoxByte[22];</span><br><span class="line">        pBoxPermute[11] = sBoxByte[25];</span><br><span class="line">        pBoxPermute[12] = sBoxByte[4];</span><br><span class="line">        pBoxPermute[13] = sBoxByte[17];</span><br><span class="line">        pBoxPermute[14] = sBoxByte[30];</span><br><span class="line">        pBoxPermute[15] = sBoxByte[9];</span><br><span class="line">        pBoxPermute[16] = sBoxByte[1];</span><br><span class="line">        pBoxPermute[17] = sBoxByte[7];</span><br><span class="line">        pBoxPermute[18] = sBoxByte[23];</span><br><span class="line">        pBoxPermute[19] = sBoxByte[13];</span><br><span class="line">        pBoxPermute[20] = sBoxByte[31];</span><br><span class="line">        pBoxPermute[21] = sBoxByte[26];</span><br><span class="line">        pBoxPermute[22] = sBoxByte[2];</span><br><span class="line">        pBoxPermute[23] = sBoxByte[8];</span><br><span class="line">        pBoxPermute[24] = sBoxByte[18];</span><br><span class="line">        pBoxPermute[25] = sBoxByte[12];</span><br><span class="line">        pBoxPermute[26] = sBoxByte[29];</span><br><span class="line">        pBoxPermute[27] = sBoxByte[5];</span><br><span class="line">        pBoxPermute[28] = sBoxByte[21];</span><br><span class="line">        pBoxPermute[29] = sBoxByte[10];</span><br><span class="line">        pBoxPermute[30] = sBoxByte[3];</span><br><span class="line">        pBoxPermute[31] = sBoxByte[24];</span><br><span class="line">        return pBoxPermute;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public int[] finallyPermute(int[] endByte) &#123;</span><br><span class="line">        int[] fpByte = new int[64];</span><br><span class="line">        fpByte[0] = endByte[39];</span><br><span class="line">        fpByte[1] = endByte[7];</span><br><span class="line">        fpByte[2] = endByte[47];</span><br><span class="line">        fpByte[3] = endByte[15];</span><br><span class="line">        fpByte[4] = endByte[55];</span><br><span class="line">        fpByte[5] = endByte[23];</span><br><span class="line">        fpByte[6] = endByte[63];</span><br><span class="line">        fpByte[7] = endByte[31];</span><br><span class="line">        fpByte[8] = endByte[38];</span><br><span class="line">        fpByte[9] = endByte[6];</span><br><span class="line">        fpByte[10] = endByte[46];</span><br><span class="line">        fpByte[11] = endByte[14];</span><br><span class="line">        fpByte[12] = endByte[54];</span><br><span class="line">        fpByte[13] = endByte[22];</span><br><span class="line">        fpByte[14] = endByte[62];</span><br><span class="line">        fpByte[15] = endByte[30];</span><br><span class="line">        fpByte[16] = endByte[37];</span><br><span class="line">        fpByte[17] = endByte[5];</span><br><span class="line">        fpByte[18] = endByte[45];</span><br><span class="line">        fpByte[19] = endByte[13];</span><br><span class="line">        fpByte[20] = endByte[53];</span><br><span class="line">        fpByte[21] = endByte[21];</span><br><span class="line">        fpByte[22] = endByte[61];</span><br><span class="line">        fpByte[23] = endByte[29];</span><br><span class="line">        fpByte[24] = endByte[36];</span><br><span class="line">        fpByte[25] = endByte[4];</span><br><span class="line">        fpByte[26] = endByte[44];</span><br><span class="line">        fpByte[27] = endByte[12];</span><br><span class="line">        fpByte[28] = endByte[52];</span><br><span class="line">        fpByte[29] = endByte[20];</span><br><span class="line">        fpByte[30] = endByte[60];</span><br><span class="line">        fpByte[31] = endByte[28];</span><br><span class="line">        fpByte[32] = endByte[35];</span><br><span class="line">        fpByte[33] = endByte[3];</span><br><span class="line">        fpByte[34] = endByte[43];</span><br><span class="line">        fpByte[35] = endByte[11];</span><br><span class="line">        fpByte[36] = endByte[51];</span><br><span class="line">        fpByte[37] = endByte[19];</span><br><span class="line">        fpByte[38] = endByte[59];</span><br><span class="line">        fpByte[39] = endByte[27];</span><br><span class="line">        fpByte[40] = endByte[34];</span><br><span class="line">        fpByte[41] = endByte[2];</span><br><span class="line">        fpByte[42] = endByte[42];</span><br><span class="line">        fpByte[43] = endByte[10];</span><br><span class="line">        fpByte[44] = endByte[50];</span><br><span class="line">        fpByte[45] = endByte[18];</span><br><span class="line">        fpByte[46] = endByte[58];</span><br><span class="line">        fpByte[47] = endByte[26];</span><br><span class="line">        fpByte[48] = endByte[33];</span><br><span class="line">        fpByte[49] = endByte[1];</span><br><span class="line">        fpByte[50] = endByte[41];</span><br><span class="line">        fpByte[51] = endByte[9];</span><br><span class="line">        fpByte[52] = endByte[49];</span><br><span class="line">        fpByte[53] = endByte[17];</span><br><span class="line">        fpByte[54] = endByte[57];</span><br><span class="line">        fpByte[55] = endByte[25];</span><br><span class="line">        fpByte[56] = endByte[32];</span><br><span class="line">        fpByte[57] = endByte[0];</span><br><span class="line">        fpByte[58] = endByte[40];</span><br><span class="line">        fpByte[59] = endByte[8];</span><br><span class="line">        fpByte[60] = endByte[48];</span><br><span class="line">        fpByte[61] = endByte[16];</span><br><span class="line">        fpByte[62] = endByte[56];</span><br><span class="line">        fpByte[63] = endByte[24];</span><br><span class="line">        return fpByte;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public String getBoxBinary(int i) &#123;</span><br><span class="line">        String binary = &quot;&quot;;</span><br><span class="line">        switch (i) &#123;</span><br><span class="line">        case 0:</span><br><span class="line">            binary = &quot;0000&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 1:</span><br><span class="line">            binary = &quot;0001&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">            binary = &quot;0010&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 3:</span><br><span class="line">            binary = &quot;0011&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 4:</span><br><span class="line">            binary = &quot;0100&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 5:</span><br><span class="line">            binary = &quot;0101&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 6:</span><br><span class="line">            binary = &quot;0110&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 7:</span><br><span class="line">            binary = &quot;0111&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 8:</span><br><span class="line">            binary = &quot;1000&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 9:</span><br><span class="line">            binary = &quot;1001&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 10:</span><br><span class="line">            binary = &quot;1010&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 11:</span><br><span class="line">            binary = &quot;1011&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 12:</span><br><span class="line">            binary = &quot;1100&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 13:</span><br><span class="line">            binary = &quot;1101&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 14:</span><br><span class="line">            binary = &quot;1110&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 15:</span><br><span class="line">            binary = &quot;1111&quot;;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        return binary;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*</span><br><span class="line">     * generate 16 keys for xor</span><br><span class="line">     * </span><br><span class="line">     */</span><br><span class="line">    public int[][] generateKeys(int[] keyByte) &#123;</span><br><span class="line">        int[] key = new int[56];</span><br><span class="line">        int[][] keys = new int[16][48];</span><br><span class="line"> </span><br><span class="line">        // keys[ 0] = new Array();</span><br><span class="line">        // keys[ 1] = new Array();</span><br><span class="line">        // keys[ 2] = new Array();</span><br><span class="line">        // keys[ 3] = new Array();</span><br><span class="line">        // keys[ 4] = new Array();</span><br><span class="line">        // keys[ 5] = new Array();</span><br><span class="line">        // keys[ 6] = new Array();</span><br><span class="line">        // keys[ 7] = new Array();</span><br><span class="line">        // keys[ 8] = new Array();</span><br><span class="line">        // keys[ 9] = new Array();</span><br><span class="line">        // keys[10] = new Array();</span><br><span class="line">        // keys[11] = new Array();</span><br><span class="line">        // keys[12] = new Array();</span><br><span class="line">        // keys[13] = new Array();</span><br><span class="line">        // keys[14] = new Array();</span><br><span class="line">        // keys[15] = new Array();</span><br><span class="line">        int[] loop = new int[] &#123; 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1 &#125;;</span><br><span class="line"> </span><br><span class="line">        for (int i = 0; i &lt; 7; i++) &#123;</span><br><span class="line">            for (int j = 0, k = 7; j &lt; 8; j++, k--) &#123;</span><br><span class="line">                key[i * 8 + j] = keyByte[8 * k + i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        int i = 0;</span><br><span class="line">        for (i = 0; i &lt; 16; i++) &#123;</span><br><span class="line">            int tempLeft = 0;</span><br><span class="line">            int tempRight = 0;</span><br><span class="line">            for (int j = 0; j &lt; loop[i]; j++) &#123;</span><br><span class="line">                tempLeft = key[0];</span><br><span class="line">                tempRight = key[28];</span><br><span class="line">                for (int k = 0; k &lt; 27; k++) &#123;</span><br><span class="line">                    key[k] = key[k + 1];</span><br><span class="line">                    key[28 + k] = key[29 + k];</span><br><span class="line">                &#125;</span><br><span class="line">                key[27] = tempLeft;</span><br><span class="line">                key[55] = tempRight;</span><br><span class="line">            &#125;</span><br><span class="line">            // var tempKey = new Array(48);</span><br><span class="line">            int[] tempKey = new int[48];</span><br><span class="line">            tempKey[0] = key[13];</span><br><span class="line">            tempKey[1] = key[16];</span><br><span class="line">            tempKey[2] = key[10];</span><br><span class="line">            tempKey[3] = key[23];</span><br><span class="line">            tempKey[4] = key[0];</span><br><span class="line">            tempKey[5] = key[4];</span><br><span class="line">            tempKey[6] = key[2];</span><br><span class="line">            tempKey[7] = key[27];</span><br><span class="line">            tempKey[8] = key[14];</span><br><span class="line">            tempKey[9] = key[5];</span><br><span class="line">            tempKey[10] = key[20];</span><br><span class="line">            tempKey[11] = key[9];</span><br><span class="line">            tempKey[12] = key[22];</span><br><span class="line">            tempKey[13] = key[18];</span><br><span class="line">            tempKey[14] = key[11];</span><br><span class="line">            tempKey[15] = key[3];</span><br><span class="line">            tempKey[16] = key[25];</span><br><span class="line">            tempKey[17] = key[7];</span><br><span class="line">            tempKey[18] = key[15];</span><br><span class="line">            tempKey[19] = key[6];</span><br><span class="line">            tempKey[20] = key[26];</span><br><span class="line">            tempKey[21] = key[19];</span><br><span class="line">            tempKey[22] = key[12];</span><br><span class="line">            tempKey[23] = key[1];</span><br><span class="line">            tempKey[24] = key[40];</span><br><span class="line">            tempKey[25] = key[51];</span><br><span class="line">            tempKey[26] = key[30];</span><br><span class="line">            tempKey[27] = key[36];</span><br><span class="line">            tempKey[28] = key[46];</span><br><span class="line">            tempKey[29] = key[54];</span><br><span class="line">            tempKey[30] = key[29];</span><br><span class="line">            tempKey[31] = key[39];</span><br><span class="line">            tempKey[32] = key[50];</span><br><span class="line">            tempKey[33] = key[44];</span><br><span class="line">            tempKey[34] = key[32];</span><br><span class="line">            tempKey[35] = key[47];</span><br><span class="line">            tempKey[36] = key[43];</span><br><span class="line">            tempKey[37] = key[48];</span><br><span class="line">            tempKey[38] = key[38];</span><br><span class="line">            tempKey[39] = key[55];</span><br><span class="line">            tempKey[40] = key[33];</span><br><span class="line">            tempKey[41] = key[52];</span><br><span class="line">            tempKey[42] = key[45];</span><br><span class="line">            tempKey[43] = key[41];</span><br><span class="line">            tempKey[44] = key[49];</span><br><span class="line">            tempKey[45] = key[35];</span><br><span class="line">            tempKey[46] = key[28];</span><br><span class="line">            tempKey[47] = key[31];</span><br><span class="line">            int m;</span><br><span class="line">            switch (i) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[0][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[1][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[2][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[3][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 4:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[4][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 5:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[5][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 6:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[6][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 7:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[7][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 8:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[8][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 9:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[9][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 10:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[10][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 11:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[11][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 12:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[12][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 13:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[13][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 14:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[14][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            case 15:</span><br><span class="line">                for (m = 0; m &lt; 48; m++) &#123;</span><br><span class="line">                    keys[15][m] = tempKey[m];</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return keys;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>示例(DES3加密和解密):<br>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;DES3&lt;/title&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;DES3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">var str= &quot;123456.&quot;;</span><br><span class="line">var key = &quot;qXSdHWfbSZaaLeHBRhLgxBiG&quot;;</span><br><span class="line">//alert(decrypt_3des);</span><br><span class="line">var des3en = DES3.encrypt(key,str);</span><br><span class="line">document.write(&quot;&lt;/br&gt;des3加密:&lt;/br&gt;&quot;+des3en);</span><br><span class="line">document.write(&quot;&lt;/br&gt;des3解密:&lt;/br&gt;&quot;+DES3.decrypt(key,des3en));</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><p>DES3.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">/** </span><br><span class="line"> * DES 加密算法 </span><br><span class="line"> * </span><br><span class="line"> * 该函数接受一个 8 字节字符串作为普通 DES 算法的密钥（也就是 64 位，但是算法只使用 56 位），或者接受一个 24 字节字符串作为 3DES </span><br><span class="line"> * 算法的密钥；第二个参数是要加密或解密的信息字符串；第三个布尔值参数用来说明信息是加密还是解密；接下来的可选参数 mode 如果是 0 表示 ECB </span><br><span class="line"> * 模式，1 表示 CBC 模式，默认是 ECB 模式；最后一个可选项是一个 8 字节的输入向量字符串（在 ECB 模式下不使用）。返回的密文是字符串。 </span><br><span class="line"> * </span><br><span class="line"> * 参数： &lt;br&gt; </span><br><span class="line"> * key: 8字节字符串作为普通 DES 算法的密钥,或 24 字节字符串作为 3DES &lt;br&gt; </span><br><span class="line"> * message： 加密或解密的信息字符串&lt;br&gt; </span><br><span class="line"> * encrypt: 布尔值参数用来说明信息是加密还是解密&lt;br&gt; </span><br><span class="line"> * mode: 1:CBC模式，0:ECB模式(默认)&lt;br&gt; </span><br><span class="line"> * iv:&lt;br&gt; </span><br><span class="line"> * padding: 可选项, 8字节的输入向量字符串（在 ECB 模式下不使用） </span><br><span class="line"> */</span><br><span class="line">//this takes the key, the message, and whether to encrypt or decrypt</span><br><span class="line">function des (key, message, encrypt, mode, iv, padding) &#123;</span><br><span class="line">  if(encrypt) //如果是加密的话，首先转换编码</span><br><span class="line">    message = unescape(encodeURIComponent(message));</span><br><span class="line">  //declaring this locally speeds things up a bit</span><br><span class="line">  var spfunction1 = new Array (0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004);</span><br><span class="line">  var spfunction2 = new Array (-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000);</span><br><span class="line">  var spfunction3 = new Array (0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200);</span><br><span class="line">  var spfunction4 = new Array (0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080);</span><br><span class="line">  var spfunction5 = new Array (0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100);</span><br><span class="line">  var spfunction6 = new Array (0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010);</span><br><span class="line">  var spfunction7 = new Array (0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002);</span><br><span class="line">  var spfunction8 = new Array (0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000);</span><br><span class="line">  //create the 16 or 48 subkeys we will need</span><br><span class="line">  var keys = des_createKeys (key);</span><br><span class="line">  var m=0, i, j, temp, temp2, right1, right2, left, right, looping;</span><br><span class="line">  var cbcleft, cbcleft2, cbcright, cbcright2</span><br><span class="line">  var endloop, loopinc;</span><br><span class="line">  var len = message.length;</span><br><span class="line">  var chunk = 0;</span><br><span class="line">  //set up the loops for single and triple des</span><br><span class="line">  var iterations = keys.length == 32 ? 3 : 9; //single or triple des</span><br><span class="line">  if (iterations == 3) &#123;looping = encrypt ? new Array (0, 32, 2) : new Array (30, -2, -2);&#125;</span><br><span class="line">  else &#123;looping = encrypt ? new Array (0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array (94, 62, -2, 32, 64, 2, 30, -2, -2);&#125;</span><br><span class="line">  //pad the message depending on the padding parameter</span><br><span class="line">  if (padding == 2) message += &quot;    &quot;; //pad the message with spaces</span><br><span class="line">  else if (padding == 1) &#123;</span><br><span class="line">    if(encrypt) &#123;</span><br><span class="line">      temp = 8-(len%8);</span><br><span class="line">      message += String.fromCharCode(temp,temp,temp,temp,temp,temp,temp,temp);</span><br><span class="line">      if (temp===8) len+=8;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; //PKCS7 padding</span><br><span class="line">  else if (!padding) message += &quot;\0\0\0\0\0\0\0\0&quot;; //pad the message out with null bytes</span><br><span class="line">  //store the result here</span><br><span class="line">  var result = &quot;&quot;;</span><br><span class="line">  var tempresult = &quot;&quot;;</span><br><span class="line">  if (mode == 1) &#123; //CBC mode</span><br><span class="line">    cbcleft = (iv.charCodeAt(m++) &lt;&lt; 24) | (iv.charCodeAt(m++) &lt;&lt; 16) | (iv.charCodeAt(m++) &lt;&lt; 8) | iv.charCodeAt(m++);</span><br><span class="line">    cbcright = (iv.charCodeAt(m++) &lt;&lt; 24) | (iv.charCodeAt(m++) &lt;&lt; 16) | (iv.charCodeAt(m++) &lt;&lt; 8) | iv.charCodeAt(m++);</span><br><span class="line">    m=0;</span><br><span class="line">  &#125;</span><br><span class="line">  //loop through each 64 bit chunk of the message</span><br><span class="line">  while (m &lt; len) &#123;</span><br><span class="line">    left = (message.charCodeAt(m++) &lt;&lt; 24) | (message.charCodeAt(m++) &lt;&lt; 16) | (message.charCodeAt(m++) &lt;&lt; 8) | message.charCodeAt(m++);</span><br><span class="line">    right = (message.charCodeAt(m++) &lt;&lt; 24) | (message.charCodeAt(m++) &lt;&lt; 16) | (message.charCodeAt(m++) &lt;&lt; 8) | message.charCodeAt(m++);</span><br><span class="line">    //for Cipher Block Chaining mode, xor the message with the previous result</span><br><span class="line">    if (mode == 1) &#123;if (encrypt) &#123;left ^= cbcleft; right ^= cbcright;&#125; else &#123;cbcleft2 = cbcleft; cbcright2 = cbcright; cbcleft = left; cbcright = right;&#125;&#125;</span><br><span class="line">    //first each 64 but chunk of the message must be permuted according to IP</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 4) ^ right) &amp; 0x0f0f0f0f; right ^= temp; left ^= (temp &lt;&lt; 4);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 16) ^ right) &amp; 0x0000ffff; right ^= temp; left ^= (temp &lt;&lt; 16);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; 2) ^ left) &amp; 0x33333333; left ^= temp; right ^= (temp &lt;&lt; 2);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; 8) ^ left) &amp; 0x00ff00ff; left ^= temp; right ^= (temp &lt;&lt; 8);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 1) ^ right) &amp; 0x55555555; right ^= temp; left ^= (temp &lt;&lt; 1);</span><br><span class="line">    left = ((left &lt;&lt; 1) | (left &gt;&gt;&gt; 31));</span><br><span class="line">    right = ((right &lt;&lt; 1) | (right &gt;&gt;&gt; 31));</span><br><span class="line">    //do this either 1 or 3 times for each chunk of the message</span><br><span class="line">    for (j=0; j&lt;iterations; j+=3) &#123;</span><br><span class="line">      endloop = looping[j+1];</span><br><span class="line">      loopinc = looping[j+2];</span><br><span class="line">      //now go through and perform the encryption or decryption</span><br><span class="line">      for (i=looping[j]; i!=endloop; i+=loopinc) &#123; //for efficiency</span><br><span class="line">        right1 = right ^ keys[i];</span><br><span class="line">        right2 = ((right &gt;&gt;&gt; 4) | (right &lt;&lt; 28)) ^ keys[i+1];</span><br><span class="line">        //the result is attained by passing these bytes through the S selection functions</span><br><span class="line">        temp = left;</span><br><span class="line">        left = right;</span><br><span class="line">        right = temp ^ (spfunction2[(right1 &gt;&gt;&gt; 24) &amp; 0x3f] | spfunction4[(right1 &gt;&gt;&gt; 16) &amp; 0x3f]</span><br><span class="line">          | spfunction6[(right1 &gt;&gt;&gt; 8) &amp; 0x3f] | spfunction8[right1 &amp; 0x3f]</span><br><span class="line">          | spfunction1[(right2 &gt;&gt;&gt; 24) &amp; 0x3f] | spfunction3[(right2 &gt;&gt;&gt; 16) &amp; 0x3f]</span><br><span class="line">          | spfunction5[(right2 &gt;&gt;&gt; 8) &amp; 0x3f] | spfunction7[right2 &amp; 0x3f]);</span><br><span class="line">      &#125;</span><br><span class="line">      temp = left; left = right; right = temp; //unreverse left and right</span><br><span class="line">    &#125; //for either 1 or 3 iterations</span><br><span class="line">    //move then each one bit to the right</span><br><span class="line">    left = ((left &gt;&gt;&gt; 1) | (left &lt;&lt; 31));</span><br><span class="line">    right = ((right &gt;&gt;&gt; 1) | (right &lt;&lt; 31));</span><br><span class="line">    //now perform IP-1, which is IP in the opposite direction</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 1) ^ right) &amp; 0x55555555; right ^= temp; left ^= (temp &lt;&lt; 1);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; 8) ^ left) &amp; 0x00ff00ff; left ^= temp; right ^= (temp &lt;&lt; 8);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; 2) ^ left) &amp; 0x33333333; left ^= temp; right ^= (temp &lt;&lt; 2);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 16) ^ right) &amp; 0x0000ffff; right ^= temp; left ^= (temp &lt;&lt; 16);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 4) ^ right) &amp; 0x0f0f0f0f; right ^= temp; left ^= (temp &lt;&lt; 4);</span><br><span class="line">    //for Cipher Block Chaining mode, xor the message with the previous result</span><br><span class="line">    if (mode == 1) &#123;if (encrypt) &#123;cbcleft = left; cbcright = right;&#125; else &#123;left ^= cbcleft2; right ^= cbcright2;&#125;&#125;</span><br><span class="line">    tempresult += String.fromCharCode ((left&gt;&gt;&gt;24), ((left&gt;&gt;&gt;16) &amp; 0xff), ((left&gt;&gt;&gt;8) &amp; 0xff), (left &amp; 0xff), (right&gt;&gt;&gt;24), ((right&gt;&gt;&gt;16) &amp; 0xff), ((right&gt;&gt;&gt;8) &amp; 0xff), (right &amp; 0xff));</span><br><span class="line">    chunk += 8;</span><br><span class="line">    if (chunk == 512) &#123;result += tempresult; tempresult = &quot;&quot;; chunk = 0;&#125;</span><br><span class="line">  &#125; //for every 8 characters, or 64 bits in the message</span><br><span class="line">  //return the result as an array</span><br><span class="line">  result += tempresult;</span><br><span class="line">  result = result.replace(/\0*$/g, &quot;&quot;);</span><br><span class="line">  if(!encrypt ) &#123; //如果是解密的话，解密结束后对PKCS7 padding进行解码，并转换成utf-8编码</span><br><span class="line">    if(padding === 1) &#123; //PKCS7 padding解码</span><br><span class="line">      var len = result.length, paddingChars = 0;</span><br><span class="line">      len &amp;&amp; (paddingChars = result.charCodeAt(len-1));</span><br><span class="line">      (paddingChars &lt;= 8) &amp;&amp; (result = result.substring(0, len - paddingChars));</span><br><span class="line">    &#125;</span><br><span class="line">    //转换成UTF-8编码</span><br><span class="line">    result = decodeURIComponent(escape(result));</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125; //end of des</span><br><span class="line">//des_createKeys</span><br><span class="line">//this takes as input a 64 bit key (even though only 56 bits are used)</span><br><span class="line">//as an array of 2 integers, and returns 16 48 bit keys</span><br><span class="line">function des_createKeys (key) &#123;</span><br><span class="line">  //declaring this locally speeds things up a bit</span><br><span class="line">  var pc2bytes0 = new Array (0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204);</span><br><span class="line">  var pc2bytes1 = new Array (0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101);</span><br><span class="line">  var pc2bytes2 = new Array (0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808);</span><br><span class="line">  var pc2bytes3 = new Array (0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000);</span><br><span class="line">  var pc2bytes4 = new Array (0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010);</span><br><span class="line">  var pc2bytes5 = new Array (0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420);</span><br><span class="line">  var pc2bytes6 = new Array (0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002);</span><br><span class="line">  var pc2bytes7 = new Array (0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800);</span><br><span class="line">  var pc2bytes8 = new Array (0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002);</span><br><span class="line">  var pc2bytes9 = new Array (0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408);</span><br><span class="line">  var pc2bytes10 = new Array (0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020);</span><br><span class="line">  var pc2bytes11 = new Array (0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200);</span><br><span class="line">  var pc2bytes12 = new Array (0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010);</span><br><span class="line">  var pc2bytes13 = new Array (0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105);</span><br><span class="line">  //how many iterations (1 for des, 3 for triple des)</span><br><span class="line">  var iterations = key.length &gt; 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys</span><br><span class="line">  //stores the return keys</span><br><span class="line">  var keys = new Array (32 * iterations);</span><br><span class="line">  //now define the left shifts which need to be done</span><br><span class="line">  var shifts = new Array (0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);</span><br><span class="line">  //other variables</span><br><span class="line">  var lefttemp, righttemp, m=0, n=0, temp;</span><br><span class="line">  for (var j=0; j&lt;iterations; j++) &#123; //either 1 or 3 iterations</span><br><span class="line">    var left = (key.charCodeAt(m++) &lt;&lt; 24) | (key.charCodeAt(m++) &lt;&lt; 16) | (key.charCodeAt(m++) &lt;&lt; 8) | key.charCodeAt(m++);</span><br><span class="line">    var right = (key.charCodeAt(m++) &lt;&lt; 24) | (key.charCodeAt(m++) &lt;&lt; 16) | (key.charCodeAt(m++) &lt;&lt; 8) | key.charCodeAt(m++);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 4) ^ right) &amp; 0x0f0f0f0f; right ^= temp; left ^= (temp &lt;&lt; 4);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; -16) ^ left) &amp; 0x0000ffff; left ^= temp; right ^= (temp &lt;&lt; -16);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 2) ^ right) &amp; 0x33333333; right ^= temp; left ^= (temp &lt;&lt; 2);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; -16) ^ left) &amp; 0x0000ffff; left ^= temp; right ^= (temp &lt;&lt; -16);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 1) ^ right) &amp; 0x55555555; right ^= temp; left ^= (temp &lt;&lt; 1);</span><br><span class="line">    temp = ((right &gt;&gt;&gt; 8) ^ left) &amp; 0x00ff00ff; left ^= temp; right ^= (temp &lt;&lt; 8);</span><br><span class="line">    temp = ((left &gt;&gt;&gt; 1) ^ right) &amp; 0x55555555; right ^= temp; left ^= (temp &lt;&lt; 1);</span><br><span class="line">    //the right side needs to be shifted and to get the last four bits of the left side</span><br><span class="line">    temp = (left &lt;&lt; 8) | ((right &gt;&gt;&gt; 20) &amp; 0x000000f0);</span><br><span class="line">    //left needs to be put upside down</span><br><span class="line">    left = (right &lt;&lt; 24) | ((right &lt;&lt; 8) &amp; 0xff0000) | ((right &gt;&gt;&gt; 8) &amp; 0xff00) | ((right &gt;&gt;&gt; 24) &amp; 0xf0);</span><br><span class="line">    right = temp;</span><br><span class="line">    //now go through and perform these shifts on the left and right keys</span><br><span class="line">    for (var i=0; i &lt; shifts.length; i++) &#123;</span><br><span class="line">      //shift the keys either one or two bits to the left</span><br><span class="line">      if (shifts[i]) &#123;left = (left &lt;&lt; 2) | (left &gt;&gt;&gt; 26); right = (right &lt;&lt; 2) | (right &gt;&gt;&gt; 26);&#125;</span><br><span class="line">      else &#123;left = (left &lt;&lt; 1) | (left &gt;&gt;&gt; 27); right = (right &lt;&lt; 1) | (right &gt;&gt;&gt; 27);&#125;</span><br><span class="line">      left &amp;= -0xf; right &amp;= -0xf;</span><br><span class="line">      //now apply PC-2, in such a way that E is easier when encrypting or decrypting</span><br><span class="line">      //this conversion will look like PC-2 except only the last 6 bits of each byte are used</span><br><span class="line">      //rather than 48 consecutive bits and the order of lines will be according to</span><br><span class="line">      //how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7</span><br><span class="line">      lefttemp = pc2bytes0[left &gt;&gt;&gt; 28] | pc2bytes1[(left &gt;&gt;&gt; 24) &amp; 0xf]</span><br><span class="line">        | pc2bytes2[(left &gt;&gt;&gt; 20) &amp; 0xf] | pc2bytes3[(left &gt;&gt;&gt; 16) &amp; 0xf]</span><br><span class="line">        | pc2bytes4[(left &gt;&gt;&gt; 12) &amp; 0xf] | pc2bytes5[(left &gt;&gt;&gt; 8) &amp; 0xf]</span><br><span class="line">        | pc2bytes6[(left &gt;&gt;&gt; 4) &amp; 0xf];</span><br><span class="line">      righttemp = pc2bytes7[right &gt;&gt;&gt; 28] | pc2bytes8[(right &gt;&gt;&gt; 24) &amp; 0xf]</span><br><span class="line">        | pc2bytes9[(right &gt;&gt;&gt; 20) &amp; 0xf] | pc2bytes10[(right &gt;&gt;&gt; 16) &amp; 0xf]</span><br><span class="line">        | pc2bytes11[(right &gt;&gt;&gt; 12) &amp; 0xf] | pc2bytes12[(right &gt;&gt;&gt; 8) &amp; 0xf]</span><br><span class="line">        | pc2bytes13[(right &gt;&gt;&gt; 4) &amp; 0xf];</span><br><span class="line">      temp = ((righttemp &gt;&gt;&gt; 16) ^ lefttemp) &amp; 0x0000ffff;</span><br><span class="line">      keys[n++] = lefttemp ^ temp; keys[n++] = righttemp ^ (temp &lt;&lt; 16);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; //for each iterations</span><br><span class="line">  //return the keys we&apos;ve created</span><br><span class="line">  return keys;</span><br><span class="line">&#125; //end of des_createKeys</span><br><span class="line">function genkey(key, start, end) &#123;</span><br><span class="line">  //8 byte / 64 bit Key (DES) or 192 bit Key</span><br><span class="line">  return &#123;key:pad(key.slice(start, end)),vector: 1&#125;;</span><br><span class="line">&#125;</span><br><span class="line">function pad(key) &#123;</span><br><span class="line">  for (var i = key.length; i&lt;24; i++) &#123;</span><br><span class="line">    key+=&quot;0&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  return key;</span><br><span class="line">&#125;</span><br><span class="line">var des3iv = &apos;12345678&apos;;</span><br><span class="line"></span><br><span class="line">var DES3 = &#123;</span><br><span class="line">  //3DES加密，CBC/PKCS5Padding</span><br><span class="line">  encrypt:function(key,input)&#123;</span><br><span class="line">    var genKey = genkey(key, 0, 24);</span><br><span class="line">    return btoa(des(genKey.key, input, 1, 1, des3iv, 1));</span><br><span class="line">  &#125;,</span><br><span class="line">  ////3DES解密，CBC/PKCS5Padding</span><br><span class="line">  decrypt:function(key,input)&#123;</span><br><span class="line">    var genKey = genkey(key, 0, 24); </span><br><span class="line">    return des(genKey.key, atob(input), 0, 1, des3iv, 1); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>参考链接:<br>MD5算法的必要性以及实际应用:<a href="http://www.jiamisoft.com/blog/23015-qdgs.html" target="_blank" rel="noopener">http://www.jiamisoft.com/blog/23015-qdgs.html</a><br>DES、AES、RSA、MD5加密算法辨析与应用场景:<a href="https://blog.csdn.net/kegebo_h/article/details/78056536" target="_blank" rel="noopener">https://blog.csdn.net/kegebo_h/article/details/78056536</a><br>md5.js加密:<a href="https://www.cnblogs.com/CooLLYP/p/8628467.html" target="_blank" rel="noopener">https://www.cnblogs.com/CooLLYP/p/8628467.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VsCode插件开发之通信</title>
      <link href="/2019/03/01/VsCode%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B9%8B%E9%80%9A%E4%BF%A1/"/>
      <url>/2019/03/01/VsCode%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B9%8B%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>今天的主题主要围绕这么几个方面来进行?</p><ul><li>如何开发出一个VsCode插件?</li><li>使用ts开发VsCode插件(ts在此如何通信)</li><li>使用js开发VsCode插件(js在此如何通信)</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> VsCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现机器人聊天</title>
      <link href="/2019/03/01/Python%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%81%8A%E5%A4%A9/"/>
      <url>/2019/03/01/Python%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%81%8A%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>今天午休的时候，无意之中看了一篇博客，名字叫Python实现机器人，感觉挺有的意思的。<br><a id="more"></a><br>于是用其写了一个简单的Python聊天，源码如下所示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import aiml</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">def get_module_dir(name):</span><br><span class="line"> print(&quot;module&quot;, sys.modules[name])</span><br><span class="line"> path = getattr(sys.modules[name], &apos;__file__&apos;, None)</span><br><span class="line"> print(path)</span><br><span class="line"> if not path:</span><br><span class="line">  raise AttributeError(&apos;module %s has not attribute __file__&apos; % name)</span><br><span class="line"> return os.path.dirname(os.path.abspath(path))</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">alice_path = get_module_dir(&apos;aiml&apos;) + &apos;\\botdata\\alice&apos;</span><br><span class="line"> </span><br><span class="line">os.chdir(alice_path)  # 切换到语料库所在工作目录</span><br><span class="line"> </span><br><span class="line">alice = aiml.Kernel()  # 创建机器人alice对象</span><br><span class="line">alice.learn(&quot;startup.xml&quot;) # 加载...\\botdata\\alice\\startup.xml</span><br><span class="line">alice.respond(&apos;LOAD ALICE&apos;) # 加载...\\botdata\\alice目录下的语料库</span><br><span class="line">  </span><br><span class="line">while True:</span><br><span class="line"> message = input(&quot;Enter your message &gt;&gt; &quot;)</span><br><span class="line"> if(&quot;exit&quot; == message):</span><br><span class="line">  exit()</span><br><span class="line"> response = alice.respond(message) # 机器人应答</span><br><span class="line"> print(response)</span><br></pre></td></tr></table></figure></p><p>注意:如果出现某某模块找不到的时候，记得使用pip安装对应的模块。</p><p>效果图如下所示:<br><img src="/2019/03/01/Python实现机器人聊天/rebot01.png" alt=""></p><p>唯一美中不足的是英文，不过没关系，国内有图灵机器人。</p><p>代码如下所示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">from urllib.request import urlopen,Request</span><br><span class="line">from urllib.error import URLError</span><br><span class="line">from urllib.parse import urlencode</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line">class TuringChatMode(object):</span><br><span class="line">    &quot;&quot;&quot;this mode base on turing robot&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        # API接口地址</span><br><span class="line">        self.turing_url = &apos;http://www.tuling123.com/openapi/api?&apos;</span><br><span class="line"></span><br><span class="line">    def get_turing_text(self,text):</span><br><span class="line">        &apos;&apos;&apos; 请求方式:   HTTP POST</span><br><span class="line">            请求参数:   参数      是否必须        长度          说明</span><br><span class="line">                        key        必须          32           APIkey</span><br><span class="line">                        info       必须          1-32         请求内容，编码方式为&quot;utf-8&quot;</span><br><span class="line">                        userid     必须          32           MAC地址或ID</span><br><span class="line">        &apos;&apos;&apos;</span><br><span class="line">        turing_url_data = dict(</span><br><span class="line">            key = &apos;fcbf9efe277e493993e889eabca5b331&apos;,</span><br><span class="line">            info = text,</span><br><span class="line">            userid = &apos;60-14-B3-BA-E1-4D&apos;,</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line">        # print(&quot;The things to Request is:&quot;,self.turing_url + urlencode(turing_url_data))</span><br><span class="line">        self.request = Request(self.turing_url + urlencode(turing_url_data))</span><br><span class="line">        # print(&quot;The result of Request is:&quot;,self.request)</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            w_data = urlopen(self.request)</span><br><span class="line">            # print(&quot;Type of the data from urlopen:&quot;,type(w_data))</span><br><span class="line">            # print(&quot;The data from urlopen is:&quot;,w_data)</span><br><span class="line">        except URLError:</span><br><span class="line">            raise IndexError(&quot;No internet connection available to transfer txt data&quot;)</span><br><span class="line">            # 如果发生网络错误，断言提示没有可用的网络连接来传输文本信息</span><br><span class="line">        except:</span><br><span class="line">            raise KeyError(&quot;Server wouldn&apos;t respond (invalid key or quota has been maxed out)&quot;)</span><br><span class="line">            # 其他情况断言提示服务相应次数已经达到上限</span><br><span class="line"></span><br><span class="line">        response_text = w_data.read().decode(&apos;utf-8&apos;)</span><br><span class="line">        # print(&quot;Type of the response_text :&quot;,type(response_text))</span><br><span class="line">        # print(&quot;response_text :&quot;,response_text)</span><br><span class="line"></span><br><span class="line">        json_result = json.loads(response_text)</span><br><span class="line">        # print(&quot;Type of the json_result :&quot;,type(json_result))</span><br><span class="line">        return json_result[&apos;text&apos;]</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    print(&quot;Now u can type in something &amp; input q to quit&quot;)</span><br><span class="line"></span><br><span class="line">    turing = TuringChatMode()</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        msg = input(&quot;\nMaster:&quot;)</span><br><span class="line">        if msg == &apos;q&apos;:</span><br><span class="line">            exit(&quot;u r quit the chat !&quot;)         # 设定输入q，退出聊天。</span><br><span class="line">        else:</span><br><span class="line">            turing_data = turing.get_turing_text(msg)</span><br><span class="line">            print(&quot;Robot:&quot;,turing_data)</span><br></pre></td></tr></table></figure></p><p>效果图如下:<br><img src="/2019/03/01/Python实现机器人聊天/rebot02.png" alt=""></p><p>可能由于机器人智能太低了，有点答非所问。</p><p>更多精彩可以去图灵机器人官网了解:<a href="http://www.tuling123.com" target="_blank" rel="noopener">http://www.tuling123.com</a></p><p>编程的世界是有趣的，你去探索，你会发现很多有意思的事情。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js使用express框架进行文件上传</title>
      <link href="/2019/03/01/node-js%E4%BD%BF%E7%94%A8express%E6%A1%86%E6%9E%B6%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2019/03/01/node-js%E4%BD%BF%E7%94%A8express%E6%A1%86%E6%9E%B6%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<p>关于node.js使用express框架进行文件上传，主要来自于最近对Settings-Sync插件做的研究。<br>目前的研究算是取得的比较好的进展。<br>Settings-Sync中通过快捷键上传文件，其实主要还是请求后端接口。<br>于是我便使用node.js模拟一个服务，这个服务其实就相当于github api(Settings-Sync实际请求的接口，比如token验证，gist存储创建等都是来自github 对应的api)。<br><a id="more"></a><br>话不多说，直接代码贴起讲解:</p><h2><span id="1创建一个nodejs项目这里我以express框架为例">1.创建一个node.js项目(这里我以express框架为例)</span></h2><p>关于如何创建一个node.js项目我就不详细说，通常通过npm init就可以创建一个node.js项目了。<br>关于node.js项目详细教程，可以参考该篇文章<a href="https://www.jianshu.com/p/7b0a5d4491ba" target="_blank" rel="noopener">nodeJS入门——新建一个项目及代码详解</a><br>当然了，如果你是直接通过这篇文章操作，最先可能会报这个错误，错误信息如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;express&apos; 不是内部或外部命令，也不是可运行的程序</span><br><span class="line">或批处理文件。</span><br></pre></td></tr></table></figure><p>解决方式很简单，并不是npm install -g express就可以的，在此之前还需执行npm install -g express-generator</p><p>这条命令很好理解，你可以将其理解为你的express框架生成器，以Java中Maven来说，通常ide就把maven结构都弄好了，你只需在创建项目的时候，勾选maven即可，它会自己将所有相关项目包括配置文件一起生成。</p><p>虽然说我将地址贴出来，但是我觉得还是实际操作一遍，这样对此有一个感性认识(初学编程的人或者是已经有编程经验的人，是绝对不能忽略这一点的)。</p><p>流程如下:</p><h4><span id="a使用express命令创建express项目">a.使用express命令创建express项目</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">express blog</span><br></pre></td></tr></table></figure><h5><span id="效果图如下">效果图如下:</span></h5><p><img src="/2019/03/01/node-js使用express框架进行文件上传/express01.png" alt=""></p><p>express非常有人性化，已经告诉你怎么进入blog项目及其安装相关的库依赖和启动了，你只需按照它的这个步骤，一步一步来就行了。</p><h4><span id="b目录结构分析">b.目录结构分析</span></h4><h5><span id="示意图如下所示">示意图如下所示:</span></h5><p><img src="/2019/03/01/node-js使用express框架进行文件上传/express02.png" alt=""><br>app.js:——启动文件，也可以说是主文件入口。<br>package.json——定义了这个项目所需要的各种模块，以及项目的配置信息（比如名称、版本、许可证等元数据）。npm install命令根据这个配置文件，自动下载所需的模块，也就是配置项目所需的运行和开发环境。<br>node_modules——存放package.json中安装的模块，当你在package.json添加依赖的模块并安装后，存放在这个文件夹下<br>public——存放image、css、js等文件<br>routes——存放路由文件<br>views——存放视图文件或者说模板文件<br>bin——存放可执行文件</p><h2><span id="2使用express框架进行文件上传">2.使用express框架进行文件上传</span></h2><p>注意，目录结构如下所示(我主要是复用最近研究的mock-github-api):<br><img src="/2019/03/01/node-js使用express框架进行文件上传/express03.png" alt=""></p><h4><span id="a准备html文件">a.准备html文件</span></h4><p>public文件夹主要放置静态文件，如index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;文件上传&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;文件上传：&lt;/h3&gt;</span><br><span class="line">    选择一个文件上传: &lt;br /&gt;</span><br><span class="line">    &lt;form action=&quot;/gists&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;file&quot; name=&quot;content&quot; /&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;上传文件&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><h4><span id="b编写相关的js">b.编写相关的js</span></h4><p>像upload.js属于路由，通常放置在routes文件夹下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">var fs = require(&apos;fs&apos;);</span><br><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line">var multer  = require(&apos;multer&apos;);</span><br><span class="line">var path = require(&apos;path&apos;);</span><br><span class="line">var router = express.Router();</span><br><span class="line"></span><br><span class="line">var upload = multer(&#123;dest: &apos;upload_tmp/&apos;&#125;);</span><br><span class="line"></span><br><span class="line">router.post(&apos;/&apos;, upload.any(), function(req, res, next) &#123;</span><br><span class="line">    console.log(req.files[0]);  // 上传的文件信息</span><br><span class="line"></span><br><span class="line">    var des_file = &quot;./upload/&quot; + req.files[0].originalname;</span><br><span class="line">    fs.readFile( req.files[0].path, function (err, data) &#123;</span><br><span class="line">        fs.writeFile(des_file, data, function (err) &#123;</span><br><span class="line">            if( err )&#123;</span><br><span class="line">                console.log( err );</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                response = &#123;</span><br><span class="line">                    message:&apos;File uploaded successfully&apos;,</span><br><span class="line">                    filename:req.files[0].originalname</span><br><span class="line">                &#125;;</span><br><span class="line">                console.log( response );</span><br><span class="line">                res.end( JSON.stringify( response ) );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">module.exports = router;</span><br></pre></td></tr></table></figure></p><h4><span id="c上传文件及其效果">c.上传文件及其效果</span></h4><h5><span id="页面图">页面图:</span></h5><p><img src="/2019/03/01/node-js使用express框架进行文件上传/express04.png" alt=""></p><h5><span id="上传成功显示图">上传成功显示图:</span></h5><p><img src="/2019/03/01/node-js使用express框架进行文件上传/express05.png" alt=""></p><h5><span id="upload文件夹下会有对应的文件也就是你刚刚通过页面上传的文件">upload文件夹下会有对应的文件(也就是你刚刚通过页面上传的文件)</span></h5><p><img src="/2019/03/01/node-js使用express框架进行文件上传/express06.png" alt=""></p><p>最后例子中还有阿里云和腾讯云的图片存储，大家可以做一个参考。</p><p>源码地址为:<a href="https://github.com/developers-youcong/mock-github-api" target="_blank" rel="noopener">https://github.com/developers-youcong/mock-github-api</a></p><p>希望能够对大家有所启发和帮助</p><p>注意，可能遇到的问题:</p><p>问题一:静态资源需要放行，否则无法访问<br>在index.js补充这段代码即可解决这个问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(express.static(path.join(__dirname, &apos;public&apos;)))</span><br></pre></td></tr></table></figure></p><p>问题二:socket hang up</p><p>我将var bodyParser = require(‘body-parser’)去除就解决了这个问题</p><p>参考链接如:<a href="https://blog.csdn.net/gsying1474/article/details/52200445" target="_blank" rel="noopener">https://blog.csdn.net/gsying1474/article/details/52200445</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx让所有的http地址重定向到https</title>
      <link href="/2019/03/01/nginx%E8%AE%A9%E6%89%80%E6%9C%89%E7%9A%84http%E5%9C%B0%E5%9D%80%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0https/"/>
      <url>/2019/03/01/nginx%E8%AE%A9%E6%89%80%E6%9C%89%E7%9A%84http%E5%9C%B0%E5%9D%80%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0https/</url>
      
        <content type="html"><![CDATA[<p>问:为什么让所有的http都重定向到https呢？<br>答:因为这样会使网站更安全些。<br><a id="more"></a><br>那么我是如何在nginx配置，让输入<a href="http://www.youcongtech.com或者youcongtech.com全部都重定向到https://www.youcongtech.com的呢？" target="_blank" rel="noopener">http://www.youcongtech.com或者youcongtech.com全部都重定向到https://www.youcongtech.com的呢？</a><br>其实我仅仅只是在nginx.conf配置文件中的server配置了如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^(.*)$  https://$host$1 permanent;</span><br></pre></td></tr></table></figure></p><p>这段配置的含义将所有的http请求通过rewrite重写到https上。</p><p>下面贴一下我的nginx.conf配置文件(主要重要的):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"> upstream  www.youcongtech.com&#123;</span><br><span class="line">         server   39.107.110.227:2019;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"> server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.youcongtech.com;</span><br><span class="line">        rewrite ^(.*)$  https://$host$1 permanent;</span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location ~ / &#123;</span><br><span class="line">            root /usr/local/nginx/html;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      server &#123;</span><br><span class="line">        listen 443;</span><br><span class="line">        server_name www.youcongtech.com;</span><br><span class="line">        ssl on;</span><br><span class="line">        index index.html;</span><br><span class="line">        ssl_certificate /usr/local/nginx/cert/18540291_www.youcongtech.com.pem;</span><br><span class="line">        ssl_certificate_key /usr/local/nginx/cert/18540291_www.youcongtech.com.key;</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_set_header X-Forwarded-Host $host;</span><br><span class="line">                proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_set_header Host $http_host;</span><br><span class="line">                proxy_redirect off;</span><br><span class="line">                expires off;</span><br><span class="line">                sendfile off;</span><br><span class="line">                proxy_pass http://www.youcongtech.com;</span><br><span class="line">                root /usr/local/nginx/html;</span><br><span class="line">                index index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/blog/(.*)&#123;</span><br><span class="line">                 proxy_set_header Host $host;</span><br><span class="line">                 proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                 proxy_pass http://www.youcongtech.com;    #转向tomcat处理</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面参数到底是什么意思，加或者不加到底会怎么样，关于nginx参数详解和更好的优化，后续会有详细的讲解，我会继续编写我的博客系统，并以此作为案例。<br>当然了，如果公司涉及这块比较多，后续我也会以公司案例来给大家讲解。</p><p>本文主要参考该地址:<a href="https://www.cnblogs.com/kevingrace/p/6187072.html" target="_blank" rel="noopener">https://www.cnblogs.com/kevingrace/p/6187072.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx配置https</title>
      <link href="/2019/02/26/nginx%E9%85%8D%E7%BD%AEhttps/"/>
      <url>/2019/02/26/nginx%E9%85%8D%E7%BD%AEhttps/</url>
      
        <content type="html"><![CDATA[<p>其实nginx配置也差不太多，虽然差不太多，但还是有区别的。<br><a id="more"></a><br>假定你已经在阿里云完成了证书申请，接下来你就可以按照如下配置(主要是修改nginx.conf文件)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 443;</span><br><span class="line">        server_name www.youcongtech.com;</span><br><span class="line">        ssl on;</span><br><span class="line">        index index.html;</span><br><span class="line">        ssl_certificate /usr/local/nginx/cert/1854029_www.youcongtech.com.pem;</span><br><span class="line">        ssl_certificate_key /usr/local/nginx/cert/1854029_www.youcongtech.com.key;</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_set_header X-Forwarded-Host $host;</span><br><span class="line">                proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_set_header Host $http_host;</span><br><span class="line">                proxy_redirect off;</span><br><span class="line">                expires off;</span><br><span class="line">                sendfile off;</span><br><span class="line">                proxy_pass http://www.youcongtech.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>按照这样配置你不一定成功，可能会遇见下面的几个错误？</p><h2><span id="错误1">错误1</span></h2><p>错误信息:ubuntu error: SSL modules require the OpenSSL library.</p><p>解决办法:<br>执行该命令即可解决:sudo apt-get install openssl libssl-dev<br>参考链接为:<a href="https://yq.aliyun.com/articles/486172" target="_blank" rel="noopener">https://yq.aliyun.com/articles/486172</a></p><h2><span id="错误2">错误2</span></h2><p>错误信息:nginx: [emerg] unknown directive “ssl” in /usr/local/nginx/conf/nginx.conf:188</p><p>解决办法:<br>在Nginx解压目录执行该命令:./configure –with-http_ssl_module</p><p>参考链接为:<a href="https://blog.csdn.net/weiyangdong/article/details/80008543" target="_blank" rel="noopener">https://blog.csdn.net/weiyangdong/article/details/80008543</a></p><p>如果你对此还有疑问的话，可以参考这个链接:<a href="https://www.cnblogs.com/tianhei/p/7726505.html" target="_blank" rel="noopener">https://www.cnblogs.com/tianhei/p/7726505.html</a><br>这个链接会讲如何申请证书到配置https成功。</p><p>最后在浏览器输入:<a href="https://www.youcongtech.com" target="_blank" rel="noopener">https://www.youcongtech.com</a> 你会看到一个博客界面或者是一个Nginx欢迎页。<br>当然了，目前我的阿里云域名尚在认证中，过段时间就可以申请下来了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode源码编译运行打包使其由英文变为中文</title>
      <link href="/2019/02/25/vscode%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E6%89%93%E5%8C%85%E4%BD%BF%E5%85%B6%E7%94%B1%E8%8B%B1%E6%96%87%E5%8F%98%E4%B8%BA%E4%B8%AD%E6%96%87/"/>
      <url>/2019/02/25/vscode%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E6%89%93%E5%8C%85%E4%BD%BF%E5%85%B6%E7%94%B1%E8%8B%B1%E6%96%87%E5%8F%98%E4%B8%BA%E4%B8%AD%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>vscode默认是英文，如果你想让其变为中文，可参考这个链接:<a href="https://blog.csdn.net/testcs_dn/article/details/75070415" target="_blank" rel="noopener">https://blog.csdn.net/testcs_dn/article/details/75070415</a></p><p>最近发现一个很奇怪的问题，vscode打包前和打包后存在很大的不同的，正常来说，比如我们开发项目，实际上来说，本地怎么样，线上就怎么样，当然了，也不排除一些线上导致的bug。</p><p>比如vscode源码已经启用了中文语言包插件，同时也修改了locale.json文件(将文件中的en改为zh-CN)，但是还是是英文，后来我转念一想，将这个中文语言包弄到打包好的插件放置处，最后发现居然可以了。</p><p>当然了，也存在一点问题，问题是绝大部分可以翻译为中文，少部分还是英文。<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> VsCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云配置tomcat https</title>
      <link href="/2019/02/25/%E9%98%BF%E9%87%8C%E4%BA%91%E9%85%8D%E7%BD%AEtomcat-https/"/>
      <url>/2019/02/25/%E9%98%BF%E9%87%8C%E4%BA%91%E9%85%8D%E7%BD%AEtomcat-https/</url>
      
        <content type="html"><![CDATA[<p>阿里云申请免费的SSL证书和配置https，可参考该篇博文:<a href="https://blog.csdn.net/baidu_19473529/article/details/70037976" target="_blank" rel="noopener">https://blog.csdn.net/baidu_19473529/article/details/70037976</a></p><p>虽然有现成的，不过我还是要做一个小小的总结记录一下。</p><p>由于我公司使用的tomcat主要是8.5,所以我以8.5配置作为讲解(总的来说，配置相差不大)</p><p>假定你已经在阿里云成功申请到免费的SSL证书，现在我们开始来配置。<br><a id="more"></a></p><h2><span id="1首先讲pfx文件放在tomcat的一个叫cert的文件夹tomcat实际上没有这个文件夹你可以选择手动创建一个">1.首先讲pfx文件放在tomcat的一个叫cert的文件夹(tomcat实际上没有这个文件夹，你可以选择手动创建一个)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd tomcat8</span><br><span class="line">mkdir cert</span><br></pre></td></tr></table></figure><h2><span id="2修改serverxml">2.修改server.xml</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span><br><span class="line">               maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot;  scheme=&quot;https&quot;</span><br><span class="line">    secure=&quot;true&quot;</span><br><span class="line">               &gt;</span><br><span class="line">        &lt;SSLHostConfig&gt;</span><br><span class="line">             &lt;Certificate certificateKeystoreFile=&quot;cert/test.pfx&quot;</span><br><span class="line">                         certificateKeystoreType=&quot;PKCS12&quot; certificateKeystorePassword=&quot;1541231341210&quot; /&gt;</span><br><span class="line">        &lt;/SSLHostConfig&gt;</span><br><span class="line">    &lt;/Connector&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &lt;Connector port=&quot;80&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;443&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;443&quot; /&gt;</span><br></pre></td></tr></table></figure><h2><span id="3修改webxml">3.修改web.xml</span></h2><p>编辑web.xml，不加下面这段的话不能把http请求转为https<br>在该文件标签（一般在文件最末尾）后面加上这样一段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;login-config&gt;  </span><br><span class="line">    &lt;!-- Authorization setting for SSL --&gt;  </span><br><span class="line">    &lt;auth-method&gt;CLIENT-CERT&lt;/auth-method&gt;  </span><br><span class="line">    &lt;realm-name&gt;Client Cert Users-only Area&lt;/realm-name&gt;  </span><br><span class="line">&lt;/login-config&gt;  </span><br><span class="line">&lt;security-constraint&gt;  </span><br><span class="line">    &lt;!-- Authorization setting for SSL --&gt;  </span><br><span class="line">    &lt;web-resource-collection &gt;  </span><br><span class="line">        &lt;web-resource-name &gt;SSL&lt;/web-resource-name&gt;  </span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  </span><br><span class="line">    &lt;/web-resource-collection&gt;  </span><br><span class="line">    &lt;user-data-constraint&gt;  </span><br><span class="line">        &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;  </span><br><span class="line">    &lt;/user-data-constraint&gt;  </span><br><span class="line">&lt;/security-constraint&gt;</span><br></pre></td></tr></table></figure></p><p>本文主要参考该篇博文<a href="https://blog.csdn.net/qq_35624642/article/details/83016813" target="_blank" rel="noopener">Tomcat8、9配置https SSL证书 阿里云的免费dv证书</a></p><p>另外为了调试方便，本地tomcat还需配置https,关于windowns配置https，可参考该篇博文<a href="https://blog.csdn.net/u014793522/article/details/54846973" target="_blank" rel="noopener">本地windows搭建https</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot打成的jar包如何在Linux上持久运行</title>
      <link href="/2019/02/23/springboot%E6%89%93%E6%88%90%E7%9A%84jar%E5%8C%85%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/"/>
      <url>/2019/02/23/springboot%E6%89%93%E6%88%90%E7%9A%84jar%E5%8C%85%E5%A6%82%E4%BD%95%E5%9C%A8Linux%E4%B8%8A%E6%8C%81%E4%B9%85%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h2><span id="一-首先说说在没有springboot的时候项目是如何部署的">一、首先说说在没有springboot的时候，项目是如何部署的？</span></h2><h4><span id="1动态web项目">1.动态web项目</span></h4><p>动态web项目部署很方便，基本上上传文件到服务器的tomcat里面的webapps文件夹下即可完成部署。<br>当然了，这种做法的弊端是，如果是通过winscp来传输对于网速方面要求严格，不然的话网速一卡，很久传不过去，很耽误时间的，当然了，我一个同学他们公司用的就是动态web项目，部署的方式也正是采用这种方式，据说是公司制度定下的。原因我就没有细问过他。</p><p>当然了，有人会说，那我上传到服务器之前将其压缩成一个zip包，然后在Linux通过unzip命令解压。这种方式我以前也这么干过。<br>当我后来发现将动态web项目导出war包，直接通过winscp上传到tomcat对应的目录下，在当前目录就会产生一个文件夹，该文件夹主要是web相关的资源，还有就是java产生的编译文件class等。</p><p>由此可以推出动态web项目常规部署方式有这么几种?<br>a.直接上传到tomcat对应的目录下;<br>b.先打成zip包然后再传输到tomcat对应的目录下;<br>c.本地导出war包，然后在传输到tomcat对应的目录下;</p><p>其实a和b是一样的，c则是利用Eclipse的导出war功能来实现的。<br><a id="more"></a></p><h4><span id="2maven项目">2.maven项目</span></h4><p>maven项目的部署以war项目为例，直接通过mvn install 或者mvn clean package直接打包上传到服务器上，就即可完成部署。<br>当然了，还可以通过写一个脚本利用git clone的特性加上maven，也可以完成快速部署</p><p>来个小结:<br>现在使用动态web项目都是一些老公司维护一些老的项目，总而言之，现在大部分都在用mavne，当然，也不排除有一部分用grandle或ant等。<br>其实发现用maven以后除了有些时候导入依赖(依赖之间因版本冲突问题，为此我感到烦之外，其它都还好)。</p><p>说完这两种项目部署后，下面我再说springboot打包成jar，如何在Linux上持久运行。</p><h2><span id="二-springboot打成的jar如何在linux上持久运行">二、springboot打成的jar如何在Linux上持久运行</span></h2><p>首先呢？你本地要有一个springboot的项目，如果没有可以参考我的这篇博客写一个,<a href="https://www.cnblogs.com/youcong/p/8098861.html" target="_blank" rel="noopener">springboot入门程序</a></p><p>然后呢？你要有一个虚拟机搭建一个Linux服务器或者是远程服务器(阿里云或者腾讯云、百度云、美团云等)。</p><p>再然后，你还要有一个winscp，winscp官网地址为:<a href="https://winscp.net/eng/docs/lang:chs(你可以去官网下载)" target="_blank" rel="noopener">https://winscp.net/eng/docs/lang:chs(你可以去官网下载)</a></p><p>最后将springboot打包(确保本地运行没有问题)，利用winscp上传到Linux上。</p><p>通过该命令运行jar包:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar blog.jar &gt; system.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p><p>会在本地有一个system.log文件产生，通过该文件你可以看到对应的日志输出。</p><p>下面我们对这条命令进行分析</p><p>nohub一般形式为如下:</p><p>nohub command &amp;</p><p>但是当你退出账户时，仍然会停止对应的进程。</p><p>所以这就需要你在后面添加 2&gt;&amp;1 &amp;(相当于正常退出，仍保持命令在后台运行)</p><p>上面这个command正好对上java -jar blog.jar &gt; system.log</p><p>“&gt;” 输出重定向，通常用于输出日志</p><p>本文主要参考该地址:<a href="https://www.cnblogs.com/createhappy/p/9375874.html" target="_blank" rel="noopener">https://www.cnblogs.com/createhappy/p/9375874.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将博客园的数据迁移到wordpress上面</title>
      <link href="/2019/02/23/%E5%A6%82%E4%BD%95%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%9B%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0wordpress%E4%B8%8A%E9%9D%A2/"/>
      <url>/2019/02/23/%E5%A6%82%E4%BD%95%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%9B%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0wordpress%E4%B8%8A%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>有些时候我不得不惊叹软件系统的强大。<br>比如如果不是今天我想着将博客园的数据迁移到wordpress上，也许我不会认识到wordpress的强大之处。<br>之所以导入是因为我觉得已经有现成的数据，我自己就不必造太多假数据，省事。<br>之前还想着如果实在不想就用python爬取数据将其存到数据库中，同时也还想着一个笨办法(传统的cv大法)。<br><a id="more"></a><br>从博客园迁移数据到wordpress对应的插件为:<a href="https://wordpress.org/plugins/cnblogs2wp/" target="_blank" rel="noopener">https://wordpress.org/plugins/cnblogs2wp/</a></p><p>如果你的wordpress本身存在某些问题，可以参考如下链接:<br>wordpress之插件安装和主题安装(包含常见问题):<a href="https://www.cnblogs.com/youcong/p/9245621.html" target="_blank" rel="noopener">https://www.cnblogs.com/youcong/p/9245621.html</a><br>如果是因为文件上传大小限制，可找到对应的php.ini修改<br>参考链接如:<a href="https://jingyan.baidu.com/article/c85b7a64570aad003bac95ad.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/c85b7a64570aad003bac95ad.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wordpress数据表分析</title>
      <link href="/2019/02/23/wordpress%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%88%86%E6%9E%90/"/>
      <url>/2019/02/23/wordpress%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>wordpress一共是有12个表的:<br>|wp_commentmeta        |<br>| wp_comments           |<br>| wp_links              |<br>| wp_options            |<br>| wp_postmeta           |<br>| wp_posts              |<br>| wp_term_relationships |<br>| wp_term_taxonomy      |<br>| wp_termmeta           |<br>| wp_terms              |<br>| wp_usermeta           |<br>| wp_users                 |</p><p>主要参考这篇文章:<a href="https://www.cnblogs.com/wordblog/p/6591499.html" target="_blank" rel="noopener">WordPress数据库及各表结构分析</a><br>另外没有搭建过wordpress的朋友们，可以参考我的这篇文章搭建wordpress和对wordpress有一个大致的了解，文章为<a href="https://www.cnblogs.com/youcong/p/9671294.html" target="_blank" rel="noopener">wordpress研究</a><br><a id="more"></a><br>十二个表对应的职能如下所示:</p><p>wp_commentmeta:存储评论的元数据<br>wp_comments:存储评论<br>wp_links:存储友情链接<br>wp_options:存储wordpress系统选项和插件、主题配置<br>wp_postmeta:存储文章(包括页面、上传文件、修订)的元数据<br>wp_posts:存储文章(包括页面、上传文件、修订)<br>wp_term_relationships:存储每个文章、链接和对应分类的关系<br>wp_term_taxonomy:存储每个目录、标签所对应的分类<br>wp_termmeta:存储网站分类和标签的属性<br>wp_terms:存储每个目录、标签<br>wp_usermeta:存储用户的元数据<br>wp_users:存储用户</p><h4><span id="wp_commentmeta">wp_commentmeta:</span></h4><p>meta_id:自增唯一ID<br>comment_id:对应评论ID<br>meta_key:键名<br>meta_value:键值</p><h4><span id="wp_comments">wp_comments</span></h4><p>comment_ID:自增唯一ID<br>comment_post_ID:对应文章ID<br>comment_author:评论者<br>comment_author_email:评论者邮箱<br>comment_author_url:评论者网址<br>comment_date:评论时间<br>comment_date_gmt:评论时间(GMT+0时间)<br>comment_content:评论正文<br>comment_karma:未知(通过搜索引擎查找，这个字段在wordpress中并没有起到作用)<br>comment_approved:评论是否被批准<br>comment_agent:评论者的USER_AGENT<br>comment_type:评论类型(<a href="https://baike.baidu.com/item/PingBack/6316909?fr=aladdin" target="_blank" rel="noopener">PingBack</a>/普通)<br>comment_parent:父评论ID<br>user_id:评论者用户ID(不一定存在，考虑到游客或者其它因素)</p><h4><span id="wp_links">wp_links</span></h4><p>link_id:自增唯一ID<br>link_url:链接URL<br>link_name:链接标题<br>link_image:链接图片<br>link_target:链接打开方式<br>link_description:链接描述<br>link_visible:是否可见(Y/N)<br>link_owner:添加者用户ID<br>link_rating:评分等级<br>link_updated:未知<br>link_rel:XFN关系(关于XFN关系，了解详情，请参考该篇博文:<a href="https://www.fujieace.com/wordpress/xfn.html" target="_blank" rel="noopener">https://www.fujieace.com/wordpress/xfn.html</a>)<br>link_notes:XFN注释<br>link_rss:链接RSS地址</p><h4><span id="wp_options">wp_options</span></h4><p>option_id:自增唯一ID<br>blog_id:博客ID，用于多用户博客，默认为0<br>option_name:键名<br>option_value:键值<br>authload:在WordPress载入时自动载入(yes/no)</p><h4><span id="wp_postmeta">wp_postmeta</span></h4><p>meta_id:自增唯一ID<br>post_id:对应文章ID<br>meta_key:键名<br>meta_value:键值</p><h4><span id="wp_posts">wp_posts</span></h4><p>ID:自增唯一ID<br>post_author:对应作者ID<br>post_date:发布时间<br>post_date_gmt:发布时间(GMT+0时间)<br>post_content:正文<br>post_title:标题<br>post_excerpt:摘录<br>post_status:文章状态(publish/auto-draft/inherit)<br>post_password:文章密码<br>post_name:文章缩略名<br>to_ping:ping的链接<br>pinged:已经PING过的链接<br>post_modified:修改时间<br>post_modified_gmt:修改时间(GMT+0时间)<br>post_content_filtered:未知<br>post_parent:父文章，主要用于page<br>guid:未知<br>menu_order:排序ID<br>post_type:文章类型(post/page等)<br>post_mime_type:MIME类型<br>comment_count:评论总数</p><h4><span id="wp_terms">wp_terms</span></h4><p>term_id:分类ID<br>name:分类名<br>slug:缩略名<br>term_group:未知</p><h4><span id="wp_term_relationships">wp_term_relationships</span></h4><p>object_id:对应文章ID/链接ID<br>term_taxonomy_id:对应分类方法ID<br>term_order:排序</p><h4><span id="wp_term_taxonomy">wp_term_taxonomy</span></h4><p>term_taxonomy_id:wp_term_taxonomy表ID<br>term_id:对应wp_terms表中的ID<br>taxonomy:表示分类系统(category/post_tag)<br>description:分类描述<br>parent:父分类ID<br>count:分类文章总数</p><h4><span id="wp_usermeta">wp_usermeta</span></h4><p>umeta_id:自增唯一ID<br>user_id:对应用户ID<br>meta_key:键名<br>meta_value:键值</p><h4><span id="wp_users">wp_users</span></h4><p>ID:自增唯一ID<br>user_login:登录名<br>user_pass:密码<br>user_nickname:昵称<br>user_email:邮箱<br>user_url:网址<br>user_registered:注册时间<br>user_status:用户状态<br>display_name:显示名称</p><p>通过上述我们知道了wordpress十二张表的含义了。但是我仍然不打算快速入手开发。<br>原因很简单，感性认识不够。<br>那么如何加深这个感性认识呢？<br>那就是使用。<br>我将把我在上面的使用写一个文档。</p><p>wordpress针对用户有这么几个角色设置(对应着权限):<br>管理员、订阅者、投稿者、作者、编辑等。</p><p>以我个人的理解如下:</p><p>管理员肯定是拥有绝对权限的。</p><p>订阅者，就好比我们订报纸，每天早上都会有邮政的人将报纸送到邮箱里，我们就可以拿起报纸阅读了。</p><p>投稿者:投稿者就更好理解了，写完稿子递交上去，如果稿子ok没有问题，就可以在对应的周刊上登记了。</p><p>作者:以我在博客园发布文章，博客园作为一个平台，我在上面可以随时编写文章然后发布，不需要经过任何人审批以后才能发布(当然了，发布首页给广大的朋友们看，还是需要经过审批的)</p><p>编辑:我觉得可以和阿里云云栖社区联系起来，我之前将博客园迁移到云栖社区，在该社区每次发布一篇文章需要经过人工审核，人工审核通过后才能给别人看到，这个编辑可以随意删除文章禁止文章发布。</p><p>关于wordpress权限含义可以参考这篇文章:<a href="https://baijiahao.baidu.com/s?id=1611569585137454290&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1611569585137454290&amp;wfr=spider&amp;for=pc</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈存储系统</title>
      <link href="/2019/02/23/%E8%B0%88%E8%B0%88%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/02/23/%E8%B0%88%E8%B0%88%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>文件存储是开发中常常用到的。下面我将对如下存储系统进行说明:</p><ul><li>阿里云OSS</li><li>ftp</li><li>Java常规存储</li></ul><h2><span id="一-阿里云oss">一、阿里云OSS</span></h2><p>阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。其数据设计持久性不低于99.999999999%，服务设计可用性不低于99.99%。具有与平台无关的RESTful API接口，您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。</p><p>您可以使用阿里云提供的API、SDK接口或者OSS迁移工具轻松地将海量数据移入或移出阿里云OSS。数据存储到阿里云OSS以后，您可以选择标准类型（Standard）的阿里云OSS服务作为移动应用、大型网站、图片分享或热点音视频的主要存储方式，也可以选择成本更低、存储期限更长的低频访问类型（Infrequent Access）和归档类型（Archive）的阿里云OSS服务作为不经常访问数据的备份和归档。<br>(引自官方文档，官方文档可参考:<a href="https://help.aliyun.com/video_detail/39708.html?spm=5176.10695662.1996646101.searchclickresult.6ce04d08gnXv2N" target="_blank" rel="noopener">https://help.aliyun.com/video_detail/39708.html?spm=5176.10695662.1996646101.searchclickresult.6ce04d08gnXv2N</a>)<br><a id="more"></a><br>使用步骤(均来自官方文档)</p><h3><span id="1加入maven依赖">1.加入Maven依赖</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.aliyun.oss&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;aliyun-sdk-oss&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.8.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3><span id="2编写上传类">2.编写上传类</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.ByteArrayInputStream;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileNotFoundException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">import com.aliyun.oss.OSSClient;</span><br><span class="line">import com.aliyun.oss.model.GetObjectRequest;</span><br><span class="line"></span><br><span class="line">public class UploadOSS &#123;</span><br><span class="line">    //上传文件(以上传图片为例)</span><br><span class="line">public static void main(String[] args) throws Exception &#123;</span><br><span class="line">// Endpoint以杭州为例，其它Region请按实际情况填写。</span><br><span class="line">String endpoint = &quot;http://oss-cn-beijing.aliyuncs.com&quot;;</span><br><span class="line">// 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建RAM账号。</span><br><span class="line">String accessKeyId = &quot;访问密钥ID&quot;;</span><br><span class="line">String accessKeySecret = &quot;访问密钥&quot;;</span><br><span class="line">String bucketName = &quot;challenegertech&quot;;</span><br><span class="line">String objectName=&quot;AdminLTE.PNG&quot;;</span><br><span class="line">// 创建OSSClient实例。</span><br><span class="line">OSSClient ossClient = new OSSClient(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">// 上传文件流。</span><br><span class="line">InputStream inputStream = new FileInputStream(&quot;C://Users//eluzhu//Pictures//AdminLTE.PNG&quot;);</span><br><span class="line">ossClient.putObject(bucketName,objectName, inputStream);</span><br><span class="line"></span><br><span class="line">// 关闭OSSClient。</span><br><span class="line">ossClient.shutdown();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或许有人问，不太明白上述参数是从那里获取到的，这里我建议去官方文档上面看，如下:<br><a href="https://help.aliyun.com/video_detail/39708.html?spm=5176.10695662.1996646101.searchclickresult.6ce04d08gnXv2N" target="_blank" rel="noopener">https://help.aliyun.com/video_detail/39708.html?spm=5176.10695662.1996646101.searchclickresult.6ce04d08gnXv2N</a></p><p>像腾讯云、百度云、七牛云等存储系统，其实和阿里云相差并不大，都可以用。我公司其中一个项目用到的存储系统就是腾讯云。像我之前研究的一个jeesite开源项目，其存储系统主要用的是七牛云。</p><p>关于腾讯云、百度云、七牛云详细对比，感兴趣的可以参考这篇文章<a href="http://www.chinaz.com/news/2017/0724/792857.shtml" target="_blank" rel="noopener">腾讯云、七牛云、阿里云存储对比</a></p><h2><span id="二-ftp">二、ftp</span></h2><p>由于我主要参考wordpress，所以关于存储那块，我也准备采用ftp的方式。<br>关于FTP服务搭建可以参考如下文章:<br><a href="http://https://www.cnblogs.com/youcong/p/7820050.html" target="_blank" rel="noopener">FTP服务搭建(以CentOS7为例)</a><br><a href="https://www.cnblogs.com/YangJieCheng/p/8252577.html" target="_blank" rel="noopener">FTP服务搭建(以Ubuntu16.04为例)</a></p><p>关于Java当中如何使用FTP上传下载文件，大家可以参考如下步骤:</p><h4><span id="1添加maven依赖">1.添加maven依赖</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-net&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-net&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4><span id="2添加配置类主要是ftp配置相关信息">2.添加配置类(主要是ftp配置相关信息)</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.config;</span><br><span class="line"></span><br><span class="line">public class FtpConfig &#123;</span><br><span class="line">private int port; //ftp端口</span><br><span class="line">private String ftpLoginName; //ftp服务器登录账户</span><br><span class="line">private String ftpLoginPwd; //ftp服务器登录密码</span><br><span class="line">private String hostName; //ftp主机ip</span><br><span class="line">private String basePath; //ftp文件基础路径</span><br><span class="line">private String baseImgUrl; //ftp前端界面图片访问路径</span><br><span class="line"></span><br><span class="line">public String getBasePath() &#123;</span><br><span class="line">    return basePath;</span><br><span class="line">&#125;</span><br><span class="line">public void setBasePath(String basePath) &#123;</span><br><span class="line">    this.basePath = basePath;</span><br><span class="line">&#125;</span><br><span class="line">public String getBaseImgUrl() &#123;</span><br><span class="line">    return baseImgUrl;</span><br><span class="line">&#125;</span><br><span class="line">public void setBaseImgUrl(String baseImgUrl) &#123;</span><br><span class="line">    this.baseImgUrl = baseImgUrl;</span><br><span class="line">&#125;</span><br><span class="line">public int getPort() &#123;</span><br><span class="line">    return port;</span><br><span class="line">&#125;</span><br><span class="line">public void setPort(int port) &#123;</span><br><span class="line">    this.port = port;</span><br><span class="line">&#125;</span><br><span class="line">public String getFtpLoginName() &#123;</span><br><span class="line">    return ftpLoginName;</span><br><span class="line">&#125;</span><br><span class="line">public void setFtpLoginName(String ftpLoginName) &#123;</span><br><span class="line">    this.ftpLoginName = ftpLoginName;</span><br><span class="line">&#125;</span><br><span class="line">public String getFtpLoginPwd() &#123;</span><br><span class="line">    return ftpLoginPwd;</span><br><span class="line">&#125;</span><br><span class="line">public void setFtpLoginPwd(String ftpLoginPwd) &#123;</span><br><span class="line">    this.ftpLoginPwd = ftpLoginPwd;</span><br><span class="line">&#125;</span><br><span class="line">public String getHostName() &#123;</span><br><span class="line">    return hostName;</span><br><span class="line">&#125;</span><br><span class="line">public void setHostName(String hostName) &#123;</span><br><span class="line">    this.hostName = hostName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="3添加工具类并编写main方法测试">3.添加工具类并编写main方法测试</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">package com.blog.springboot.utils;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileNotFoundException;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line">import java.net.SocketException;</span><br><span class="line">import java.util.UUID;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.net.ftp.FTP;</span><br><span class="line">import org.apache.commons.net.ftp.FTPClient;</span><br><span class="line">import org.apache.commons.net.ftp.FTPFile;</span><br><span class="line">import org.apache.commons.net.ftp.FTPReply;</span><br><span class="line"></span><br><span class="line">import com.blog.springboot.controller.AbstractController;</span><br><span class="line"></span><br><span class="line">public class FtpUtils extends AbstractController&#123;</span><br><span class="line">    FTPClient ftpClient=new FTPClient();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * @param hostName ftp服务器主机名ip</span><br><span class="line">     * @param port  ftp服务器连接断口</span><br><span class="line">     * @param loginName  ftp服务器登录名</span><br><span class="line">     * @param loginPwd  ftp服务器登录密码</span><br><span class="line">     */</span><br><span class="line">    public void FtpLogin(String hostName,int port,String loginName,String loginPwd)&#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            ftpClient.connect(hostName, port);</span><br><span class="line">            ftpClient.login(loginName, loginPwd);</span><br><span class="line">            int reply=ftpClient.getReplyCode();   //判断ftp是否正确连接,返回状态码值在200~300之间表示正确连接</span><br><span class="line">            logger.info(&quot;reply:&quot;+reply);</span><br><span class="line">            if(!FTPReply.isPositiveCompletion(reply))&#123;</span><br><span class="line">                ftpClient.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (SocketException e) &#123;</span><br><span class="line">            logger.error(&quot;socket错误：&quot;,e);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            logger.error(&quot;io错误：&quot;,e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 断开ftp连接</span><br><span class="line">     */</span><br><span class="line">    public void closeConnection()&#123;</span><br><span class="line">        if(ftpClient.isConnected())&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                ftpClient.disconnect();</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                logger.error(&quot;io错误：&quot;,e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 修改文件名为uuid开头避免文件名重复</span><br><span class="line">     * @param fileName 获取上传的文件名</span><br><span class="line">     * @return 新的文件名</span><br><span class="line">     */</span><br><span class="line">    public String getFileSuffName(String fileName)&#123;</span><br><span class="line">        File file=new File(fileName);</span><br><span class="line">        String oldFileName=file.getName();</span><br><span class="line">        String suffixFileName=oldFileName.substring(oldFileName.lastIndexOf(&quot;.&quot;)+1);</span><br><span class="line"></span><br><span class="line">        String uuid=UUID.randomUUID().toString().replace(&quot;-&quot;,&quot;&quot;);</span><br><span class="line">        String newFileName=uuid+&quot;.&quot;+suffixFileName;</span><br><span class="line"></span><br><span class="line">        return newFileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 上传文件</span><br><span class="line">     * @param filePath 文件路径，如 2019/02/23</span><br><span class="line">     * @param basePath 基础路径  /home/ftpUpFile/</span><br><span class="line">     * @param is 文件流</span><br><span class="line">     * @param fileName 文件名称</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public boolean uploadFile(String filePath,String basePath,InputStream is,String fileName)&#123;</span><br><span class="line">        boolean flag=false;</span><br><span class="line">        try &#123;</span><br><span class="line">            if(!ftpClient.changeWorkingDirectory(basePath+filePath))&#123;</span><br><span class="line">                String[] dirs=filePath.split(&quot;/&quot;);</span><br><span class="line">                String tempPath=basePath;</span><br><span class="line">                for(String dir:dirs)&#123;</span><br><span class="line">                    if(null==dir || &quot;&quot;.equals(dir))continue;</span><br><span class="line">                    tempPath+=&quot;/&quot;+dir;</span><br><span class="line">                    if(!ftpClient.changeWorkingDirectory(tempPath))&#123;</span><br><span class="line">                        if(!ftpClient.makeDirectory(tempPath))&#123;</span><br><span class="line">                            return flag;</span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                            ftpClient.changeWorkingDirectory(tempPath);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ftpClient.setFileType(FTP.BINARY_FILE_TYPE);//设置文件为二进制流</span><br><span class="line">            if(!ftpClient.storeFile(fileName, is))&#123; //上传文件</span><br><span class="line">                return flag;</span><br><span class="line">            &#125;</span><br><span class="line">            is.close();</span><br><span class="line">            ftpClient.logout();</span><br><span class="line">            flag=true;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            logger.error(&quot;io错误：&quot;,e);</span><br><span class="line">        &#125;finally&#123;</span><br><span class="line">            closeConnection();</span><br><span class="line">        &#125;</span><br><span class="line">        return flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Description: 从FTP服务器下载文件</span><br><span class="line">     * @param host FTP服务器hostname</span><br><span class="line">     * @param port FTP服务器端口</span><br><span class="line">     * @param username FTP登录账号</span><br><span class="line">     * @param password FTP登录密码</span><br><span class="line">     * @param remotePath FTP服务器上的相对路径</span><br><span class="line">     * @param fileName 要下载的文件名</span><br><span class="line">     * @param localPath 下载后保存到本地的路径</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public  boolean downloadFile(String remotePath,String fileName, String localPath) &#123;</span><br><span class="line">        boolean result = false;</span><br><span class="line">        try &#123;</span><br><span class="line">            ftpClient.changeWorkingDirectory(remotePath);// 转移到FTP服务器目录</span><br><span class="line">            FTPFile[] files = ftpClient.listFiles();</span><br><span class="line">            for (FTPFile ff : files) &#123;</span><br><span class="line">                if (ff.getName().equals(fileName)) &#123;</span><br><span class="line">                    File localFile = new File(localPath + &quot;/&quot; + ff.getName());</span><br><span class="line"></span><br><span class="line">                    OutputStream is = new FileOutputStream(localFile);</span><br><span class="line">                    ftpClient.retrieveFile(ff.getName(), is);</span><br><span class="line">                    is.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ftpClient.logout();</span><br><span class="line">            result = true;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            closeConnection();</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws FileNotFoundException &#123;</span><br><span class="line">    FtpUtils f = new FtpUtils();</span><br><span class="line">    f.FtpLogin(&quot;192.168.126.130&quot;, 21, &quot;ftp&quot;, &quot;ftp.&quot;);</span><br><span class="line"></span><br><span class="line">    FileInputStream in=new FileInputStream(new File(&quot;C://Users//test//Downloads//AdminLTE.PNG&quot;));</span><br><span class="line">    f.uploadFile(&quot;image&quot;, &quot;/home/ftpuser/ftp&quot;, in, &quot;AdminLTE.PNG&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="三-java常规存储">三、Java常规存储</span></h2><p>常规存储，一般情况是存在tomcat某个文件夹下，或者是将文件以流的形式写入数据库对应的表中(通常不建议这么做，极大的损耗数据库的I/O流和存储容量)。<br>下面链接大家可以做个参考:<br>Java上传文件到tomcat:<a href="https://blog.csdn.net/qq_41463655/article/details/84145602" target="_blank" rel="noopener">https://blog.csdn.net/qq_41463655/article/details/84145602</a><br>Java常见三种上传文件方式(其中有包括流的方式):<a href="https://blog.csdn.net/weixin_39640122/article/details/80244527" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39640122/article/details/80244527</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js之express框架</title>
      <link href="/2019/02/22/node-js%E4%B9%8Bexpress%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/02/22/node-js%E4%B9%8Bexpress%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>之前学习过node.js接触过express框架，最近为了编写一个mock server正好用到了express。下面正好就跟大家介绍一下关于express。<br>今天的内容主要围绕这么几个方面?</p><ul><li>express框架初步介绍</li><li>express框架中的app.use和app.get/app.post</li><li>mock server 介绍</li><li>mock server的实现思路</li></ul><a id="more"></a><h2><span id="一-express框架初步介绍">一、express框架初步介绍</span></h2><p>关于express框架的介绍，这里我引用菜鸟教程的简介:<br>Express是一个简洁而灵活的node.js web框架，提供了一系列强大特性帮助你创建各种web应用，和丰富的HTTP工具。使用Express可以快速地搭建一个完整功能的网站。</p><h4><span id="1express框架的特性">1.express框架的特性</span></h4><p>（1）可以设置中间件来响应HTTP请求；<br>（2）定义了路由表用于执行不同大的HTTP请求动作；<br>（3）可以通过向模板传递参数来动态渲染HTML页面；</p><h4><span id="2安装express">2.安装express</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save或cnpm install express --save</span><br></pre></td></tr></table></figure><p>以下几个重要需要与express框架一起安装:<br>body-parser -node.js中间件，用于处理JSON，Raw，Text和URL编码的数据；<br>cookie-parser -这就是一个解析Cookie的工具。通过req.cookies可以取到传过来的cookie，并将它们转为对象；<br>multer - node.js中间件，用于处理enctype=“multipart/form-data”（设置表单mime编码)的表单数据；</p><p>安装命令如下所示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install body-parser --save</span><br><span class="line">npm install cookie-parser --save</span><br><span class="line">npm install multer --save</span><br></pre></td></tr></table></figure></p><h4><span id="3express的入门程序">3.express的入门程序</span></h4><p>node_learning.js代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line">var app = express();</span><br><span class="line"></span><br><span class="line">app.get(&apos;/&apos;, function (req, res) &#123;</span><br><span class="line">   res.send(&apos;Hello World&apos;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var server = app.listen(2019, function () &#123;</span><br><span class="line"></span><br><span class="line">  var host = server.address().address</span><br><span class="line">  var port = server.address().port</span><br><span class="line"></span><br><span class="line">  console.log(&quot;应用实例，访问地址为 http://127.0.0.1:2019&quot;, host, port)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2><span id="二-express框架中的appuse和appgetapppost">二、express框架中的app.use和app.get/app.post</span></h2><p>app.use和app.get/app.post其实区别如(引用一位朋友说的):<br>感兴趣的可以参考这个链接:<a href="https://blog.csdn.net/wthfeng/article/details/53366169" target="_blank" rel="noopener">作者做了试验测试过的</a><br>(1)app.use(path,callback)中的callback既可以是router对象又可以是函数<br>(2)app.get(path,callback)中的callback只能是函数</p><p>app.use和app.get/app.post实现几乎大同小异，代码示例如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line"></span><br><span class="line">var app = express();</span><br><span class="line"></span><br><span class="line">function testUser(req, res, next)&#123;</span><br><span class="line"></span><br><span class="line">    // req 参数可以接受一些请求的参数(req.query/req.body) 和 请求头信息</span><br><span class="line"></span><br><span class="line">    // res 用于响应信息</span><br><span class="line"></span><br><span class="line">    // 调用next()方法则进入下一个中间件</span><br><span class="line">res.send(&quot;测试用户&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function testLogin(req,res,next)&#123;</span><br><span class="line"></span><br><span class="line">res.send(&quot;测试登录&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var server = app.listen(2019, function () &#123;</span><br><span class="line"></span><br><span class="line">  var host = server.address().address</span><br><span class="line">  var port = server.address().port</span><br><span class="line"></span><br><span class="line">  console.log(&quot;应用实例，访问地址为 http://127.0.0.1:2019&quot;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//路径匹配</span><br><span class="line"></span><br><span class="line">app.use(&apos;/user&apos;,testUser);</span><br><span class="line"></span><br><span class="line">app.get(&apos;/login&apos;,testLogin);</span><br></pre></td></tr></table></figure></p><p>关于node.js的express框架就介绍这么多，最近本人因实现某个插件的功能而需要用到的，这与下面说的mock server有比较大的关系。</p><h2><span id="三-mock-server-介绍">三、mock server 介绍</span></h2><p>mock server 翻译过来的意思是模拟服务。<br>说到这我相信大家就很容易理解了。至于为什么要模拟服务？<br>比方说现今的业务系统很少有孤立存在的，它们或多或少使用其他公司提供的服务，这给我们联调和测试造成了比较大的麻烦，对于这种情况，常见的解决方案就是搭建一个mock server，模拟那些服务器，提供数据进行联调和测试(这句话，我引用自该链接<a href="https://www.cnblogs.com/fnng/p/7511539.html" target="_blank" rel="noopener">Mock Server 入门</a></p><p><img src="/2019/02/22/node-js之express框架/mock-server.png" alt="如图比较好解释mock-server的作用"></p><h2><span id="四-mock-server的实现思路">四、mock server的实现思路</span></h2><p>现在google或者being搜索mock server 实现思路肯定有很多，这里我就不再赘述。<br>这里我以我自己最近的vscode插件开发来说。<br>我最近的工作是针对Settings-Sync作二次开发<br>关于settings-sync插件，感兴趣的可以参考我的博客园<a href="https://www.cnblogs.com/youcong/p/10380501.html" target="_blank" rel="noopener">Settings-Sync源码阅读</a></p><p>如何实现一个mock server 替换github api地址并确保效果一致?</p><p>针对目前这个需求，我的实现思路如下:</p><p>第一，针对如何实现一个mock server ，可以复用已有，如mock-github-api(其本身是使用node.js的express框架);<br>第二，如何编写，可以按照express框架编写网络请求的方法，如app.get或app.use等;<br>第三，为了保持与githu api一致，我需要引入github rest api，如@octokit/rest;<br>参考api地址为:<a href="https://www.npmjs.com/package/@octokit/rest#authentication" target="_blank" rel="noopener">https://www.npmjs.com/package/@octokit/rest#authentication</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">示例一:</span><br><span class="line">  octokit.repos.listForOrg(&#123;</span><br><span class="line">  org: &apos;octokit&apos;,</span><br><span class="line">  type: &apos;public&apos;</span><br><span class="line">&#125;).then((&#123; data, status, headers &#125;) =&gt; &#123;</span><br><span class="line">  // handle data</span><br><span class="line">  //console.log(&quot;status:&quot;+JSON.stringify(headers));</span><br><span class="line">  //console.log(status);</span><br><span class="line">  console.log(data);</span><br><span class="line">&#125;)</span><br><span class="line">返回的octokit相关的api信息(信息太多了，就先简略)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">示例二:</span><br><span class="line">const clientWithAuth = new Octokit(&#123;</span><br><span class="line">    auth: &apos;token secret123&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">console.log(clientWithAuth)//查看详细信息</span><br><span class="line">console.log(JSON.stringify(clientWithAuth))//输出简要信息如下</span><br><span class="line">所示:</span><br><span class="line">返回的信息:</span><br><span class="line">&#123;&quot;log&quot;:&#123;&#125;,&quot;activity&quot;:&#123;&#125;,&quot;apps&quot;:&#123;&#125;,&quot;checks&quot;:&#123;&#125;,&quot;codesOfConduct&quot;:&#123;&#125;,&quot;emojis&quot;:&#123;&#125;,</span><br><span class="line">&quot;gists&quot;:&#123;&#125;,&quot;git&quot;:&#123;&#125;,&quot;gitignore&quot;:&#123;&#125;,&quot;interactions&quot;:&#123;&#125;,&quot;issues&quot;:&#123;&#125;,&quot;licenses&quot;:&#123;&#125;,</span><br><span class="line">&quot;markdown&quot;:&#123;&#125;,&quot;meta&quot;:&#123;&#125;,&quot;migrations&quot;:&#123;&#125;,&quot;oauthAuthorizations&quot;:&#123;&#125;,&quot;orgs&quot;:&#123;&#125;,</span><br><span class="line">&quot;projects&quot;:&#123;&#125;,&quot;pulls&quot;:&#123;&#125;,&quot;rateLimit&quot;:&#123;&#125;,&quot;reactions&quot;:&#123;&#125;,&quot;repos&quot;:&#123;&#125;,&quot;search&quot;:&#123;&#125;,</span><br><span class="line">&quot;teams&quot;:&#123;&#125;,&quot;users&quot;:&#123;&#125;,&quot;gitdata&quot;:&#123;&#125;,&quot;authorization&quot;:&#123;&#125;,&quot;pullRequests&quot;:&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四，根据router.json(node_modules\@octokit\rest\plugins\rest-api-endpoints\routes.json)也就是octokit里面定义github rest api的地方(该文件定义了所需的所有的请求信息)，我可以仿照其编写对应的网络请求（美其名依样画葫芦）；</p><p>如果要用一句简单直接的话来概述，模仿github rest api编写一个mock server来替换github，只要接口定义保持一致就可以。<br>但是目前存在一个问题，我在此停滞不前。正在想办法解决这个问题。<br>这个问题是，我参考其对应的rest api文档写代码，但是其返回的信息却并没有我想要的，返回是一大堆没有用处的function之类的，而不是具体的信息。<br>但是以5why原则来看待这个问题：<br>为什么github api会返回一大堆function?</p><p>这些function有什么用?github api不会无缘无故返回没有用的东西</p><p>还有就是为什么console.log(clientWithAuth)返回详细信息，console.log(JSON.stringify(clientWithAuth))返回的却是简要信息呢？难道是因为非JSON数据吗？两者返回的都是JSON数据</p><p>我查找JSON.stringify()认为应该是这个原因:<br>JSON.stringify() 方法是将一个JavaScript值(对象或者数组)转换为一个 JSON字符串，如果指定了replacer是一个函数，则可以替换值，或者如果指定了replacer是一个数组，可选的仅包括指定的属性(参考地址为:<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify</a>)</p><p>另外前面虽说不讲mock server的实现思路，但是还是要推荐一下一个开源实现框架 moco。</p><p>github仓库地址为:<a href="https://github.com/dreamhead/moco" target="_blank" rel="noopener">https://github.com/dreamhead/moco</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot之加密</title>
      <link href="/2019/02/22/SpringBoot%E4%B9%8B%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/02/22/SpringBoot%E4%B9%8B%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>最近利用闲暇时间写了一个博客系统，主要参考wordpress，主要目的是为了提高自己的技术能力。</p><p>写代码写了两年多，联系到之前在学校的时候写过的一个博客系统，发现工作中开发的系统，技术上基本一致，业务逻辑方面存在差异。</p><p>比如博客系统可能面对高并发的场景，比如某个时间段访问量，再比如博客系统为了最大程度吸引用户(换句话说，提高用户粘性)，在界面上美观，使用上更加方便。通常界面美观伴随着前端js库的增多，特别是一些非常好看的画面或者图像是极其消耗带宽的，带宽如果不给力的话，页面半天打不开，同样也对于用户而言体验不好。</p><p>只想表达一个意思，软件开发万变不离其宗，本质上基本都是一个CMS系统(也许这句话武断了)。</p><p>话不多说，今天我要讲的关于SpringBoot加密。</p><a id="more"></a><p>SSM框架和SpringBoot中加密是不一样的，比如在SSM框架中可以使用Druid进行加密(主要对数据库密码或者是其它重要配置信息加密)，但是在SpringBoot就不一定会适用。</p><p>关于Druid加密，可以参考我的博客园这篇文章:<a href="https://www.cnblogs.com/youcong/p/10140043.html" target="_blank" rel="noopener">Druid加密</a></p><p>SpringBoot使用jasypt-spring-boot-starter加密，具体步骤如下:</p><h2><span id="一-导入maven依赖注意我的springboot版本为159建议最好版本别相差太多否则会出现依赖冲突等问题">一、导入Maven依赖(注意，我的springboot版本为1.5.9，建议最好版本别相差太多，否则会出现依赖冲突等问题)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line"></span><br><span class="line">&lt;version&gt;1.16&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2><span id="二-编写测试类">二、编写测试类</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package cn.test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;</span><br><span class="line"></span><br><span class="line">import org.jasypt.encryption.pbe.config.EnvironmentPBEConfig;</span><br><span class="line"></span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line">import org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"></span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.blog.springboot.Application;</span><br><span class="line"></span><br><span class="line">import com.blog.springboot.service.UsersService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import cn.hutool.core.util.RandomUtil;</span><br><span class="line"></span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line"></span><br><span class="line">@SpringBootTest(classes = Application.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</span><br><span class="line"></span><br><span class="line">public class JunitTest &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line"></span><br><span class="line">public void testEncrypt() throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        StandardPBEStringEncryptor standardPBEStringEncryptor = new StandardPBEStringEncryptor();</span><br><span class="line"></span><br><span class="line">        EnvironmentPBEConfig config = new EnvironmentPBEConfig();</span><br><span class="line"></span><br><span class="line">        config.setAlgorithm(&quot;PBEWithMD5AndDES&quot;);          // 加密的算法，这个算法是默认的</span><br><span class="line"></span><br><span class="line">        config.setPassword(&quot;lyh&quot;);                        // 加密的密钥</span><br><span class="line"></span><br><span class="line">        standardPBEStringEncryptor.setConfig(config);</span><br><span class="line"></span><br><span class="line">        //加密用户信息</span><br><span class="line"></span><br><span class="line">        String plainText = &quot;youcong&quot;;</span><br><span class="line"></span><br><span class="line">        String encryptedText = standardPBEStringEncryptor.encrypt(plainText);</span><br><span class="line"></span><br><span class="line">        //加密密码信息</span><br><span class="line"></span><br><span class="line">        String Enpassword = &quot;youcong&quot;;</span><br><span class="line"></span><br><span class="line">        String EnpasswordText = standardPBEStringEncryptor.encrypt(Enpassword);</span><br><span class="line"></span><br><span class="line">        String db=&quot;wordpress&quot;;</span><br><span class="line"></span><br><span class="line">        String dbEnc = standardPBEStringEncryptor.encrypt(db);</span><br><span class="line"></span><br><span class="line">        //加密地址信息</span><br><span class="line"></span><br><span class="line">        String DBAUrl = &quot;jdbc:mysql://localhost:3306/blog?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&quot;;</span><br><span class="line"></span><br><span class="line">        String DBAUrlText = standardPBEStringEncryptor.encrypt(DBAUrl);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;用户:&quot;+encryptedText);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;密码:&quot;+EnpasswordText);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;地址:&quot;+DBAUrlText);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;db:&quot;+dbEnc);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="三-在springboot的配置文件添加如下配置这里我以applicationyml配置为例">三、在springboot的配置文件添加如下配置(这里我以application.yml配置为例)</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">jasypt:</span><br><span class="line"></span><br><span class="line">  encryptor:</span><br><span class="line"></span><br><span class="line">    password: lyh</span><br></pre></td></tr></table></figure><p>问:为什么要加这段？</p><p>答:这里的password对应的值lyh相当于密钥，主要用于解密。</p><p>你在单元测试中以什么作为加密，那么在yml中就以什么作为解密。</p><h2><span id="四-配置applicationyml中的数据源">四、配置application.yml中的数据源</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">datasource:</span><br><span class="line"></span><br><span class="line">  url: ENC(cY3NmQF349TpBB0z0KavaiEPNDux/mKEss0UFeA11VTFC545rHh6t1rLC46GlX1b2rm8s5lzX49JmzFE4odcSiPafGZfQvnsHl2yVlLWM3kJg5DvVI4D0l5na3RUPTio4uz1gG9nML1u9ceHuj/yPb1097ZZfbCUsLSyRoeWvhhKuPxAM5mvGLZh641ArtVfRchNcdVZ1W4=)</span><br><span class="line"></span><br><span class="line">  username: ENC(BcbIdbvEq4yN8kezH5mDjg==)</span><br><span class="line"></span><br><span class="line">  password: ENC(Isk3pYM71258wxWTQOt3Dg==)</span><br><span class="line"></span><br><span class="line">  db-name: ENC(CZcfw3ZJN6TVCVxkCW9Ey6z6iAuszHO8)</span><br><span class="line"></span><br><span class="line">  filters: log4j,wall,mergeStat1</span><br></pre></td></tr></table></figure><p>问:为什么要在数据源中添加ENC?</p><p>答:这个ENC相当于解密的标识符。</p>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
